{\rtf1\ansi\ansicpg1252\deff0\deflang4105{\fonttbl{\f0\fmodern\fprq1\fcharset0 Courier New;}{\f1\fmodern\fcharset0 Courier New;}{\f2\fmodern Courier New;}{\f3\fmodern\fprq1 Courier New;}{\f4\froman\fprq2\fcharset0 Times New Roman;}{\f5\fnil\fcharset0 Courier New;}{\f6\fswiss\fprq2\fcharset0 Arial;}{\f7\froman Times New Roman;}{\f8\froman\fcharset0 Times New Roman;}}
{\colortbl ;\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue255;\red240\green32\blue0;\red176\green16\blue16;\red128\green0\blue0;}
\viewkind4\uc1\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf1\lang1033\f0\fs18 // Functions for reading and combining survey files\par
\cf2 // ------------------------------------------------------------------------------------------------------------\cf1\par
F\cf3 unction\cf1  \cf4 read_delimited_Oracle_\lang4105 By_catch_\lang1033 file\cf1 (in_path,file_name)\{\par
\tab\cf5 Character_Read\cf1 (\cf5 cat\cf1 (0,in_path,file_name),"obdata");\par
   OB_header = "\lang4105 OB_SURVEY_ID\tab OB_GEAR_ID\tab OB_TOW_NO\tab OB_species_name\tab OB_ITIS_CODE\tab OB_WEIGHT_KG\tab OB_VOLUME_M3\tab OB_NUMBER_CAUGHT\tab OB_COMMENT\tab OB_DUMMY"\par
\f1    obdata = \cf4\lang1033\f0 replace_header\cf1 (obdata,1,OB_header);\par
\pard\lang4105\f1  \lang1033\f0   Num_O\lang4105 B_\lang1033 recs = \cf5 len\cf1 (obdata)[1] -1;\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105\f1    \cf4\lang1033\f2 extract_fields\cf1 (\lang4105\f1 ob\lang1033\f0 data\f2 ,\lang4105\f1 0\lang1033\f2 )\lang4105\f1 ;\par
   \cf2 // OB_SURVEY_ID\cf1\par
   \cf2 // OB_GEAR_ID\cf1\par
   \cf2 // OB_TOW_NO\cf1\par
   \cf2 // \f0 OB_species_name - not in combined files\cf1\f1\par
   \cf2 // OB_ITIS_CODE\cf1\par
   \cf2 // OB_WEIGHT_KG\cf1\par
   \cf2 // OB_VOLUME_M3\cf1\par
   \cf2 // OB_NUMBER_CAUGHT\cf1\par
   \cf2 // OB_COMMENT\cf1\par
   \cf2 // OB_DUMMY\cf1\par
   \cf2 // OB_WEIGHT_KG = num(OB_WEIGHT_KG); // force numeric\cf1\par
   \cf5 Erase_variable\cf1 ("obdata");\par
\};\lang1033\f0\par
\cf2\f3 //------------------------------------------------------------------------------------------\cf1\par
\cf3\f0 Function\cf1  \cf4 read_delimited_Oracle_\lang4105 By_catch_\lang1033 file2\cf1 (in_path,file_name)\{\par
\tab\cf5 Character_Read\cf1 (\cf5 cat\cf1 (0,in_path,file_name),"obdata");\par
\tab OBdata = \cf5 drop\cf1 (1 0,obdata);  \cf2 // drop current header\cf1\par
\pard\lang4105\f1  \lang1033\f0   Num_O\lang4105 B_\lang1033 recs = \cf5 len\cf1 (obdata)[1];\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    OB_header = "\lang4105 OB_SURVEY_ID\tab OB_gear\tab OB_TOW_NO\tab OB_ITIS_CODE\tab OB_WEIGHT_KG\tab OB_volume_m3\tab OB_NUMBER_CAUGHT\tab OB_COND_CODE\tab OB_LIFE_HIST_STAGE\tab OB_SEX\tab OB_Count_Wgt\tab OB_COUNT\tab OB_COMMENT"\par
\f1    obdata = \cf4\lang1033\f0 replace_header\cf1 (obdata,1,OB_header);\par
\lang4105\f1    \cf4\lang1033\f2 extract_fields\cf1 (\lang4105\f1 ob\lang1033\f0 data\f2 ,\lang4105\f1 0\lang1033\f2 )\lang4105\f1 ;\par
   \cf2 // \f0 OB_ITIS_CODE = num(OB_ITIS_CODE);\cf1\f1\par
   \cf2 // OB_SURVEY_ID\cf1\par
   \cf2 // OB_GEAR_ID\cf1\par
   \cf2 // OB_TOW_NO\cf1\par
   \cf2 // OB_ITIS_CODE\cf1\par
   \cf2 // OB_WEIGHT_KG\cf1\par
   \cf2 // OB_VOLUME_M3\cf1\par
   \cf2 // OB_NUMBER_CAUGHT\cf1\par
   \cf2 // OB_COMMENT\cf1\par
   \cf2 // OB_DUMMY\cf1\par
   \cf5 Erase_variable\cf1 ("obdata");\par
\};\lang1033\f0\par
\cf2\f3 //------------------------------------------------------------------------------------------\cf1\f0\par
\cf2\f3 //------------------------------------------------------------------------------------------\cf1\f0\par
Function read_delimited_\lang4105 Catch_data_\lang1033 file(in_path,file_name)\{\par
\tab\cf5 Character_Read\cf1 (\cf5 cat\cf1 (0,in_path,file_name),"cdata");\par
\pard     Num_\lang4105 C_\lang1033 recs = \cf5 len\cf1 (cdata)[1];\par
\lang4105    $C_Header = "C_Survey\tab C_tow\tab Tot_Catch_Vol\tab Tot_Catch_kg\tab Vol_unit\tab Vol_Main_Sample\tab Kg_Main_Sample\tab Vol_B_Sample\tab Kg_B_Sample\tab ArSurf_kg\tab qua_kg\tab Prop_Kg\tab AtSurf_kg\tab Scal_kg\tab Cock_kg\tab IScal_kg\tab Rock_kg\tab C_Comment\tab dUMMY";\f4\fs24\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f1\fs18    C\lang1033\f0 data\lang4105\f1  = \cf4\lang1033\f0 replace_header\cf1 (Cdata,1,$C\lang4105 _Header)\lang1033 ;\par
\pard    Num_\lang4105 C_\lang1033 recs = \cf5 len\cf1 (cdata)[1] -1;\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105\f1    \cf4 E\lang1033\f2 xtract_fields\cf1 (\lang4105\f1 c\lang1033\f0 data\f2 ,\lang4105\f1 0\lang1033\f2 )\lang4105\f1 ;\lang1033\f2  \lang4105\f1                       \par
\pard\f0    \cf2\lang1033 // \lang4105 C_Survey\lang1033                                                  /\lang4105 / Survey ID\cf1\lang1033\par
\lang4105    \cf2\lang1033 // \lang4105 C_Tow\lang1033                                                     /\lang4105 / Tow number\cf1\lang1033\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tab\cf2 // \lang4105 Tot_Catch_Vol\lang1033                                            /\lang4105 /\lang1033   \lang4105 Total Catch Bu\lang1033                                    \cf1\par
\tab\cf2 // \lang4105 Tot_Catch_kg\lang1033                                             /\lang4105 /\lang1033   \lang4105 Total Catch Kg\lang1033                                    \cf1\par
\tab\cf2 // \lang4105 Volume_unit\lang1033                                              /\lang4105 /\lang1033   \lang4105 Total Catch Kg\lang1033                                    \cf1\par
\tab\cf2 // \lang4105 Vol_Main_Sample\lang1033                                          /\lang4105 /\lang1033   \lang4105 Number of bushels in Main catch sample\lang1033  \cf1\par
\tab\lang4105 Vol\lang1033 _main_Sample[\cf5 Bindex\cf1 (\lang4105 Vol_Main_Sample == \cf5 NAN\cf1 ())] = 0.;\lang1033                                   \par
\tab\cf2 // \lang4105 Kg_Main_Sample\lang1033                                           /\lang4105 /\lang1033   \lang4105 Kg in Main catch sample\lang1033  \cf1\par
\tab Kg_main_Sample[\cf5 Bindex\cf1 (\lang4105 Kg_Main_Sample == \cf5 NAN\cf1 ())] = 0.;\lang1033                                   \par
\tab\cf2 // \lang4105 Vol_B_Sample\lang1033                                             /\lang4105 /\lang1033   \lang4105 Number of bushels in by-catch sample\lang1033                                   \cf1\par
\tab\lang4105 Vol_B_Sample\lang1033 [\cf5 Bindex\cf1 (\lang4105 Vol_B_Sample == \cf5 NAN\cf1 ())] = 0.;\lang1033                                   \par
\tab\cf2 // \lang4105 Kg_B_Sample\lang1033                                              /\lang4105 /\lang1033   \lang4105 Kg in by-catch sample\lang1033  \cf1\par
\tab\lang4105 Kg_B_Sample\lang1033 [\cf5 Bindex\cf1 (\lang4105 Kg_B_Sample == \cf5 NAN\cf1 ())] = 0.;\lang1033                                   \par
\tab\cf2 // \lang4105 ArSurf_kg\lang1033                                                /\lang4105 /  Kg of Arctic surfclams in Main sample\lang1033  \cf1\par
\tab\lang4105 ArSurf_kg[\cf5 bindex\cf1 (ArSurf_kg == \cf5 NAN\cf1 ())]=0;\par
\lang1033\tab\cf2 // \lang4105 qua_kg\lang1033                                                   /\lang4105 /\lang1033   \lang4105 Kg of Ocean Quahogs in Main sample\lang1033                            \cf1\par
\lang4105    qua_kg[\cf5 bindex\cf1 (qua_kg == \cf5 NAN\cf1 ())] = 0;\par
\lang1033\tab\cf2 // \lang4105 Prop_Kg\lang1033                                                  /\lang4105 /\lang1033   \lang4105 Kg of Propellerclams in Main sample\lang1033                                   \cf1\par
\tab\lang4105 Prop_kg[\cf5 bindex\cf1 (prop_kg == \cf5 NAN\cf1 ())]=0;\par
\lang1033\tab\cf2 // \lang4105 AtSurf_kg\lang1033                                                \lang4105 /\lang1033 /\lang4105   Kg of Atlantic surfclams in Main sample\lang1033  \cf1\par
\tab\lang4105 AtSurf_kg[\cf5 bindex\cf1 (AtSurf_kg == \cf5 NAN\cf1 ())]=0;\par
   \cf2\lang1033 // \lang4105 Scal_kg\lang1033                                                  \lang4105 //\lang1033  \lang4105 Kg of Sea scallops in Main sample\lang1033  \cf1\par
\lang4105     Scal_kg[\cf5 bindex\cf1 (Scal_kg == \cf5 NAN\cf1 ())]=0;\par
\lang1033\tab\cf2 // \lang4105 Cock_kg\lang1033                                                 /\lang4105 / Kg of Greenland cockles in Main sample\lang1033  \cf1\par
\tab\lang4105 Cock_kg[\cf5 bindex\cf1 (Cock_kg == \cf5 NAN\cf1 ())]=0;\par
\lang1033\tab\cf2 // \lang4105 IScal_kg\lang1033                                                /\lang4105 / Kg of Iclandic scallops in Main sample\lang1033  \cf1\par
\tab\lang4105 IScal_kg[\cf5 bindex\cf1 (IScal_kg == \cf5 NAN\cf1 ())]=0;\par
\lang1033\tab\cf2 // \lang4105 Rock_kg\lang1033  =                                              /\lang4105 / Kg of Rock in Main sample\lang1033  \cf1\par
\tab\lang4105 Rock_kg[\cf5 bindex\cf1 (Rock_kg == \cf5 NAN\cf1 ())]=0;\par
\lang1033\tab\cf2 // \lang4105 C_Comment\lang1033                                               /\lang4105 / comments\cf1\par
\f1    \cf5 Erase_variable\cf1 ("cdata");\par
\f0\};\lang1033\par
\cf2 //------------------------------------------------------------------------------------------\cf1\par
\cf3 Function\cf1  \cf4 read_delimited_\lang4105 FreqSample_\lang1033 file\cf1 (in_path,file_name)\{\par
\tab\cf5 Character_Read\cf1 (\cf5 cat\cf1 (0,in_path,file_name),"fsdata");\par
\pard\lang4105    $FS_Header = "FS_Survey\tab FS_Species\tab FS_Name\tab FS_tow\tab num_measured\tab Weight_Measured\lang1033\tab\lang4105 Num_unmeasured\tab Weight_unmeasured\tab Weight_morph\tab ";\par
   $FS_Header = \cf5 cat\cf1 ($FS_header,"Weight_Not_retained\tab FS_comments\lang1033\tab\lang4105 Ave_Wgt\tab Dummy");\f4\fs24\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f1\fs18    \lang1033\f0 FSdata\lang4105\f1  = \cf4\lang1033\f0 replace_header\cf1 (FSdata,2,$\lang4105 FS_Header)\lang1033 ;\par
\pard    Num_fs\lang4105 _\lang1033 recs = \cf5 len\cf1 (fsdata)[1] - 1;\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105\f1    \cf4\lang1033\f2 extract_fields\cf1 (\lang4105\f1 fs\lang1033\f0 data\f2 ,\lang4105\f1 0\lang1033\f2 )\lang4105\f1 ;\lang1033\f2  \lang4105\f1           \cf2 // Parse data columns\cf1\lang1033\f2\par
\pard\f0    \cf2 // \lang4105 FS_Survey \lang1033                        /\lang4105 / Survey ID\cf1\par
   \cf2 // FS_Species                       // Species code (ITIS)\cf1\par
   \cf2 // FS_Name                          // Species name\cf1\par
\lang1033    \cf2 // \lang4105 FS_tow \lang1033                         \lang4105   \lang1033 /\lang4105 / Tow Number\cf1\par
   \cf2 // num_measured \lang1033                     /\lang4105 / Number of clams measured for Length Frequency\cf1\par
\lang1033    \cf2 // \lang4105 Weight_Measured\lang1033                   // total weight of clams measured\cf1\par
   \cf2 // \lang4105 Num_unmeasured \lang1033                   /\lang4105 / Number of unmeasured quahogs\cf1\par
\lang1033    \cf2 // \lang4105 Weight_unmeasured \lang1033                /\lang4105 / Weight of unmeasured quahogs\cf1\par
   \cf2 // Weight_morph \lang1033                     /\lang4105 / Weight of clams measured and retained for morphometrics\cf1\par
\lang1033    \cf2 // \lang4105 Weight_Not_retained \lang1033              /\lang4105 / Weight of clams measured and not retained\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033    \cf2 // \lang4105 FS_comments\lang1033                      // comments\cf1\lang4105\par
\pard\lang1033    \cf2 // \lang4105 Ave_Wgt \lang1033                         /\lang4105 / Average weight of measured clams\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033    \cf2 // \lang4105 Dummy\lang1033                            /\lang4105 / dummy column of 0's\cf1\par
\f1    \cf5 Erase_variable\cf1 ("fsdata");\par
\pard\f0\};\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033 //------------------------------------------------------------------------------------------\cf1\par
\cf3 Function\cf1  \cf4 read_delimited_\lang4105 Tow_data_\lang1033 file\cf1 (in_path,file_name,Dist_method)\{\par
\tab\cf5 Character_Read\cf1 (\cf5 cat\cf1 (0,in_path,file_name),"tdata");\par
\pard\lang4105\f5   \cf2 // tdata = tdata[bindex(((tdata[;seq(1,9)] == "T12008-01")||(tdata[;seq(1,9)] == "CK2006-01")||(tdata[;seq(1,9)] == "T12009-01")));]; // just Grand Bank surveys\cf1\par
  \cf2 // Set up vector of column headers to replace muliple line header in file\cf1\par
  $Header = "T_Survey\tab T_Date\tab T_Tow\tab Station\tab Tow_Type\tab Tow_Quality\tab Gear\tab Bearing\tab Depth_m\tab Speed\tab Start_Lat\tab Start_Long\tab Start_Time\tab End_Lat\tab End_Long"; \par
  $Header = \cf5 cat\cf1 ($Header,"\tab End_Time\tab Dist_m\tab Dist_adj\tab Bottom\tab WaveHeight\tab WindSpeed\tab Hawser_m\tab Comments\tab Dummy");\par
  tdata = \cf4 replace_Header\cf1 (tdata,1,$Header);\par
\lang1033\f0   Num_\lang4105 T_\lang1033 recs = \cf5 len\cf1 (tdata)[1] - 1;\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105\f1   \cf4\lang1033\f2 extract_fields\cf1 (\lang4105\f1 t\lang1033\f0 data\f2 ,\lang4105\f1 0\lang1033\f2 )\lang4105\f1 ;\lang1033\f2  \lang4105\f1          \cf2 // Parse data columns\cf1\lang1033\f2\par
\pard\lang4105\f0\tab\cf2 // T_\f6\fs20 Survey\f0\fs18                   \lang1033 /\lang4105 / Survey ID\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // T_\f6\fs20 Date\f0\fs18                     \lang1033 /\lang4105 / mm/dd/yy\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // T_\f6\fs20 Tow   \lang1033\f0\fs18   \lang4105                  \lang1033 /\lang4105 / Tow number\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Station\lang1033\f0\fs18       \lang4105             \lang1033 /\lang4105 /\lang1033   \lang4105 Station Number\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Tow_Type\lang1033\f0\fs18              \lang4105    \lang1033 /\lang4105 /\lang1033   \lang4105 Type of tow, reg survey = 1\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Tow_Quality\lang1033\f0\fs18               /\lang4105 /\lang1033   \lang4105 Tow quality, Good tow = 1\lang1033  \cf1\lang4105\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Gear\cf1\par
\f0\fs18\tab\cf2 // \f6\fs20 Bearing\lang1033\f0\fs18              \lang4105     \lang1033 /\lang4105 /\lang1033   \lang4105 Tow Direction\lang1033  \cf1\lang4105\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Depth_m\lang1033\f0\fs18     \lang4105            \lang1033 /\lang4105 /\lang1033   \lang4105 Depth (m)\lang1033  \cf1\lang4105\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Speed\lang1033\f0\fs18    \lang4105                \lang1033 /\lang4105 /\lang1033   \lang4105 Towing speed (knots)\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Start_Lat\lang1033\f0\fs18      \lang4105            \lang1033 /\lang4105 /\lang1033   \lang4105 Start Latitude\lang1033      \lang4105 ddmm.mm\lang1033  \cf1\lang4105\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Star_tLong\lang1033\f0\fs18  \lang4105              \lang1033 /\lang4105 /\lang1033   \lang4105 Start Longitude\lang1033      \lang4105 ddmm.mm\lang1033   \cf1\lang4105\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Start_Time\f0\fs18               \lang1033 /\lang4105 / Start Time  hh:mm\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 End_lat\f0\fs18   \lang1033               /\lang4105 / End Latitude\lang1033      \lang4105 ddmm.mm\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 End_long\lang1033\f0\fs18       \lang4105         /\lang1033 /\lang4105   End  Longitude\lang1033      \lang4105 ddmm.mm\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 End_time\lang1033\f0\fs18  \lang4105              //\lang1033  \lang4105  End Time  hh:mm\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Dist_m\lang1033\f0\fs18                /\lang4105 / Distance towed m\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Dist_adj\lang1033\f0\fs18                /\lang4105 / Distance towed adjusted for sensor readings\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Bottom\lang1033\f0\fs18          \lang4105      \lang1033 /\lang4105 / bottom type\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 WaveHeight\lang1033\f0\fs18          /\lang4105 / Wave height (m)\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 WindSpeed\lang1033\f0\fs18          /\lang4105 / Wind Speed \cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Hawser_m\lang1033\f0\fs18           /\lang4105 / Length of towing Hawser (feet)\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Comments\f0\fs18          \lang1033 /\lang4105 / comments\cf1\f6\fs20\par
\f0\fs18\tab\cf2 // \f6\fs20 Dummy\lang1033\f0\fs18      \lang4105       \lang1033 /\lang4105 / dummy column of 0's\cf1\f6\fs20\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0\fs18\tab\cf2\lang4105 //drop selectivity tows S1,S2 andS3\cf1\par
\tab\cf2 //tdata\lang1033  =\lang4105 tdata\lang1033  \lang4105 [bindex(shape(cat(0,len(tdata)[1],1),tdata[;10]) != "S");];\cf1\par
\lang1033\tab\cf2 //Original\lang4105 Tow\lang1033 Data = tdata;\cf1\par
   \cf2 //----------------------------------------------------------------\cf1\par
\lang4105\tab\cf2 // Now do conversions necessary\cf1\par
\tab\f6\fs20 Start_Lat\f0\fs18  = \lang1033 int(\lang4105\f6\fs20 Start_Lat\f0\fs18  \lang1033 /100.) + mod(\lang4105\f6\fs20 Start_Lat\f0\fs18  \lang1033 ,100)/60.\lang4105 ;\lang1033\par
\lang4105\tab\f6\fs20 Start_Long\f0\fs18  = -1*(\lang1033 int(\lang4105\f6\fs20 Start_Long\f0\fs18  \lang1033 /100.) + mod(\lang4105\f6\fs20 Start_Long\f0\fs18  \lang1033 ,100)/60.\lang4105 );\lang1033\par
\lang4105\tab\f6\fs20 End_lat\f0\fs18  = \lang1033 int(\lang4105\f6\fs20 End_lat\f0\fs18  \lang1033 /100.) + mod(\lang4105\f6\fs20 End_lat\f0\fs18  \lang1033 ,100)/60.\lang4105 ;\lang1033\par
\lang4105\tab\f6\fs20 End_long\f0\fs18  = -1*(\lang1033 int(\lang4105\f6\fs20 End_long\lang1033\f0\fs18 /100.) + mod(\lang4105\f6\fs20 End_long\f0\fs18  \lang1033 ,100)/60.\lang4105 );\lang1033\par
\lang4105    Month = num(T_date[;1 2]);\par
   Day = num(T_date[;4 5]);\par
   Year = 2000 + num(T_date[;7 8]);\par
   Pos = \cf5 cat\cf1 (2,\cf5 ave\cf1 (\cf5 cat\cf1 (2,Start_long,\f6\fs20 End_long\f0\fs18 ),2),\cf5 Ave\cf1 (\cf5 cat\cf1 (2,Start_lat,End_lat),2));\par
   Dist_m = Dist_m*1852. \cf2 // convert from nm\cf1\par
   dist_m[\cf5 bindex\cf1 (dist_m == \cf5 NAN\cf1 ())] = \cf5 ave\cf1 (dist_m[\cf5 bindex\cf1 (dist_m \cf3 !\cf1 = \cf5 NAN\cf1 ())]);\par
   \f5 Dist_adj\f0 [\cf5 bindex\cf1 (\f5 Dist_adj\f0  == \cf5 NAN\cf1 ())] = \cf5 ave\cf1 (\f5 Dist_adj\f0 [\cf5 bindex\cf1 (\f5 Dist_adj\f0  \cf3 !\cf1 = \cf5 NAN\cf1 ())]);\par
\lang1033    \cf2 //Set_tow_distance(Dist_method);\cf1\par
\lang4105\f1   \cf2 // Erase_variable("tdata");\cf1\par
\lang1033\f0\};\par
\cf2 //------------------------------------------------------------------------------------------\cf1\par
\cf3 Function\cf1  \cf4 Set_tow_distance\cf1 (Dist_adj)\{\par
\pard\lang4105\f5\tab\cf3 if\cf1 (Dist_adj == 2)\{\par
      \tab // Adjusting tow distance for 2006 and 2008 files for sensor data corrections from 2009 survey\par
\tab    gidx2008 = \cf5 bindex\cf1 ((\cf5 trim\cf1 (t_survey)  == "T12008-01")&&(dist_m \cf3 !\cf1 = \cf5 NAN\cf1 ())&&(Depth_m \cf3 !\cf1 = \cf5 NAN\cf1 ()));                              \cf2 // 2008 tows with adj distance and depth\cf1\par
\tab    dist_m[gidx2008] = Org_dist[gidx2008] * (1.1389 - 0.0033655*Depth_m[gidx2008]);\par
\tab    gidx2008d = \cf5 bindex\cf1 ((\cf5 trim\cf1 (t_survey)  == "T12008-01")&&(dist_m \cf3 !\cf1 = \cf5 NAN\cf1 ())&&(Depth_m == \cf5 NAN\cf1 ()));                             \cf2 // 2008 tows with adj distance but no depth\cf1\par
\tab    dist_m[gidx2008d] = Org_dist[gidx2008d] * (1.1389 - 0.0033655*\cf5 Ave\cf1 (Depth_m[gidx2008]));                                   \cf2 // Use average depth where missing\cf1\par
\tab    gidx2008 = \cf5 bindex\cf1 ((\cf5 trim\cf1 (t_survey)  == "T12008-01")&&(\f0 Org_dist\f5  \cf3 !\cf1 = \cf5 NAN\cf1 ())&&(dist_m == \cf5 NAN\cf1 ())&&(Depth_m \cf3 !\cf1 = \cf5 NAN\cf1 ()));         \cf2 // 2008 tows with no adj distance, marks dist and depth\cf1\par
\tab    \cf3 If\cf1 (\cf5 Len\cf1 (gidx2008) > 0)\{dist_m[gidx2008] = Org_dist[gidx2008] * (1.8850 - 0.0148*Depth_m[gidx2008]);\}; \par
\tab    bidx2008 = \cf5 bindex\cf1 ((\cf5 trim\cf1 (t_survey)  == "T12008-01")&&(\f0 Org_dist\f5  \cf3 !\cf1 = \cf5 NAN\cf1 ())&&(dist_m  == \cf5 NAN\cf1 ()) && (Depth_m == \cf5 NAN\cf1 ()));      \cf2 // 2008 tows with marks dist but no  depth\cf1\par
\tab    \cf3 If\cf1 (\cf5 Len\cf1 (bidx2008) > 0)\{dist_m[bidx2008] = Org_dist[bidx2008] * (1.8850 - 0.0148*\cf5 ave\cf1 (Depth_m[gidx2008]));\};                \cf2 // Use average depth for survey where missing\cf1\par
\tab    bidx2008 = \cf5 bindex\cf1 ((\cf5 trim\cf1 (t_survey)  == "T12008-01")&&(Org_dist == \cf5 NAN\cf1 ())&&(dist_m == \cf5 NAN\cf1 ()));                             \cf2 // 2008 tows with no dist \cf1\par
\tab    dist_m[bidx2008] = \cf5 ave\cf1 (dist_m[gidx2008]);                                                                                \cf2 // Use average distance\cf1\par
\tab    gidx2006 = \cf5 bindex\cf1 ((\cf5 trim\cf1 (t_survey)  == "CK2006-01")&&(dist_m \cf3 !\cf1 = \cf5 NAN\cf1 ())&&(Depth_m \cf3 !\cf1 = \cf5 NAN\cf1 ()));                              \cf2 // 2006 tows with adj distance and depth\cf1\par
\tab    dist_m[gidx2006] = Org_dist[gidx2006] * (1.1389 - 0.0033655*Depth_m[gidx2006]); \par
\tab    gidx2006d = \cf5 bindex\cf1 ((\cf5 trim\cf1 (t_survey)  == "CK2006-01")&&(dist_m \cf3 !\cf1 = \cf5 NAN\cf1 ())&&(Depth_m == \cf5 NAN\cf1 ()));                             \cf2 // 2006 tows with adj distance but no depth\cf1\par
\tab    \cf3 If\cf1 (\cf5 Len\cf1 (gidx2006d) > 0)\{dist_m[gidx2006d] = Org_dist[gidx2006d] * (1.1389 - 0.0033655*\cf5 Ave\cf1 (Depth_m[gidx2006]));\};          \cf2 // Use average depth where missing\cf1\par
\tab    gidx2006 = \cf5 bindex\cf1 ((\cf5 trim\cf1 (t_survey)  == "CK2006-01")&&(\f0 Org_dist\f5  \cf3 !\cf1 = \cf5 NAN\cf1 ())&&(dist_m == \cf5 NAN\cf1 ())&&(Depth_m \cf3 !\cf1 = \cf5 NAN\cf1 ()));         \cf2 // 2006 tows with no adj distance, marks dist and depth\cf1\par
\tab    \cf3 If\cf1 (\cf5 Len\cf1 (gidx2006) > 0)\{dist_m[gidx2006] = Org_dist[gidx2006] * (1.8850 - 0.0148*Depth_m[gidx2006]); \};\par
\tab    bidx2006 = \cf5 bindex\cf1 ((\cf5 trim\cf1 (t_survey)  == "CK2006-01")&&(\f0 Org_dist\f5  \cf3 !\cf1 = \cf5 NAN\cf1 ())&&(dist_m == \cf5 NAN\cf1 ()) && (Depth_m == \cf5 NAN\cf1 ()));       \cf2 // 2008 tows with marks dist but no  depth\cf1\par
\tab    \cf3 If\cf1 (\cf5 Len\cf1 (bidx2006) > 0)\{dist_m[bidx2006] = Org_dist[bidx2006] * (1.8850 - 0.0148*\cf5 ave\cf1 (Depth_m[gidx2006]));\};                \cf2 // Use average depth for survey where missing\cf1\par
\tab    bidx2006 = \cf5 bindex\cf1 ((\cf5 trim\cf1 (t_survey)  == "CK2006-01")&&(Org_dist == \cf5 NAN\cf1 ())&&(dist_m == \cf5 NAN\cf1 ()));                             \cf2 // 2006 tows with no dist \cf1\par
\tab    dist_m[bidx2006] = \cf5 ave\cf1 (dist_m[gidx2006]);                                                                                \cf2 // Use average distance\cf1\par
      \cf2 // Dist_m already corrected for sensor dist for 2009 survey\cf1\par
\tab    gidx2009 = \cf5 bindex\cf1 ((\cf5 trim\cf1 (t_survey)  == "T12009-01")&&(dist_m \cf3 !\cf1 = \cf5 NAN\cf1 ()));          \cf2 // 2009 tows with adj distance,\cf1\par
\tab    bidx2009 = \cf5 bindex\cf1 ((\cf5 trim\cf1 (t_survey)  == "T12009-01")&&(dist_m == \cf5 NAN\cf1 ()));          \cf2 // 2009 tows with no adj distance,\cf1\par
\tab    dist_m[bidx2009] = \cf5 ave\cf1 (dist_m[gidx2009]);                                        \cf2 // Use average distance\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0    \}\cf3 else\cf1  \cf3 if\cf1 (dist_adj == 1)\{                                                                \cf2 // Use smoothed track distance\cf1\par
\tab    \lang4105 gidx2006 = \cf5\lang1033 bindex\cf1 ((\cf5 trim\cf1 (t_survey) \lang4105  == "CK2006-01")&&(\f5 dist_m\f0  \cf3 !\cf1 = \cf5 NAN\cf1 ()));\par
\lang1033\tab    b\lang4105 idx2006 = \cf5\lang1033 bindex\cf1 ((\cf5 trim\cf1 (t_survey) \lang4105  == "CK2006-01")&&(\f5 dist_m\f0  == \cf5 NAN\cf1 ()));\par
\f5\tab    dist_m[bidx2006] = \cf5 ave\cf1 (dist_m[gidx2006]);\lang1033\f0\par
\tab    \lang4105 gidx2008 = \cf5\lang1033 bindex\cf1 ((\cf5 trim\cf1 (t_survey) \lang4105  == "T12008-01")&&(\f5 dist_m\f0  \cf3 !\cf1 = \cf5 NAN\cf1 ()));\par
\lang1033\tab    b\lang4105 idx2008 = \cf5\lang1033 bindex\cf1 ((\cf5 trim\cf1 (t_survey) \lang4105  == "T12008-01")&&(\f5 dist_m\f0  == \cf5 NAN\cf1 ()));\par
\lang1033\tab    dist_m[\lang4105 bidx2008]\lang1033  = \cf5 ave\cf1 (\lang4105 Org_dist\lang1033 [\lang4105 gidx2008]);                                         \cf2 // Use average distance\cf1\lang1033\par
\tab    \lang4105 gidx2009 = \cf5\lang1033 bindex\cf1 ((\cf5 trim\cf1 (t_survey) \lang4105  == "T12009-01")&&(\f5 dist_m\f0  \cf3 !\cf1 = \cf5 NAN\cf1 ()));\par
\lang1033\tab    b\lang4105 idx2009 = \cf5\lang1033 bindex\cf1 ((\cf5 trim\cf1 (t_survey) \lang4105  == "T12009-01")&&(\f5 dist_m\f0  == \cf5 NAN\cf1 ()));\par
\lang1033\tab    dist_m[\lang4105 bidx2009]\lang1033  = \cf5 ave\cf1 (\lang4105\f5 dist_m\lang1033\f0 [\lang4105 gidx2006]);                                           \cf2 // Use average distance  \cf1\par
\lang1033    \}\cf3 else\cf1  \cf3 if\cf1 (dist_adj == 0)\{                                                               \cf2 // Use original marks distance\cf1\par
\tab    \lang4105 gidx2006 = \cf5\lang1033 bindex\cf1 ((\cf5 trim\cf1 (t_survey) \lang4105  == "CK2006-01")&&(Org_dist \cf3 !\cf1 = \cf5 NAN\cf1 ()));\par
\lang1033\tab    dist_m[\lang4105 gidx2006]\lang1033  = \lang4105 Org_dist\lang1033 [\lang4105 gidx2006];                                              \cf2 // Use average distance\cf1\lang1033\par
\tab    b\lang4105 idx2006 = \cf5\lang1033 bindex\cf1 ((\cf5 trim\cf1 (t_survey) \lang4105  == "CK2006-01")&&(Org_dist == \cf5 NAN\cf1 ()));\par
\lang1033\tab    dist_m[\lang4105 bidx2006]\lang1033  = \cf5 ave\cf1 (\lang4105 Org_dist\lang1033 [\lang4105 gidx2006]);                                         \cf2 // Use average distance\cf1\lang1033\par
\tab    \lang4105 gidx2008 = \cf5\lang1033 bindex\cf1 ((\cf5 trim\cf1 (t_survey) \lang4105  == "T12008-01")&&(Org_dist \cf3 !\cf1 = \cf5 NAN\cf1 ()));\par
\lang1033\tab    dist_m[\lang4105 gidx2008]\lang1033  = \lang4105 Org_dist\lang1033 [\lang4105 gidx2008];                                              \cf2 // Use average distance\cf1\lang1033\par
\tab    b\lang4105 idx2008 = \cf5\lang1033 bindex\cf1 ((\cf5 trim\cf1 (t_survey) \lang4105  == "T12008-01")&&(Org_dist == \cf5 NAN\cf1 ()));\par
\lang1033\tab    dist_m[\lang4105 bidx2008]\lang1033  = \cf5 ave\cf1 (\lang4105 Org_dist\lang1033 [\lang4105 gidx2008]);                                         \cf2 // Use average distance\cf1\lang1033\par
\tab    \lang4105 gidx2009 = \cf5\lang1033 bindex\cf1 ((\cf5 trim\cf1 (t_survey) \lang4105  == "T12009-01")&&(Org_dist \cf3 !\cf1 = \cf5 NAN\cf1 ()));\par
\lang1033\tab    dist_m[\lang4105 gidx2009]\lang1033  = \lang4105 Org_dist\lang1033 [\lang4105 gidx2006];                                              \cf2 // Use average distance  \cf1\par
\lang1033\tab    b\lang4105 idx2009 = \cf5\lang1033 bindex\cf1 ((\cf5 trim\cf1 (t_survey) \lang4105  == "T12009-01")&&(Org_dist == \cf5 NAN\cf1 ()));\par
\lang1033\tab    dist_m[\lang4105 bidx2009]\lang1033  = \cf5 ave\cf1 (\lang4105 Org_dist\lang1033 [\lang4105 gidx2006]);                                         \cf2 // Use average distance  \cf1\par
   \};                                              \lang1033\par
\};\par
\cf2 //------------------------------------------------------------------------------------------\cf1\par
\cf3 Function\cf1  \cf4 read_delimited_\lang4105 Len_freq_data_\lang1033 file_combined\cf1 (in_path,file_name1,file_name2)\{         \cf2 // combined files exceed length for excel, split into 2 files\cf1\par
\tab\cf5 Character_Read\cf1 (\cf5 cat\cf1 (0,in_path,file_name1),"lfdata");\par
\tab\cf5 Character_Read\cf1 (\cf5 cat\cf1 (0,in_path,file_name2),"lfdata2");  \cf2 // data exceeds excel record limit, split into 2 files\cf1\par
\pard\lang4105    $LF_Header = "\lang1033 lf\lang4105 _Survey\tab\lang1033 lf\lang4105 _Species\lang1033\tab lf\lang4105 _Tow\tab\lang1033 lf\lang4105 _Len\tab\lang1033 lf\lang4105 _N_at_len";\f4\fs24\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0\fs18    LFdata3\lang4105\f1  = \lang1033\f0 Combine_files(lfdata,1,lfdata2);\par
\lang4105\f1    \lang1033\f0 LFdata3\lang4105\f1  = \lang1033\f0 replace_header(LFdata3,1,$LF\lang4105 _Header)\lang1033 ;\par
\pard    Num_lf\lang4105 _\lang1033 recs = \cf5 len\cf1 (lfdata3)[1] - 1;\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105  \f1   \lang1033\f2 extract_fields(\lang4105\f1 lf\lang1033\f0 data3\f2 ,\lang4105\f1 0\lang1033\f2 )\lang4105\f1 ;\lang1033\f2  \lang4105\f1        \cf2 // Parse data columns\cf1\lang1033\f2\par
\pard\lang4105\f0    \cf2 // \lang1033 lf\lang4105 _Survey\lang1033                      /\lang4105 / Survey ID\cf1\lang1033\par
\lang4105    \cf2 // \lang1033 lf\lang4105 _Species\lang1033                    /\lang4105 / Species code\cf1\lang1033\par
\lang4105    \cf2 // \lang1033 lf\lang4105 _Tow\lang1033                        /\lang4105 / Tow number\cf1\lang1033\par
\lang4105    \cf2 // \lang1033 lf\lang4105 _Len\lang1033                        /\lang4105 / Shell Length (mm)\cf1\lang1033\par
\lang4105    \cf2 // \lang1033 lf\lang4105 _N_at_len\lang1033                   /\lang4105 / Number at shell length\cf1\par
   \cf2 // \f6\fs20 Dummy\lang1033\f0\fs18      \lang4105                  \lang1033 /\lang4105 / dummy column of 0's\cf1\f6\fs20\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f1\fs18    \cf5 Erase_variable\cf1 ("lfdata");\par
   \cf5 Erase_variable\cf1 ("lfdata2");\par
   \cf5 Erase_variable\cf1 ("lfdata3");\par
\pard\lang1033\f0\};\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2 //------------------------------------------------------------------------------------------\cf1\par
\cf3 Function\cf1  \cf4 read_delimited_\lang4105 Len_freq_data_\lang1033 file\cf1 (in_path,file_name)\{\par
\tab\cf5 Character_Read\cf1 (\cf5 cat\cf1 (0,in_path,file_name),"lfdata");\par
\pard\lang4105    $LF_Header = "\lang1033 lf\lang4105 _Survey\tab\lang1033 lf\lang4105 _Species\lang1033\tab lf\lang4105 _Tow\tab\lang1033 lf\lang4105 _Len\tab\lang1033 lf\lang4105 _N_at_len";\f4\fs24\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f1\fs18    \lang1033\f0 LFdata\lang4105\f1  = \cf4\lang1033\f0 replace_header\cf1 (LFdata,1,$LF\lang4105 _Header)\lang1033 ;\par
\pard    Num_lf\lang4105 _\lang1033 recs = \cf5 len\cf1 (lfdata)[1] - 1;\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105  \f1   \cf4\lang1033\f2 extract_fields\cf1 (\lang4105\f1 lf\lang1033\f0 data\f2 ,\lang4105\f1 0\lang1033\f2 )\lang4105\f1 ;\lang1033\f2  \lang4105\f1        \cf2 // Parse data columns\cf1\lang1033\f2\par
\pard\lang4105\f0    \cf2 // \lang1033 lf\lang4105 _Survey\lang1033                      /\lang4105 / Survey ID\cf1\lang1033\par
\lang4105    \cf2 // \lang1033 lf\lang4105 _Species\lang1033                    /\lang4105 / Species code\cf1\lang1033\par
\lang4105    \cf2 // \lang1033 lf\lang4105 _Tow\lang1033                        /\lang4105 / Tow number\cf1\lang1033\par
\lang4105    \cf2 // \lang1033 lf\lang4105 _Len\lang1033                        /\lang4105 / Shell Length (mm)\cf1\lang1033\par
\lang4105    \cf2 // \lang1033 lf\lang4105 _N_at_len\lang1033                   /\lang4105 / Number at shell length\cf1\par
   \cf2 // \f6\fs20 Dummy\lang1033\f0\fs18      \lang4105                  \lang1033 /\lang4105 / dummy column of 0's\cf1\f6\fs20\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f1\fs18    \cf5 Erase_variable\cf1 ("lfdata");\par
\pard\lang1033\f0\};\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2 //------------------------------------------------------------------------------------------\cf1\par
F\cf3 unction\cf1  \cf4 Combine_files\cf1 (File1,H_Lines,File2)\{\par
\tab\cf2 // function to combine text files, may be different widths\cf1\par
\pard\lang4105\f5    $temp = \cf5 drop\cf1 (\cf5 cat\cf1 (0,H_Lines, 0),file2); \cf2 // Drop current header lines\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0\tab FW_2 = \cf5 len\cf1 ($temp)[2];    \cf2 // File2 width\cf1\par
\tab FW_1 = \cf5 len\cf1 (File1)[2];    \cf2 // File1 width\cf1\par
\tab\cf3 IF\cf1 (FW_2 < FW_1) \{      \cf2 // IF File2 width < File1 width\cf1\par
\tab\tab\lang4105\f5 $temp\lang1033\f0  = \cf5 cat\cf1 (2,\lang4105\f5 $temp\lang1033\f0 ,\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (\lang4105\f5 $temp\lang1033\f0 )[1],(FW_1 - FW_2))," "));   \cf2 // pad File2 with blanks to match File1 width\cf1\par
\tab\tab Out_m = \cf5 cat\cf1 (1,File1,$temp);\par
\tab\} \cf3 else\cf1  \cf3 if\cf1  (FW_2 > FW_1)\{   \cf2 // If File2 width > File1 width\cf1\par
\tab\tab $F1 = \cf5 cat\cf1 (2,File1, \cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (File1)[1], FW_2 - FW_1)," "));   \cf2 // Pad File1 with blanks to match File2 width\cf1\par
\tab\tab Out_m = \cf5 cat\cf1 (1,$F1,$temp);\par
\tab\}\cf3 else\cf1\{\par
\tab\tab Out_m = \cf5 cat\cf1 (1,File1,$temp);   \cf2 // Header and file same width\cf1\par
\tab\};\par
   \cf3 Return\cf1 (Out_m);\par
\};\par
\cf2 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf3\f2 Function\cf1  \cf4 read_delimited_\lang4105\f1 Morphometrics_\lang1033\f2 file\cf1 (in_path,file_name)\{\par
\lang4105\f1   \cf5\lang1033\f2 Character_Read\cf1 (\cf5 cat\cf1 (0,in_path,file_name),"\lang4105\f1 m\lang1033\f2 data");\par
\lang4105\f1   \lang1033\f2\tab\cf2\lang4105\f1 //\lang1033\f2 OriginalData = \lang4105\f1 m\lang1033\f2 data;\cf1\par
\pard\lang4105\f1    mheader = "\lang1033\f0 M\lang4105 _Survey\lang1033\tab M_CFV\tab M_day\tab M_Mon\tab M_year\tab\lang4105 M_\lang1033 T\lang4105 ow\lang1033\tab M_orig_lat\tab m_orig_long\tab M_ll_format\tab M_lat\tab M_long\tab\lang4105 M_Species\lang1033\tab M_trip\tab M_depth\tab M_processed\tab MS_Comment";\par
\lang4105\f1    mheader = \cf5 cat\cf1 (mheader,"\lang1033\f0\tab Clam\tab TotWgt\tab Leng\tab Hgt\tab Width\tab\lang4105 Shucked\tab\lang1033 ShCo\lang4105 lour\lang1033\tab ShCode\tab\lang4105 Syppan\lang1033\tab\lang4105 Syp\lang1033 Wet\tab\lang4105 Syp\lang1033 Code\tab Ft\lang4105 pan\lang1033\tab FtWet");\par
\lang4105\f1    mheader = \cf5 cat\cf1 (mheader,"\lang1033\f0\tab Ft\lang4105 gutted\lang1033\tab FtCode\tab Gonad\lang4105 Con\lang1033\tab Gonad\lang4105 Color\lang1033\tab Bd\lang4105 pan\lang1033\tab BdWet\tab BdCo\lang4105 lor\lang1033\tab BdCode\tab ShWet\lang4105\tab\lang1033 SandP\lang4105 an");\par
\f1    mheader = \cf5 cat\cf1 (mheader,"\lang1033\f0\tab SndWet\tab SndDry\tab\lang4105 Syp\lang1033 Dry\tab FtDry\tab Bd\lang4105 Dry\lang1033\tab ShDry\tab\lang4105 M_Comments\lang1033\tab Age\tab pConf\lang4105\tab Ager\lang1033\tab\lang4105 Age_Comments");\lang1033\tab\f4\fs24\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105\f1\fs18    mdata = \cf4 replace_header\cf1 (mdata,4,mheader);\lang1033\f2\par
\pard\f3    num_recs = \cf5 len\cf1 (\lang4105\f0 m\lang1033\f3 data)[1]\lang4105\f0  - 1\lang1033\f3 ;\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105\f1   \cf4\lang1033\f2 extract_fields\cf1 (\lang4105\f1 m\lang1033\f0 data\f2 ,\lang4105\f1 0\lang1033\f2 )\lang4105\f1 ;\lang1033\f2  \lang4105\f1                      \cf2 // Parse data columns\cf1\par
\pard\f0    \cf2\lang1033\f2 //\lang4105\f1  \lang1033\f0 M\lang4105 _Survey\lang1033                /\lang4105 / Survey ID\cf1\lang1033\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f2\tab\cf2 //\lang4105\f1  M_CFV\lang1033\f2                  // \lang4105\f1 Vessel CFV number\cf1\lang1033\f2\par
\tab\cf2 //\lang4105\f1  M_day\lang1033\f2                  // \lang4105\f1 Day\cf1\lang1033\f2\par
\tab\cf2 //\lang4105\f1  M_mon\lang1033\f2                  // \lang4105\f1 Month\cf1\lang1033\f2\par
\tab\cf2 //\lang4105\f1  M_Year\lang1033\f2                 // \lang4105\f1 Year\cf1\lang1033\f2\par
\tab\cf2 //\lang4105\f1  M_\lang1033\f2 T\lang4105\f1 ow\lang1033\f2                  // t\lang4105\f1 ow\lang1033\f2  number\cf1\par
\tab\cf2 //\lang4105\f1  M_Orig_lat\lang1033\f2             // \lang4105\f1 Original latitude\cf1\lang1033\f2\par
\tab\cf2 //\lang4105\f1  M_Orig_long\lang1033\f2            // \lang4105\f1 Original Longitude\cf1\lang1033\f2\par
\tab\cf2 //\lang4105\f1  M_LL_format\lang1033\f2            // \lang4105\f1 Format for Lat and Long\cf1\lang1033\f2\par
\tab\cf2 //\lang4105\f1  M_Lat\lang1033\f2                  // \lang4105\f1 Converted Latitude\cf1\lang1033\f2\par
\tab\cf2 //\lang4105\f1  M_Long\lang1033\f2                 // \lang4105\f1 Converted Longitude\cf1\lang1033\f2\par
\tab\cf2 //\lang4105\f1  M_Species\lang1033\f2              // \lang4105\f1 Species code\cf1\lang1033\f2\par
\tab\cf2 //\lang4105\f1  M_\lang1033\f2 T\lang4105\f1 rip\lang1033\f2                 // t\lang4105\f1 rip\lang1033\f2  number\cf1\par
\lang4105\f1    \cf2 // m_processed           //  Person who processed morphometrics\cf1\par
\lang1033\f2\tab\cf2 //\lang4105\f1  MS_Comments\lang1033\f2           \lang4105\f1  \lang1033\f2 // \lang4105\f1 Comments on morphometrics (Sample)\cf1\par
\lang1033\f2\tab\cf2 //\lang4105\f1  \lang1033\f2 Clam                  // Number of clam in sample\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 TotWgt                // Total weight (g)\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 Leng                  // Shell Length (mm)\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 Hgt                   // Shell Height (mm)\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 Width                 // Shell width (mm)\cf1\par
\tab\cf2 //\lang4105\f1  Shucked\lang1033\f2                // \lang4105\f1 Shucked\lang1033\f2  weight\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 ShCo\lang4105\f1 lour\lang1033\f2               // Shell co\lang4105\f1 lour code\lang1033\f2 , \cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 ShCode                // Shell code, no missing piecies of foot = 1\cf1\par
\tab\cf2 //\lang4105\f1  Syppan\lang1033\f2                 // Foot \lang4105\f1 pan\lang1033\f2  weight (g)\cf1\par
\tab\cf2 //\lang4105\f1  Syp\lang1033\f2 Wet                // Foot wet weight (g)\cf1\par
\tab\cf2 //\lang4105\f1  Syp\lang1033\f2 Code               // Foot code, no missing piecies of foot = 1\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 Ft\lang4105\f1 pan\lang1033\f2                  // Foot \lang4105\f1 pan\lang1033\f2  weight (g)\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 FtWet                 // Foot wet weight (g)\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 Ft\lang4105\f1 gutted\lang1033\f2               // \lang4105\f1 Gutted \lang1033\f2 Foot wet weight (g)\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 FtCode                // Foot code, no missing piecies of foot = 1\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 Gonad\lang4105\f1 Con\lang1033\f2               // Stage of development of gonad\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 Gonad\lang4105\f1 Color\lang1033\f2             // \lang4105\f1 Colour\lang1033\f2  of gonad\lang4105\f1  O = Orange, W = white\cf1\lang1033\f2\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 Bd\lang4105\f1 pan\lang1033\f2                  // Body \lang4105\f1 pan\lang1033\f2  weight (g)\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 BdWet                 // Body wet weight (g)\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 BdCo\lang4105\f1 lor\lang1033\f2                // Body code, no missing pieces of body = 1\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 BdCode                // Body code, no missing pieces of body = 1\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 ShWet                 // Shell wet weight (g)\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 SandP\lang4105\f1 an\lang1033\f2                // Sand \lang4105\f1 pan\lang1033\f2  weight (g)\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 SndWet                // Wet weight of sand (g)\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 SndDry                // Dry weight of sand\lang4105\f1  & pan\lang1033\f2  (g)\cf1\par
\tab\cf2 //\lang4105\f1  Syp\lang1033\f2 Dry                // Foot \lang4105\f1 & pan \lang1033\f2 dry weight (g)\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 FtDry                 // Foot \lang4105\f1 & pan \lang1033\f2 dry weight (g)\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 Bd\lang4105\f1 Dry\lang1033\f2                  // Body wet weight (g)\cf1\par
\lang4105\f1\tab\cf2\lang1033\f2 //\lang4105\f1  \lang1033\f2 ShDry                 // Shell dry weight (g)\cf1\par
\tab\cf2 //\lang4105\f1  M_Comments\lang1033\f2          \lang4105\f1   \lang1033\f2  // \lang4105\f1 Comments on morphometrics (clam)\cf1\par
\lang1033\f2\tab\cf2 //\lang4105\f1  \lang1033\f2 Age              \lang4105\f1      \lang1033\f2 // Age from \lang4105\f1 Raoufs\lang1033\f2 's ageing\cf1\par
\tab\cf2 //\lang4105\f1  \lang1033\f2 pConf                 // % confidence in age\cf1\par
\lang4105\f1\tab\cf2 // Ager                  // person aging\cf1\lang1033\f2\par
\tab\cf2 //\lang4105\f1  Age_Comments\lang1033\f2           // \lang4105\f1 Comments on ageing\cf1\par
\tab\cf5 Erase_variable\cf1 ("m\lang1033\f2 data\lang4105\f1 ");\par
\lang1033\f2\};\par
\cf2\f0 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf3 Function\cf1  \cf4 Index_tows\cf1 ()\{  \cf2 // make unique tow index across Surveys\cf1\par
\tab\cf2 // Assumes tow numbers unique within a survey and survey ID's are unique\cf1\par
\pard\lang4105    Survey_list = \cf5 distinct\cf1 (\cf5 cat\cf1 (1,\cf5 trim\cf1 (t_survey),\cf5 trim\cf1 (c_survey),\cf5 trim\cf1 (ob_survey_ID),\cf5 trim\cf1 (lf_survey),\cf5 trim\cf1 (fs_survey),\cf5 Trim\cf1 (m_survey))); \cf2 // List of surveys\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\tab num_surveys = \cf5 len\cf1 (Survey_list)[1];                     \cf2 // number of surveys in file \cf1\par
\tab Max_tow_num = \cf5 max\cf1 (t_tow);                              \cf2 // largest tow number used assumes tow data present for all surveys \cf1\par
    max_digits = \lang4105\f5 1 + \cf5 int\cf1 (\cf5 log10\cf1 (\lang1033\f0 Max_tow_num\lang4105\f5 ))\lang1033\f0 ;              \cf2 // maximum digits used for tow number\cf1\par
    \cf2 // Now make unique tow indicies based on surveys and tows listed in the tow data file\cf1\par
\lang4105\f5     tow_index =   \cf5 pow\cf1 (10,\lang1033\f0 max_digits) * \cf5\lang4105\f5 index\cf1 (t_survey,\lang1033\f0 Survey_list\lang4105\f5 ) + \lang1033\f0 t_\lang4105\f5 tow;  \cf2 // unique tow index\cf1\par
\lang1033\f0     C_tow_index = \lang4105\f5  \cf5 pow\cf1 (10,\lang1033\f0 max_digits) * \cf5\lang4105\f5 index\cf1 (C_survey,\lang1033\f0 Survey_list\lang4105\f5 ) + C_tow;  \cf2 // unique\cf1\lang1033\f0\par
 \cf2 //   B_tow_index = \lang4105\f5  pow(10,\lang1033\f0 max_digits) * \lang4105\f5 index(B_survey,\lang1033\f0 Survey_list\lang4105\f5 ) + B_tow;  // unique\cf1\lang1033\f0\par
    LF_tow_index =\lang4105\f5  \cf5 pow\cf1 (10,\lang1033\f0 max_digits) * \cf5\lang4105\f5 index\cf1 (LF_survey,\lang1033\f0 Survey_list\lang4105\f5 ) + LF_tow;  \cf2 // unique\cf1\lang1033\f0\par
    FS_tow_index = \cf5\lang4105\f5 pow\cf1 (10,\lang1033\f0 max_digits) * \cf5\lang4105\f5 index\cf1 (FS_survey,\lang1033\f0 Survey_list\lang4105\f5 ) + FS_tow;  \cf2 // unique\cf1\lang1033\f0\par
    OB_tow_index = \lang4105\f5  \cf5 pow\cf1 (10,\lang1033\f0 max_digits) * \cf5\lang4105\f5 index\cf1 (\cf5 trim\cf1 (OB_survey_ID),\lang1033\f0 Survey_list\lang4105\f5 ) + \f1 OB_TOW_NO\f5 ;  \cf2 // unique\cf1\lang1033\f0\par
    M_tow_index = \lang4105\f5  \cf5 pow\cf1 (10,\lang1033\f0 max_digits) * \cf5\lang4105\f5 index\cf1 (M_survey,\lang1033\f0 Survey_list\lang4105\f5 ) + M_tow;  \cf2 // unique\cf1\lang1033\f0\par
\};\par
\cf2 //------------------------------------------------------------------------------------------\cf1\par
\pard f\cf3 unction\cf1  \cf4 set_Parse\cf1 (cmatrix,delim)\{\par
  nrecs = len(cmatrix)[1];\par
  ncols = len(strfold(cmatrix[1;],delim))[1];\par
  cmatrix2 = cat(2,cmatrix,shape(cat(0,nrecs,1),delim));           // add delimiter to end of each record\par
  cc = (strfold(ravel(cmatrix2),delim));                           // matrix of 1 column all cells\par
  return(cc);\par
\};\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160 // ------------------------------------------------------------------------------------------------------------\par
\pard function parse_cm2(column,set_cm,ncols)\{ \par
  ncells = len(set_cm)[1];  \par
  cdata = trim(set_cm[seq(column,ncells,ncols);]);\par
  return(trim(cdata));                                             // second trim needed, different delimiter??\par
\};\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160 // ------------------------------------------------------------------------------------------------------------\par
\cf3 Function\cf1  \cf4 replace_header\cf1 (InFile,H_Lines,InH)\{\par
\tab\cf2 // function to replace header line at top of file\par
\pard\cf0\lang4105\f5    $temp = drop(cat(0,H_Lines, 0),Infile); // Drop current header lines\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf1\lang1033\f0\tab F_w = \cf5 len\cf1 ($temp)[2];    \cf2 // File width\cf1\par
\tab H_W = \cf5 len\cf1 (InH);       \cf2 // Header width\cf1\par
\tab\cf3 IF\cf1 (H_W < F_W) \{      \cf2 // IF Header width < File width\cf1\par
\tab\tab H2 = \cf5 cat\cf1 (InH,\cf5 shape\cf1 ((F_W - H_W)," "));   \cf2 // pad header with blanks to match file width\cf1\par
\tab\tab Out_m = \cf5 cat\cf1 (1,H2,$temp);\par
\tab\} \cf3 else\cf1  \cf3 if\cf1  (H_W > F_W)\{   \cf2 // If Header width > file width\cf1\par
\tab\tab F2 = \cf5 cat\cf1 (2,$temp, \cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 ($temp)[1], H_W - F_W)," "));   \cf2 // Pad file with blanks to match header width\cf1\par
\tab\tab Out_m = \cf5 cat\cf1 (1,InH,F2);\par
\tab\}\cf3 else\cf1\{\par
\tab\tab Out_m = \cf5 cat\cf1 (1,InH,$temp);   \cf2 // Header and file same width\cf1\par
\tab\};\par
   \cf3 Return\cf1 (Out_m);\par
\};\par
\cf2 //------------------------------------------------------------------------------------\cf1\par
\cf3 Function\cf1  \cf4 Get_catch_2_orc\cf1 (in_species,sel_tows,Standardize)\{\par
\tab\cf3 if\cf1 (\cf5 len\cf1 (sel_tows) == 1)\{\par
       t_indx = \cf5 bindex\cf1 (tow_index == sel_tows);               \cf2 // index of selected tow in tow data file\cf1\par
   \}\cf3 else\cf1\{\par
       t_indx = \cf5 bindex\cf1 (\cf5 member\cf1 (sel_tows,tow_index));               \cf2 // index of selected tows in tow data file\cf1\par
   \};\par
\tab\cf2 // mc_species = 4304 4312 4355 4317 4321 4343 4322;       // Species recorded in main catch using MFD codes\cf1\par
\tab mc_species = 81343 81763 80983 80944 79718 80879 79619;   \cf2 // species recorded in main catch using ITIS codes                           \cf1\par
   txt_vars = \cf5 strfold\cf1 ("qua_kg/Prop_kg/ArSurf_kg/AtSurf_kg/Scal_kg/Cock_kg/IScal_kg","/");  \cf2 // variable names in catch data file\cf1\par
\lang4105    T_catch = \cf5 cat\cf1 (2,\f5 tow_index[\lang1033\f0 t_indx]\lang4105 ,\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (\lang1033 t_indx\lang4105 ),5),0.));  \cf2 // form output matrix to fill\cf1\par
\lang1033\f5    smain = txt_vars[\cf5 bindex\cf1 (in_species == mc_species);];     \cf2 // Is the species one of the main bivalve species?\cf1\par
\pard\cf0\lang4105    c_indx = index(c_tow_index,T_catch[;1]);                 // index of t_catch tow numbers in c_tow_index\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0    c_indx = c_indx[\cf5 bindex\cf1 (c_indx \cf3 !\cf1 = 0)];                    \cf2 // Reduce to records of selected tows\cf1\par
\pard\lang4105\f5    x_indx = \cf5 index\cf1 (T_catch[;1],c_tow_index);                \cf2 // index of  c_tow_index in t_catch tow numbers\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0    x_indx = x_indx[\cf5 bindex\cf1 (x_indx \cf3 !\cf1 = 0)];                   \cf2 // Reduce to records of selected tows\cf1\par
\pard    \cf5 insert\cf1 (T_catch,x_indx,\cf5 int\cf1 (\cf5 shape\cf1 (\cf5 len\cf1 (c_indx),2)),Tot_Catch_kg[c_indx]);      \cf2 // Insert Total catch weight of selected species into T_catch matrix\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    \cf3 if\cf1 (\cf5 len\cf1 (smain)[1] > 0)\{                                   \cf2 // If species is one of main species\cf1\par
      \cf5 execute\cf1 (\cf5 cat\cf1 ("TT = ",\cf5 ravel\cf1 (smain),"\lang4105\f5 [\lang1033\f0 c_indx]"))         \cf2 // Catch from main catch sampling\cf1\par
\lang4105  \lang1033      \cf5\lang4105 insert\cf1 (T_catch,\lang1033 x_indx\lang4105 ,\cf5 int\cf1 (\cf5 shape\cf1 (\cf5 len\cf1 (TT),5)),TT);      \cf2 // Insert main catch weight of selected species into T_catch matrix\cf1\par
 \lang1033      \cf5\lang4105 insert\cf1 (T_catch,\lang1033 x_indx\lang4105 ,\cf5 int\cf1 (\cf5 shape\cf1 (\cf5 len\cf1 (TT),3)),Kg_Main_Sample[\lang1033 c_indx\lang4105 ]);      \cf2 // Insert main catch subsample weight into T_catch matrix\cf1\par
\lang1033    \};\par
   \lang4105 Bidx = \cf5 bindex\cf1 ((\f1 OB_ITIS_CODE\f0  == \lang1033 in_\lang4105 species)&&(\cf5 member\cf1 (T_catch\f5 [\lang1033\f0 ;1],OB_tow_index)\lang4105 )); \cf2 // index of species records in by_catch table\cf1\par
   Bidx2 = \cf5\lang1033 index\cf1 (\lang4105 T_catch\f5 [\lang1033\f0 ;1],ob_tow_index\lang4105 [bidx]\lang1033 );\lang4105\par
 \lang1033   \cf5\lang4105 insert\cf1 (T_catch,Bidx2,\cf5 int\cf1 (\cf5 shape\cf1 (\cf5 len\cf1 (bidx2),6)),ob_weight_kg[bidx[\cf5\lang1033 bindex\cf1 (\lang4105 Bidx2\lang1033  \cf3 !\cf1 = 0)]\lang4105 ]); \cf2 // insert by_catch weight into T_catch matrix\cf1\par
   B_indx = \cf5\lang1033 index\cf1 (\lang4105 T_catch\f5 [\lang1033\f0 ;1],ob_tow_index\lang4105 [bidx]\lang1033 )\lang4105\par
 \lang1033   \cf5\lang4105 insert\cf1 (T_catch,\lang1033 x_indx\lang4105 ,\cf5 int\cf1 (\cf5 shape\cf1 (\cf5 len\cf1 (\lang1033 c_indx\lang4105 ),4)),Kg_B_Sample[\lang1033 c_indx\lang4105 ]);      \cf2 // Insert By-catch subsample weight into T_catch matrix\cf1\par
\f5    catch_factor = \cf5 shape\cf1 (\cf5\f0 len\cf1 (T_catch)[1]\f5 ,1.);                 \cf2 // Set factor up as vector of 1's to start\cf1\par
\lang1033\f0    zidx = \cf5 bindex\cf1 (\lang4105 (T_catch[;3]\lang1033  + \lang4105 T_catch[;4]\lang1033 ) > 0);\par
\lang4105    \f5 catch_factor\f0 [\lang1033 zidx\lang4105 ] = T_catch[\lang1033 zidx;\lang4105 2]/(T_catch[\lang1033 zidx;\lang4105 3]\lang1033  + \lang4105 T_catch[\lang1033 zidx;\lang4105 4]\lang1033 ); \cf2 //Catch factor to convert to total catch weight\cf1\lang4105\par
   t_catch\lang1033  = \cf5 cat\cf1 (2,\lang4105 t_catch,\f5 catch_factor);                   \cf2 // Add to t_catch matrix\cf1\lang1033\f0\par
\lang4105\f5    catch_factor = \f0 t_catch[;1 7];                            \cf2 // Keep as Global variable with tow number\cf1\f5\par
\lang1033\f0    \lang4105 t_catch\lang1033  = \cf5 cat\cf1 (2,\lang4105 t_catch,(\lang1033 T_catch[;5] + T_catch[;6]) * \lang4105 t_catch[;7]); \cf2 // Adjust catch by weight to estimated total weight caught add to t_catch matrix c8\cf1\par
   BW = \lang1033 set_blade_width();\lang4105\par
   Standard_factor = 500./(BW[\lang1033 t_indx\lang4105 ]*Dist_m[\lang1033 t_indx\lang4105 ]);    \cf2 //Sandardize to 500m square tow\cf1\par
   \cf2 // 500msquare/(69.5inch blade/39.36996 in/m * dist(m))\cf1\par
   t_catch = \cf5 cat\cf1 (2,t_catch,BW[\lang1033 t_indx\lang4105 ],Dist_m[\lang1033 t_indx\lang4105 ],Standard_factor,t_catch[;8] * Standard_factor); \cf2 // add Std_factor & std_catch to t_catch matrix\cf1\par
   \cf3 If\cf1 ( Standardize == 1)\{\par
\tab     \cf3 return\cf1 (t_catch[;1 12]); \cf2 // return standardized catch\cf1\par
   \}\cf3 else\cf1\{\par
       \cf3 return\cf1 (t_catch[;1 8]);  \cf2 // return unstandardized catch\cf1\par
   \};\par
\};\lang1033\par
\cf2\lang4105\f5 //----------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf3 Function\cf1  \cf4 Richards_Curve\cf1 (param) \{     \cf2 // \f0 Richard's Selectivity Curve\cf1\f5\par
  xv = \cf5 seq\cf1 (1.,200.);\par
  yv = \cf5 pow\cf1 ((\cf5 exp\cf1 (param[1]+param[2]*xv)/(1+\cf5 exp\cf1 (param[1] + param[2] * xv))),1./param[3]);\par
\};\par
\cf2 //----------------------------------------------------------------------------------------------------------------------------------\cf1\par
\pard\cf3 Function\cf1  \cf4 RICHARDS_CURVE_add\cf1 (PARAM,adj) \{     \cf2 // RICHARD'S SELECTIVITY CURVE for an offset of adj mm\cf1\par
\tab\cf0 xv = \cf5 seq\cf0 (1.,200.);\cf1\par
\tab xv2= xv - adj;\par
\tab yv = \cf5 pow\cf1 ((\cf5 exp\cf1 (param[1]+param[2]*xv2)/(1+\cf5 exp\cf1 (param[1] + param[2] * xv2))),1./param[3]);\cf0\par
\};\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2 //----------------------------------------------------------------------------------------------------------------------------------\cf1\par
\pard F\cf3 unction\cf1  \cf4 Sel_adjusted_Catch\cf1 (Catch_matrix,sel_tows)\{\par
   \cf2 // -------------------Set up curve parameters -----------------------------------------------------------------------------------\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    \cf2 //-------------------------------------------------------------------------------------------------------------------------------\cf1\par
\pard    RichBanq2010 = -14.2175879 0.1894616 3.6212438;   \cf2 // Selectivity curve parameters from 2010 selectivity study\cf1\par
   RichGB2009 = -11.2440473 0.1572978 1.9208243;     \cf2 // Selectivity curve parameters from 2009 selectivity study\cf1\par
   RichBanq2004 = -8.6572194 0.1028071 0.7856736;    \cf2 // Selectivity curve parameters from 2004 selectivity study\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    \cf2 //-------------------------------------------------------------------------------------------------------------------------------\cf1\par
   \cf4 Richards_Curve\cf1 (RichBanq2010)\par
   Yvec_2010 = yv;\par
   \cf4 Richards_Curve_add\cf1 (RichBanq2010,23.4);   \cf2 // add 23.4 mm diff between 2010 survey and commercial 50% selectivity\cf1\par
   Yvec_comm = yv;\par
\pard    Sel_percent = \cf5 cat\cf1 (2,xv,\cf4 round\cf1 (8,(Yvec_comm/Yvec_2010)));  \cf2 // commercial selectivity as percentage of 2010 selectivity\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    \cf2 //-------------------------------------------------------------------------------------------------------------------------------\cf1\par
\pard     catch_matrix2 = \cf5 cat\cf1 (2,catch_matrix,\cf5 shape\cf1 (\cf5 len\cf1 (catch_matrix)[1],0.0));            \cf2 // Copy with column for adjusted catch\cf1\par
    adj_tows = Catch_matrix[\cf5 Bindex\cf1 (\cf5 member\cf1 (sel_tows,Catch_matrix[;1]));];            \cf2 // List of tows to adjust\cf1\par
    Adj_matrix = \cf5 cat\cf1 (2,adj_tows,\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (adj_tows)[1],5),0.));               \cf2 // Matrix for recording adjustment data\cf1\par
    Am_idx = \cf5 bindex\cf1 ((\cf5 member\cf1 (sel_tows,m_tow_index))&&(M_Species == 80983));          \cf2 // index of all Morph records for selected tows\cf1\par
    Am_idx = Am_idx[\cf5 bindex\cf1 ((Leng[AM_idx]>0)&&(Leng[AM_idx]\cf3 !\cf1 =\cf5 NAN\cf1 ())&&(totWgt[AM_idx]>0)&&(totWgt[AM_idx] \cf3 !\cf1 = \cf5 NAN\cf1 ()))];   \cf2 // only Morph records with length and totWgt\cf1\par
    Ave_reg_par = \cf5 linear_regression\cf1 (\cf5 log\cf1 (Leng[AM_idx]),\cf5 Log\cf1 (totWgt[AM_idx]));         \cf2 // Linear regression for all tows, average relationship for missing data\cf1\par
    \cf3 for\cf1 (t = 1; t <= \cf5 len\cf1 (adj_tows)[1]; t = t++)\{                                     \cf2 // Loop through list of tows to adjust\cf1\par
       M_idx = \cf5 bindex\cf1 ((M_tow_index == adj_tows[t;1])&&(M_Species == 80983));        \cf2 // index of Morph records for selected tow for selected species \cf1\par
       m_idx = m_idx[bindex((Leng[M_idx]>0)&&(Leng[M_idx]!=NAN())&&(totWgt[M_idx]>0)&&(totWgt[M_idx] != NAN()))];   // only Morph records with length and totWgt\par
       Adj_matrix[t;3] = \cf5 len\cf1 (m_idx);                                                \cf2 // Record number of morphometrics records for this tow\cf1\par
       \cf3 If\cf1 (\cf5 len\cf1 (m_idx) >= 2)\{                                                          \cf2 // If there are at least 2 morph records\cf1\par
          reg_par = \cf5 linear_regression\cf1 (\cf5 log\cf1 (Leng[M_idx]),\cf5 Log\cf1 (totWgt[M_idx]));         \cf2 // Linear regression for this tow  ?? suitability based on r squared ??\cf1\par
          Adj_matrix[t;5] = reg_par[4];                                             \cf2 // Record r_squared for this tow\cf1\par
       \}\cf3 else\cf1\{\par
\tab    reg_par = Ave_reg_par;                                                    \cf2 // if less than 2 records use average \cf1\par
          Adj_matrix[t;5] = -99.;                                                   \cf2 // No r_squared for this tow\cf1\par
       \};\par
       \cf2 //plot_points(log(Leng[M_idx]),Log(totWgt[M_idx]),cat(0,"Tow ",str(adj_tows[t;1])));\cf1\par
       lf_idx = \cf5 bindex\cf1 ((LF_tow_index == adj_tows[t;1])&&(lf_Species == 80983));   \cf2 // index of LF records for selected tows for selected species\cf1\par
       Adj_matrix[t;4] = \cf5 Len\cf1 (lf_idx);                                             \cf2 // Record number of length frequency records for this tow\cf1\par
       \cf3 if\cf1 (\cf5 len\cf1 (lf_idx) >= 1)\{\par
          LF_tow = \cf4 Total_length_frequency_2\cf1 (80983,adj_tows[t;1],1);                    \cf2 // Length frequency expanded to catch per standardized tow\cf1\par
          LF_tow = \cf5 cat\cf1 (2,lf_tow,lf_tow[;2]*(reg_par[2] + reg_par[1]*lf_tow[;1]));    \cf2 // add estimated total weight at length\cf1\par
          LF_tow = \cf5 cat\cf1 (2,lf_tow,Sel_percent[\cf5 index\cf1 (Sel_percent[;1],lf_tow[;1]);2]);   \cf2 // add selectivity adjustment at length\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160           Adj_matrix[t;6]  = \cf5 sum\cf1 (lf_tow[;3]*lf_tow[;4])/\cf5 sum\cf1 (lf_tow[;3]);             \cf2 // Correction for this tow\cf1\par
          Catch_matrix2[\cf5 bindex\cf1 (catch_matrix2[;1] == adj_tows[t;1]);3] = Catch_matrix2[\cf5 bindex\cf1 (catch_matrix2[;1] == adj_tows[t;1]);2] * Adj_matrix[t;6]; \cf2 // add corrected catch\cf1\par
          Adj_matrix[t;7]  = Catch_matrix2[\cf5 bindex\cf1 (catch_matrix2[;1] == adj_tows[t;1]);3]; \cf2 // record adjusted catch\cf1\par
        \}\cf3 else\cf1\{\par
\tab        Catch_matrix2[\cf5 bindex\cf1 (catch_matrix2[;1] == adj_tows[t;1]);3] = -999.;      \cf2 // no length frequency to do adjustment\cf1\par
\tab     \}; \par
    \};\par
    Ave_adj = \cf5 ave\cf1 (Adj_matrix[\cf5 bindex\cf1 (Adj_matrix[;4] > 0);6]);                        \cf2 // Average adjustment made\cf1\par
    nlf_idx = \cf5 bindex\cf1 (catch_matrix2[;3] == -999.);                                    \cf2 // Records that did not have Len Freq data to adjust \cf1\par
    Catch_matrix2[nlf_idx;3] = Catch_matrix2[nlf_idx;2] * Ave_adj;                  \cf2 // Use average to adjust tows with no length frequency data\cf1\par
    \cf2 // print out table to check adjustments\cf1\par
\pard     \cf5 print\cf1 (\cf5 cat\cf1 (1,"   Tow    Catch  #_morph  #_LF    r_sq    %_adjust  Adj_catch",\cf5 sprintf\cf1 (" %5.0f  %7.3f %5.0f %7.0f %10.4f %9.4f %9.3f ",adj_matrix)));\par
    Catch_matrix[\cf5 bindex\cf1 (catch_matrix2[;2] > 0);2] == Catch_matrix2[\cf5 bindex\cf1 (catch_matrix[;2] > 0);2]\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160     \cf3 return\cf1 (Catch_matrix2);\par
\};\par
\cf2\lang1033\f0 //------------------------------------------------------------------------------------\cf1\par
\cf2\lang4105\f5 //Plot catch of selected species\cf1\par
F\cf3 unction\cf1  \cf4 Plot_species\cf1 (selected_tows,species_cd,Area,Title)\{\par
\f0   Datam = \cf5 cat\cf1 (2,\f5 tow_index\f0 ,pos,\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (\f5 tow_index\f0 ),1),0.));\par
  C_Catch\lang1033  = \cf4 Get_catch_2_orc\cf1 (\lang4105\f5 species_cd\lang1033\f0 ,\lang4105\f5 selected_tows\lang1033\f0 ,1); \cf2 // Standardized catch\cf1\par
\lang4105   Datam[\cf5\f5 index\cf1 (tow_index,\f0 C_Catch\lang1033 [;1]\lang4105\f5 );4] = \f0 C_Catch\f5 [;2];\par
\f0   \cf5 Line_Colour\cf1 ("BLACK"); \cf5 Line_Width\cf1 (\cf5 pts\cf1 (0.5));\par
\lang1033   back_map(\lang4105\f5 Area\lang1033\f0 )\lang4105 ;\par
  \cf4 Map_objects\cf1 (0,1,1,1,1,0);\par
  \cf2 //Continuous_Scaling(1, 0, mm(1.), mm(5), 0.1, 2500., 1. 250. 750. 1500. 2500.);\cf1\par
  \cf2 //Continuous_Scaling(1, 0, mm(1.), mm(5), 0.1, 50., 1. 5. 12. 25. 50.);\cf1\par
  \cf5 Continuous_Scaling\cf1 (1, 0, \cf5 mm\cf1 (1.), \cf5 mm\cf1 (5), 0.1, 100., 1. 10. 25. 50. 100.);\par
\f5   \cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
\f0   \cf5 Scaled_Symbols\cf1 (datam[;2 3 4]);\par
  \cf5 Symbol_Legend\cf1 (\cf5 mm\cf1 (175), \cf5 mm\cf1 (67));\par
\lang1033\f2   \cf5 draw_text\cf1 (\cf5\lang4105\f0 getview\cf1 (1)+\cf5 mm\cf1 (105.),\cf5 getview\cf1 (3) + \cf5 mm\cf1 (20.)\lang1033\f2 ,\lang4105\f1 Title\lang1033\f2 );\par
  \cf5 draw_text\cf1 (\cf5\lang4105\f0 getview\cf1 (1)+\cf5 mm\cf1 (105.),\cf5 getview\cf1 (3) + \cf5 mm\cf1 (15.)\lang1033\f2 ,\lang4105\f1 "Kg/1000 m sq"\lang1033\f2 );\par
  \cf2\lang4105\f1 //\lang1033\f2 draw_text(\lang4105\f0 getview(1)+mm(55.),getview(3) + mm(2.)\lang1033\f2 ,\lang4105\f1 "2003 Sable Quahog survey"\lang1033\f2 );\cf1\par
\lang4105\f0\};\par
\cf2\lang1033 //------------------------------------------------------------------------------------\cf1\par
\cf2\lang4105\f5 //Plot Multi-species catch\cf1\par
\cf2\lang1033\f0 //------------------------------------------------------------------------------------\cf1\par
F\cf3 unction\cf1  \cf4 multi_Plot\cf1 (tows,species_cds,Species_names,Title)\{\par
\lang4105   \lang1033 n_sp = \cf5 len\cf1 (species_cds);\par
\lang4105   Datam = \cf5 cat\cf1 (2,tow_index,pos,\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (tow_index),2*\lang1033 n_sp\lang4105 ),0.))\par
\lang1033   \cf3 For\cf1 (s=1; S<= n_sp; s=s++)\{\par
\tab sp_catch = \cf4 Get_catch_2_orc\cf1 (species_cds[s],tows,1);  \cf2 //get catch for species s\cf1\par
\tab Datam[\cf5\lang4105\f5 index\cf1 (Tow_index,\lang1033\f0 sp_catch[;1]\lang4105\f5 );3+s] = \lang1033\f0 sp_catch\lang4105\f5 [;2];\par
\lang1033\f0   \};\par
\lang4105   \lang1033 Datam = datam[\cf5 bindex\cf1 (\cf5 member\cf1 (tows,datam[;1]));]; \cf2 // reduce to selected tows\cf1\par
\pard\lang4105   max_value = \cf5 max\cf1 (\cf5 sum\cf1 (datam[;\cf5 seq\cf1 (4,n_sp + 3)],2)); \cf2 // maximum catch per tow in data\cf1\par
  Value95 = \cf5 ascending\cf1 (\cf5 sum\cf1 (datam[;\cf5 seq\cf1 (4,n_sp + 3)],2))[\cf5 int\cf1 (.9*\cf5 len\cf1 (datam)[1])]; \cf2 // 95 percentile value\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160   scaled_wgt = \cf4\f5 nice_scale3\cf1 (\f0 Value95\f5 );\f0\par
  \cf5 Line_Colour\cf1 ("BLACK"); \cf5 Line_Width\cf1 (\cf5 pts\cf1 (0.5));\par
\pard\f5   \cf5 Marker_Height\cf1 (\cf5 mm\cf1 (1.5));\f0\par
  \cf5\f5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f0   Colours = \cf5 strfold\cf1 ("RED GREEN BLUE YELLOW ORANGE PURPLE PINK OLIVE_DRAB LIGHT_SALMON");\par
  \cf5 Marker_halo\cf1 (\cf5 pts\cf1 (.35));\par
\cf2 //  Continuous_Scaling(1, 0, mm(1.), mm(5), scaled_wgt[1], scaled_wgt[5], scaled_wgt);\cf1\par
\cf2 //   Continuous_Scaling(1, 0, mm(1.), mm(7.5), 0.1, 1000., 1. 50. 250. 500. 1000.);\cf1\par
   \cf5 Continuous_Scaling\cf1 (1, 0, \cf5 mm\cf1 (1.), \cf5 mm\cf1 (7.5), 0.1, 500., 1. 50. 100. 250. 500.);\par
\cf2 //   Continuous_Scaling(1, 0, mm(1.), mm(7.5), .1, 20., 1. 2.5. 5. 10. 20.);\cf1\par
  \cf5 Scaled_Symbols\cf1 (datam[;\cf5 seq\cf1 (2,n_sp + 3)],Colours[\cf5 seq\cf1 (1,n_sp);]);\par
\pard\f5   \cf5 Line_Width\cf1 (\cf5 pts\cf1 (0.25));\par
  \cf2 //Scaled_Symbols(cat(2,datam[;2 3],sum(datam[;seq(4,n_sp + 3)],2)));    // to get line around symbols, have to delete front symbol\cf1\par
  \cf5 Line_Width\cf1 (\cf5 pts\cf1 (0.5));\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f0   \cf5 Colour_Legend\cf1 (\cf5 getView\cf1 (1)+\cf5 mm\cf1 (5), \cf5 GetView\cf1 (4)-\cf5 mm\cf1 (5), Colours[\cf5 seq\cf1 (1,n_sp);], Species_names);\par
  \cf5 Symbol_Legend\cf1 (\cf5 getView\cf1 (1)+\cf5 mm\cf1 (45), \cf5 GetView\cf1 (4)-\cf5 mm\cf1 (10));\par
\pard\lang1033   Head = \cf5 cat\cf1 (" Tow  Longitude  Latitude",\cf5 sprintf\cf1 (" %10d",species_cds))\par
  Data_out = sprintf(cat("%5.0f  %10.6f %10.6f",shape(n_sp*7," %10.4f")),datam);\par
  Head = \cf5 cat\cf1 ("  Tow   Longitude   Latitude",\cf5 sprintf\cf1 (" %10d",species_cds))\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160   Data_out = \cf5 cat\cf1 (1,Head,Data_out);\par
\lang4105\};\par
\lang1033 //------------------------------------------------------------------------------------\par
\pard\cf3 Function\cf1  \cf4 check_data_files\cf1 ()\{\par
\cf0\lang4105\f5   F_Header = " Surveys   Tow       Catch    O_by_catch    Len_freq    Fl_sample   Morphometrics";\cf1\par
\lang1033\f0   BH = \cf5 cat\cf1 (\cf5 numtochar\cf1 (13),\cf5 shape\cf1 (\cf5 len\cf1 (f_header)-1," "))\par
  list = \cf5 distinct\cf1 (\cf5 cat\cf1 (1,t_survey,c_survey,\cf5 trim\cf1 (ob_survey_ID),lf_survey,fs_survey,\cf5 Trim\cf1 (m_survey)))\par
  m = \cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (list)[1],6),0)\cf3\par
  m[index(distinct(t_survey),list);1] = 1\par
  m[index(distinct(c_survey),list);2] = 1\cf1\par
  m[\cf5 index\cf1 (\cf5 distinct\cf1 (\cf5 trim\cf1 (ob_survey_id)),list);3] = 1\par
  m[\cf5 index\cf1 (\cf5 distinct\cf1 (lf_survey),list);4] = 1\par
  m[\cf5 index\cf1 (\cf5 distinct\cf1 (fs_survey),list);5] = 1\par
  m[\cf5 index\cf1 (\cf5 distinct\cf1 (m_survey),list);6] = 1\par
  body = \cf5 cat\cf1 (2,list,\cf5 sprintf\cf1 (" %3d        ",m));\par
  op = \cf5 cat\cf1 (1,bh,f_header,body);\cf3\par
  return(op)\par
\};\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2 //------------------------------------------------------------------------------------\cf1\par
\pard\cf3 Function\cf1  \cf4 Make_catch_table\cf1 (s_species,s_tows)\{\par
   \cf2 // Table of variables used to calculate catch, with estimated total catch and standardized catch by tow use to verify results\cf1\par
   t = \cf4 Get_catch_2_orc\cf1 (s_species,s_tows,1);\par
\lang4105\f5    temp_idx = \cf5 bindex\cf1 (\cf5 member\cf1 (\cf5 int\cf1 (\lang1033\f0 s_tows)\lang4105\f5 ,\cf5 int\cf1 (tow_index)))   \cf2 // index of selected tows\cf1\par
\lang1033\f0    H1 = " Survey   Tow Indexed     Total     Main     By_catch    Catch    Catch   Catch     Estimated     Blade   Tow_dist   Std.         Std."\par
   H2 = "   Id      #    Tow#   Catch (kg) subsample  subsample  Main_SS   By_SS   Factor    Catch (kg)   Width(m)    (m)   Factor        Catch"\par
   tt = \cf5 cat\cf1 (2,t_survey[\lang4105\f5 temp_idx\lang1033\f0 ;],\cf5 sprintf\cf1 ("%4.0f%7.0f%13.6f%10.3f%10.3f%10.3f%8.3f%10.6f%12.6f%12.6f%8.1f%9.6f%12.6f",\cf5 cat\cf1 (2,\cf5 transpose\cf1 (\lang4105\f5 tow_index\lang1033\f0 [\lang4105\f5 temp_idx\lang1033\f0 ]),t_catch)))\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    Catch_table = \cf5 Cat\cf1 (1,H1,H2,tt); \par
   \cf3 return\cf1 (Catch_table);\par
\};\par
\cf2 //------------------------------------------------------------------------------------\cf1\par
\cf3 Function\cf1  \cf4 set_blade_width\cf1 ()\{\par
\tab\cf2 // Cape Keltic 2003,2004 2006 and 2008 had a blade width of 69.5 inches\cf1\par
\tab\cf2 // Midnight Dreamer 2002 had a blade width of 1.4 m\cf1\par
\tab\cf2 // Miss October 2006 had a blade width of 47.0 inches\cf1\par
   \cf2 // Beverly Ann II 2007 had a blade width of 36.0 inches\cf1\par
   Blade_width_m = \cf5 shape\cf1 (\cf5 len\cf1 (t_survey)[1],0.0);\par
\pard    Blade_width_m[\cf5 bindex\cf1 (t_survey == "CK2003-01")] = 69.5\lang4105 /39.36996;\lang1033\par
   Blade_width_m[\cf5 bindex\cf1 (t_survey == "CK2004-01")] = 69.5\lang4105 /39.36996;\lang1033\par
   Blade_width_m[\cf5 bindex\cf1 (t_survey == "CK2006-01")] = 69.5\lang4105 /39.36996;\lang1033\par
   Blade_width_m[\cf5 bindex\cf1 (t_survey == "T12008-01")] = 69.5\lang4105 /39.36996;\lang1033\par
   Blade_width_m[\cf5 bindex\cf1 (t_survey == "T12009-01")] = 69.5\lang4105 /39.36996;\lang1033\par
   Blade_width_m[\cf5 bindex\cf1 (t_survey == "T12010-01")] = 69.5\lang4105 /39.36996;\lang1033\par
   Blade_width_m[\cf5 bindex\cf1 (t_survey == "MD2002-01")] = 1.4\lang4105 ;\lang1033\par
   Blade_width_m[\cf5 bindex\cf1 (t_survey == "MO2006-01")] = 47.0\lang4105 /39.36996;\lang1033\par
   Blade_width_m[\cf5 bindex\cf1 (t_survey == "BA2007-01")] = 36.0\lang4105 /39.36996;\par
\lang1033    \cf3 Return\cf1 (Blade_width_m);\par
\};\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2 //------------------------------------------------------------------------------------\cf1\par
\cf3 Function\cf1  \cf4 Fill_Bycatch_Table\cf1 ()\{\par
\tab\cf2 // Uses averages to fill in missing data in Bycatch table\cf1\par
\tab\cf2 // Note: changes variables, have to read by-catch back in or extract from OBDATA file to revert to original numbers\cf1\par
\tab survey_list = \cf5 distinct\cf1 (\lang4105\f1 OB_SURVEY_ID);\par
\lang1033\f0\tab Miss_num_bidx = ((\lang4105\f1 OB_NUMBER_CAUGHT == 0)||\lang1033\f0 (\lang4105\f1 OB_NUMBER_CAUGHT == \cf5 NAN\cf1 ())); \cf2 // index of records with missing numbers\cf1\lang1033\f0\par
\tab Miss_wgt_bidx = (\lang4105\f1 (OB_WEIGHT_KG == 0)||(OB_WEIGHT_KG == \cf5 NAN\cf1 ()));         \cf2 // index of records with missing weight\cf1\lang1033\f0\par
\tab Miss_data_bidx = ((\lang4105\f1 OB_NUMBER_CAUGHT == 0)||\lang1033\f0 (\lang4105\f1 OB_NUMBER_CAUGHT == \cf5 NAN\cf1 ())||(OB_WEIGHT_KG == 0)||(OB_WEIGHT_KG == \cf5 NAN\cf1 ())); \cf2 // index of records with missing data\cf1\lang1033\f0\par
\tab Good_data_bidx = (Miss_data_bidx == 0)\lang4105\f1 ;                  \cf2 // index of records with good data\cf1\lang1033\f0\par
\tab\cf3 for\cf1 (sur = 1; sur <= \cf5 len\cf1 (survey_list)[1]; sur = sur++)\{   \cf2 // loop through surveys\cf1\par
\tab    Sur_bidx = \lang4105\f1 OB_SURVEY_ID == \lang1033\f0 survey_list[sur;];           \cf2 // index of records for this survey\cf1\par
\tab    Miss_Species_list = \lang4105\f1   \cf5 Distinct\cf1 (OB_ITIS_CODE[\cf5 bindex\cf1 ((\lang1033\f0 sur_bidx==1)&&(Miss_data_bidx ==1))]);  \cf2 // list of species for this survey with missing data\cf1\par
      \cf3 if\cf1 (\cf5 len\cf1 (Miss_Species_list) > 1)\{\par
\tab      \cf3 For\cf1 (spc = 1; spc <= \cf5 len\cf1 (Miss_Species_list); spc = spc++)\{   \cf2 // loop through missing species list\cf1\par
\tab\tab      g_idx = \cf5\lang4105\f1 bindex\cf1 ((OB_ITIS_CODE == \lang1033\f0 Miss_Species_list[spc])&&\lang4105\f1 (\lang1033\f0 sur_bidx==1)&&(Good_data_bidx == 1));  \cf2 // good data, this survey, this species\cf1\par
            \cf3 if\cf1 (\cf5 len\cf1 (g_idx) > 1)\{\par
               Ave_spc_wgt = \cf5 AVE\cf1 (\lang4105\f1 OB_WEIGHT_KG[\lang1033\f0 g_idx]/\lang4105\f1 OB_NUMBER_CAUGHT[\lang1033\f0 g_idx]);  \cf2 // average weight this speceis this survey\cf1\lang4105\f1\par
\lang1033\f0                \cf2 // missing numbers but has weight\cf1\par
               n_idx = \cf5\lang4105\f1 bindex\cf1 ((\lang1033\f0 Miss_num_bidx == 1)&&(Miss_wgt_bidx == 0)&&\lang4105\f1 (OB_ITIS_CODE == \lang1033\f0 Miss_Species_list[spc])&&\lang4105\f1 (\lang1033\f0 sur_bidx==1)); \par
\lang4105\f1                \cf3 If\cf1 (\cf5 len\cf1 (n_idx) > 0)\{\par
                  OB_NUMBER_CAUGHT[\lang1033\f0 n_idx] = \lang4105\f1 OB_WEIGHT_KG[n_idx]/\lang1033\f0 Ave_spc_wgt;       \cf2 // fill missing numbers \cf1\par
                  \cf5 Print\cf1 (\cf5 cat\cf1 ("Survey = ",survey_list[sur;],", Species = ",\cf5 str\cf1 (Miss_Species_list[spc]),", Records with no nums but with wgt = ",\cf5 str\cf1 (\cf5 len\cf1 (n_idx))));\par
\lang4105\f1                \};\par
\lang1033\f0                \cf2 // missing weight but has numbers\cf1\par
               w_idx = \cf5\lang4105\f1 bindex\cf1 ((\lang1033\f0 Miss_num_bidx == 0)&&(Miss_wgt_bidx == 1)&&\lang4105\f1 (OB_ITIS_CODE == \lang1033\f0 Miss_Species_list[spc])&&\lang4105\f1 (\lang1033\f0 sur_bidx==1)); \par
\lang4105\f1                \cf3 If\cf1 (\cf5 len\cf1 (w_idx) > 0)\{\par
                  OB_WEIGHT_KG[\lang1033\f0 w_idx] = \lang4105\f1 OB_NUMBER_CAUGHT[w_idx]*\lang1033\f0 Ave_spc_wgt;      \cf2 // fill missing weights\cf1\lang4105\f1\par
\lang1033\f0                   \cf5 Print\cf1 (\cf5 cat\cf1 ("Survey = ",survey_list[sur;],", Species = ",\cf5 str\cf1 (Miss_Species_list[spc]),", Records with nums but no wgt = ",\cf5 str\cf1 (\cf5 len\cf1 (w_idx))));\par
\lang4105\f1                \};\par
\lang1033\f0                \cf2 // missing numbers and weight \cf1\par
               t_idx = \cf5\lang4105\f1 bindex\cf1 ((\lang1033\f0 Miss_num_bidx == 1)&&(Miss_wgt_bidx == 1)&&\lang4105\f1 (OB_ITIS_CODE == \lang1033\f0 Miss_Species_list[spc])&&\lang4105\f1 (\lang1033\f0 sur_bidx==1)); \par
\lang4105\f1                \cf3 If\cf1 (\cf5 len\cf1 (t_idx) > 0)\{\par
                  OB_WEIGHT_KG[\lang1033\f0 t_idx] = \cf5 AVE\cf1 (\lang4105\f1 OB_WEIGHT_KG[\lang1033\f0 t_idx]);             \cf2 // fill weight with average catch weight\cf1\par
\lang4105\f1                   OB_NUMBER_CAUGHT[t_idx]\lang1033\f0  = \cf5 AVE\cf1 (\lang4105\f1 OB_NUMBER_CAUGHT[g_idx])\lang1033\f0 ;     \cf2 // fill missing numbers with average numbers caught\cf1\par
                  \cf5 Print\cf1 (\cf5 cat\cf1 ("Survey = ",survey_list[sur;],", Species = ",\cf5 str\cf1 (Miss_Species_list[spc]),", Records with no nums and no wgt = ",\cf5 str\cf1 (\cf5 len\cf1 (t_idx))));\par
\lang4105\f1                \};\par
\lang1033\f0            \} \cf3 else\cf1  \{ \cf5 print\cf1 (\cf5 cat\cf1 ("Survey ",survey_list[sur;],", Species = ",\cf5 str\cf1 (Miss_Species_list[spc]),", No available data"));\};  \cf2 // end g_idx if statment\cf1\par
\lang4105\f1\tab\tab   \}; \cf2 // end Species loop\cf1\par
\tab   \}; \cf2 //end if\lang1033\f0 (len(Miss_Species_list) > 1)\lang4105\f1  \cf1\par
\tab\};    \cf2 // end survey loop\cf1\par
\};\par
\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\lang4105\f0 // Total length frequency  Note: weighted by total clam catch weight\cf1\par
\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf3\f0 Function\cf1  \cf4 Total_length_frequency\cf1 (sp_code,sel_tows,Standardize)\{\par
  \cf3 if\cf1 (\cf5 len\cf1 (sel_tows) == 1)\{\par
\tab    Clam = \cf4 Get_catch_2_orc\cf1 (sp_code,sel_tows,Standardize); \cf2 // Standardized or unstandardized catch for selected species\cf1\par
      t_indx = \cf5 bindex\cf1 (((\f5 fs_tow\f0 _index == sel_tows)&&(fs_species == sp_code)));               \cf2 // index of selected tows in lf_sample data file for this species\cf1\par
      lf_indx = \cf5 bindex\cf1 ((\f5 LF_tow\f0 _index==sel_tows)&&(lf_species == sp_code));               \cf2 // index of selected tow in lf_sample data file for this species\cf1\par
 \}\cf3 else\cf1\{\par
      Clam = \cf4 Get_catch_2_orc\cf1 (sp_code,sel_tows,1); \cf2 // Standardized catch for selected species\cf1\par
      t_indx = \cf5 bindex\cf1 ((\cf5 member\cf1 (sel_tows,\f5 fs_tow\f0 _index)&&(fs_species == sp_code)));               \cf2 // index of selected tows in lf_sample data file for this species\cf1\par
      lf_indx = \cf5 bindex\cf1 ((\cf5 member\cf1 (sel_tows,\f5 LF_tow\f0 _index)&&(lf_species == sp_code)));               \cf2 // index of selected tows in lf_sample data file for this species\cf1\par
 \}\par
\f5   tt = \cf5 cat\cf1 (2,fs_tow_index[t_indx],weight_measured[t_indx],\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (t_indx),2),\cf5 cat\cf1 (0,0.,1.)));  \cf2 // weights of measured clams per tow\cf1\par
\pard\lang4105   temp_t=\cf5 index\cf1 (\lang1033\f0 tt[;1]\lang4105\f5 ,\lang1033\f0 Clam[;1]\lang4105\f5 );\par
  z2 = \cf5 index\cf1 (tt[;1],clam[;1])\par
  z2 = z2[\cf5 bindex\cf1 (z2 \cf3 !\cf1 = 0)]\par
  a2 = \cf5 bindex\cf1 (\cf5 member\cf1 (tt[;1],clam[;1]))\par
  \cf5 insert\cf1 (tt,z2,\cf5 shape\cf1 (\cf5 len\cf1 (z2),3),clam[a2;2]);                           \cf2 // insert std catch for this species into sample data file tt\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160   z_indx = \cf5 bindex\cf1 (tt[;2]>0)\par
  tt[z_indx;4] = tt[z_indx;3]/tt[z_indx;2];                \cf2 // factor to go from measured sample to total clam catch\cf1\par
\f0   lf_datam = \cf5 cat\cf1 (2,lf_tow\lang1033 _index[lf_indx]\lang4105 ,lf_len\lang1033 [lf_indx]\lang4105 ,\lang1033 lf\lang4105 _N_at_len\lang1033 [lf_indx]\lang4105 ,\cf5 shape\cf1 (\cf5 len\cf1 (\lang1033 lf_indx\lang4105 ),1.));   \cf2 // Set up matrix for data aggregation\cf1\par
\lang1033   \lang4105 lf_\lang1033 datam[;4]= tt[\cf5 index\cf1 (tt[;1],\lang4105 lf_\lang1033 datam[;1]);4];                \cf2 // Datam = tow length n_at_len factor\cf1\par
\lang4105   Aggdata = \cf5\f5 aggregate\cf1 (lf_datam[;2],1,"sum",lf_datam[;3]*lf_datam[;4])\f0 ;\par
  \cf3 return\cf1 (aggdata);\par
\};\par
\cf2\lang1033\f2 /\lang4105\f1 / \lang1033\f2 ----------------------------------------------------------------------------------------------------------\lang4105\f1 -------------------------------\cf1\lang1033\f2\par
\cf2\lang4105\f0 // plot length frequency  Note: weighted by total clam catch weight\cf1\par
\lang1033 f\cf3 unction\cf1  \cf4 plot_length_frequency\cf1 (species_sel,sel_tows,standardize,plot)\{\par
\lang4105   Aggdata = \cf4\lang1033 Total_length_frequency\cf1 (species_sel,sel_tows,standardize)\lang4105\par
  \cf2 //Aggdata = aggregate(1.,1.,cat(2,lf_len,shape(len(lf_len),1.),\lang1033 lf\lang4105 _N_at_len));\cf1\par
\f5   \cf3 if\cf1 (plot == 1)\{\par
 \cf2 //   Data_Window(0,int(max(aggdata[;1])*1.05),0,int(max(aggdata[;2])*1.05));\cf1\par
    \cf5 Data_Window\cf1 (0,170,0,\cf5 int\cf1 (\cf5 max\cf1 (aggdata[;2])*1.05));\par
    \cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (30),\cf5 mm\cf1 (140));\par
    \cf5 data_projection\cf1 ("NIL")\par
    \cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
    \cf5 Axis\cf1 (10.,500.,1.0,100.,1,0,1,0,0);\par
\f0     \cf5 Data_Histogram\cf1 (1.,0.,aggdata[;1 2 2]);\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (7.),\cf5 cat\cf1 ("Sampled n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (lf_\lang1033 datam[;3]\lang4105 )))));\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (12.),\cf5 cat\cf1 ("Estimated total n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (aggdata[;2])))));\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (17.),"Species = Arctic Surfclam");\par
  \};\par
  \cf3 return\cf1 (aggdata);\par
\};\par
\cf2\lang1033 //------------------------------------------------------------------------------------\cf1\par
\lang4105\f5 F\cf3 unction\cf1  \cf4 format_for_oracle\cf1 ()\{\par
\tab out_matrix = \cf5 shape\cf1 (0 48," ");\par
\tab rows = \cf5 len\cf1 (c_survey)[1];\par
\pard    out_matrix = \cf5 cat\cf1 (1,out_matrix,\cf5\lang1033\f0 cat\cf1 (2,c_survey,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,2)," "),c_tow,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,7)," 80983 "),\cf5 sprintf\cf1 ("%9.2f %7.2f %7.1f" ,\cf5 cat\cf1 (2,ArSurf_kg,\cf5 shape\cf1 (rows,0.0),\cf5 shape\cf1 (rows,0.0)))));\par
\lang4105\f5    out_matrix = \cf5 cat\cf1 (1,out_matrix,\cf5\lang1033\f0 cat\cf1 (2,c_survey,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,2)," "),c_tow,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,7)," \lang4105\f5 81343\lang1033\f0  "),\cf5 sprintf\cf1 ("%9.2f %7.2f %7.1f" ,\cf5 cat\cf1 (2,\lang4105 qua_kg\lang1033 ,\lang4105 Num_totes_Quahogs\lang1033 ,\cf5 shape\cf1 (rows,0.0)))));\par
\lang4105\f5    out_matrix = \cf5 cat\cf1 (1,out_matrix,\cf5\lang1033\f0 cat\cf1 (2,c_survey,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,2)," "),c_tow,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,7)," \lang4105\f5 81763\lang1033\f0  "),\cf5 sprintf\cf1 ("%9.2f %7.2f %7.1f" ,\cf5 cat\cf1 (2,\lang4105 Prop_kg\lang1033 ,\cf5 shape\cf1 (rows,0.0),\cf5 shape\cf1 (rows,0.0)))));\par
\lang4105\f5    out_matrix = \cf5 cat\cf1 (1,out_matrix,\cf5\lang1033\f0 cat\cf1 (2,c_survey,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,2)," "),c_tow,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,7)," \lang4105\f5 80944\lang1033\f0  "),\cf5 sprintf\cf1 ("%9.2f %7.2f %7.1f" ,\cf5 cat\cf1 (2,\lang4105 AtSurf_kg\lang1033 ,\cf5 shape\cf1 (rows,0.0),\cf5 shape\cf1 (rows,0.0)))));\par
\lang4105\f5    out_matrix = \cf5 cat\cf1 (1,out_matrix,\cf5\lang1033\f0 cat\cf1 (2,c_survey,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,2)," "),c_tow,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,7)," \lang4105\f5 79718\lang1033\f0  "),\cf5 sprintf\cf1 ("%9.2f %7.2f %7.1f" ,\cf5 cat\cf1 (2,\lang4105 Scal_kg\lang1033 ,\cf5 shape\cf1 (rows,0.0),\cf5 shape\cf1 (rows,0.0)))));\par
\lang4105\f5    out_matrix = \cf5 cat\cf1 (1,out_matrix,\cf5\lang1033\f0 cat\cf1 (2,c_survey,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,2)," "),c_tow,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,7)," \lang4105\f5 80879\lang1033\f0  "),\cf5 sprintf\cf1 ("%9.2f %7.2f %7.1f" ,\cf5 cat\cf1 (2,ArSurf_kg,\cf5 shape\cf1 (rows,0.0),\cf5 shape\cf1 (rows,0.0)))));\par
\lang4105\f5    out_matrix = \cf5 cat\cf1 (1,out_matrix,\cf5\lang1033\f0 cat\cf1 (2,c_survey,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,2)," "),c_tow,\cf5 shape\cf1 (\cf5 cat\cf1 (0,rows,7)," \lang4105\f5 79619\lang1033\f0  "),\cf5 sprintf\cf1 ("%9.2f %7.2f %7.1f" ,\cf5 cat\cf1 (2,\lang4105 IScal_kg\lang1033 ,\cf5 shape\cf1 (rows,0.0),\cf5 shape\cf1 (rows,0.0)))));\par
   $t = \cf5 num\cf1 (out_matrix)\par
   out_matrix = out_matrix[\cf5 bindex\cf1 ((($t[;4] \cf3 !\cf1 = 0)||($t[;5] \cf3 !\cf1 = 0)||($t[;6] \cf3 !\cf1 = 0)));]\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    \cf3 return\cf1 (out_matrix);\par
\};\par
\cf2 //------------------------------------------------------------------------------------\cf1\par
\cf3\f5 Function\cf1  \cf4 Set_Banquereau_contours\cf1 ()\{\par
\tab\cf2 // extract contiguous contours around Sable Island\cf1\par
\lang4105\f1    \cf5 Matrix_Read\cf1 (\cf5 cat\cf1 (overlay_path,"Banq100m.xyp"),"bb100DATA",0);\par
   \cf5 Matrix_Read\cf1 (\cf5 cat\cf1 (overlay_path,"Banq90m.xyp"),"bb90DATA",0);\par
   \cf5 Matrix_Read\cf1 (\cf5 cat\cf1 (overlay_path,"Banq80m.xyp"),"bb80DATA",0);\par
   \cf5 Matrix_Read\cf1 (\cf5 cat\cf1 (overlay_path,"Banq50m.xyp"),"bb50DATA",0);\par
   \cf5 Matrix_Read\cf1 (\cf5 cat\cf1 (overlay_path,"Banq40m.xyp"),"bb40DATA",0);\par
\f0    Banquereau_100m_c = \f1 bb100DATA\f0 [\cf5 seq\cf1 (3083,6151);1 2];   \cf2 // contiguous 100 m contour around Banquereau Bank\cf1\par
   Banquereau_90m_c = \f1 bb90DATA\f0 [\cf5 seq\cf1 (1787,4623);1 2];     \cf2 // contiguous  90 m contour around Banquereau Bank\cf1\par
   Banquereau_80m_c = (bb80data[\cf5 seq\cf1 (1059,3645);1 2]);   \cf2 // contiguous  80 m contour around Banquereau Bank\cf1\par
   Banquereau_50mE_c = \f1 bb50DATA\f0 [\cf5 seq\cf1 (361,659);1 2];     \cf2 // contiguous  50 m contour on East end Banquereau Bank\cf1\par
   Banquereau_50mW_c = \f1 bb50DATA\f0 [\cf5 seq\cf1 (660,1684);1 2];     \cf2 // contiguous  50 m contour on West end Banquereau Bank\cf1\par
   Banquereau_40m_c = \f1 bb40DATA\f0 [\cf5 seq\cf1 (389,1119);1 2];     \cf2 // contiguous  40 m contour around Banquereau Bank\cf1\par
\};\par
\cf2\lang1033 //------------------------------------------------------------------------------------\cf1\par
\cf3 Function\cf1  \cf4 banq_map\cf1 (con_all)\{\par
\lang4105   Line_Width(pts(0.5));\par
\pard   \lang1033 Line_Colour("\lang4105 BLACK\lang1033 ");\par
\lang4105   Fill\lang1033 _Colour("\lang4105 BLACK\lang1033 ");\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105   Line_Type(0);\par
\cf0\f5 Page_Orientation(1);\par
data_projection("MERCATOR");\par
Data_Viewport(mm(50),mm(230),mm(60),mm(170));\cf1\par
\cf5 Data_Window\cf1 (-60.1,-57.,44.0,45.15);\cf0\par
Axis(1.000000,1.000000,0.000000,0.000000,1,0,1,0,0);\par
Line_Colour("RED"); Line_Type(0);\cf1\par
\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq500m.xyp"));\cf0\par
Line_Type(1);\cf1\par
\cf3 if\cf1 (con_all == 1)\{\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq400m.xyp"));\};\cf0\par
Line_Type(2);\cf1\par
\cf3 if\cf1 (con_all == 1)\{\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq300m.xyp"));\};\cf0\par
Line_Type(3);\cf1\par
\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq200m.xyp"));\cf0\par
Line_Type(4);\cf1\par
\cf3 if\cf1 (con_all == 1)\{\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq175m.xyp"));\};\cf0\par
Line_Colour("BLUE"); Line_Type(0);\cf1\par
\cf3 if\cf1 (con_all == 1)\{\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq150m.xyp"));\};\cf0\par
Line_Type(1);\cf1\par
\cf3 if\cf1 (con_all == 1)\{\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq125m.xyp"));\};\cf0\par
Line_Type(0);Line_Colour("BLACK");\cf1\par
\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq100m.xyp"));\cf0\par
Line_Type(3);Line_Colour("BLUE");\cf1\par
\cf3 if\cf1 (con_all == 1)\{\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq90m.xyp"));\};\cf0\par
Line_Type(4);\cf1\par
\cf3 if\cf1 (con_all == 1)\{\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq80m.xyp"));\};\cf0\par
Line_Colour("GREEN"); Line_Type(0);\cf1\par
\cf3 if\cf1 (con_all == 1)\{\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq70m.xyp"));\};\cf0\par
Line_Type(1);\cf1\par
\cf3 if\cf1 (con_all == 1)\{\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq60m.xyp"));\};\cf0\par
Line_Type(2);\cf1\par
\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq50m.xyp"));\cf0\par
Line_Type(3);\cf1\par
\cf3 if\cf1 (con_all == 1)\{\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq40m.xyp"));\};\cf0\par
Line_Type(4);\cf1\par
\cf3 if\cf1 (con_all == 1)\{\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq30m.xyp"));\};\cf0\par
Line_Colour("YELLOW"); Line_Type(0);\cf1\par
\cf3 if\cf1 (con_all == 1)\{\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq20m.xyp"));\};\cf0\par
Line_Type(1);\cf1\par
\cf3 if\cf1 (con_all == 1)\{\cf5 Overlay_XYP_File\cf1 (\cf5 cat\cf1 (overlay_path,"Banq10m.xyp"));\};\cf0\par
Line_Colour("BLACK");Line_Type(0);\cf1\par
\lang1033\f0\};\par
//------------------------------------------------------------------------------------\par
\lang4105 //Plot Proposed Gully Marine Protected Area\par
Function plot_gully_Mpa()\{\par
\tab gully_mpa = shape(7 2,decimal_matrix(-5906. 4413. -5835. 4347. -5835. 4335. -5908. 4335. -5908. 4355. -5920. 4406.));\par
\tab data_line(gully_mpa);\par
\};\par
\lang1033\f2 //------------------------------------------------------------------------------------\par
\cf3\lang4105\f0 Function\cf1  \cf4 Map_objects\cf1 (Gully, Stone_fence)\{\par
\tab Line_Type(1);\par
   \cf3 If\cf1 (Gully == 1)\{\par
      Line_Colour("SALMON");\par
      Fill_Colour("SALMON");\par
      plot_gully_Mpa()\lang1033 ;\par
    \};\par
\lang4105    \cf3 If\cf1 (Stone_fence == 1)\{\par
      Line_Colour("SALMON");\par
      Fill_Colour("SALMON");\par
      \cf4\f5 Coral_stone_fence\cf1\f0 (1)\lang1033 ;\par
    \};\par
\lang4105     \cf5 Line_Type\cf1 (0);\par
\pard\lang1033     Line_Colour("\lang4105 black\lang1033 ");\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105     Fill_Colour("black");\par
\};\par
\cf2\lang1033 // ------------------------------------------------------------------------------------------------------------\cf1\par
Function back_map(Area)\{\par
\lang4105   Line_Width(pts(0.5));\par
\pard   \lang1033 Line_Colour("\lang4105 BLACK\lang1033 ");\par
\lang4105   Fill\lang1033 _Colour("\lang4105 BLACK\lang1033 ");\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105   Line_Type(0);\par
\lang1033   If(Area == 1)\{\par
\tab  Data_Window(-6\lang4105 2\lang1033 .\lang4105 2\lang1033 ,-59.,43.,44.5); //Sable-Western Bank\par
    Data_Viewport(mm(40.),mm(2\lang4105 5\lang1033 0.),mm(30.),mm(170.));\par
    Axis(1.,.5,0.25,0.25,1,0,1,0,0);\par
  \}else if (area == 2)\{\par
\tab  Data_Window(-6\lang4105 1\lang1033 .\lang4105 4\lang1033 ,-59.,43.\lang4105 25\lang1033 ,44.5); //Sable Bank\lang4105  - Survey area\lang1033\par
    Data_Viewport(mm(40.),mm(\lang4105 192\lang1033 .),mm(30.),mm(1\lang4105 40\lang1033 .));\par
    Axis(1.,.5,0.25,0.25,1,0,1,0,0);\par
   \}\cf3 else\cf1  \cf3 if\cf1  (area == 3)\{\par
\tab  \cf5 Data_Window\cf1 (-6\lang4105 1.4\lang1033 ,-57.25,43.25,45.15); \cf2 // Banquereau to Sable\cf1\par
    \cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40.),\cf5 mm\cf1 (\lang4105 220\lang1033 .),\cf5 mm\cf1 (30.),\cf5 mm\cf1 (1\lang4105 40\lang1033 .));\par
     Axis(1.,.5,0.25,0.25,1,0,1,0,0);\par
   \}\cf3 else\cf1  \cf3 if\cf1  (area == 4)\{\par
\tab  \cf5 Data_Window\cf1 (-6\lang4105 0.1\lang1033 ,-57.25,44.,45.25); \cf2 // Banquereau \cf1\par
    \cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40.),\cf5 mm\cf1 (\lang4105 220\lang1033 .),\cf5 mm\cf1 (30.),\cf5 mm\cf1 (1\lang4105 40\lang1033 .));\par
     Axis(1.,.5,0.25,0.25,1,0,1,0,0);\par
   \}\cf3 else\cf1  \cf3 if\cf1  (area == 5)\{\par
\tab   \cf5 Data_Window\cf1 (-6\lang4105 8.0\lang1033 ,-57.25,42.,48.0); \cf2 // Scotian Shelf\cf1\par
     \cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40.),\cf5 mm\cf1 (\lang4105 220\lang1033 .),\cf5 mm\cf1 (30.),\cf5 mm\cf1 (1\lang4105 40\lang1033 .));\par
     Axis(1.,.5,0.25,0.25,1,0,1,0,0);\par
   \}\cf3 else\cf1  \cf3 if\cf1  (area == 6)\{\par
\tab    \cf5 Data_Window\cf1 (-6\lang4105 0.75\lang1033 ,-60.5,43.\lang4105 75\lang1033 ,43.8); \cf2 //Close up Cohasset-Panuke Area\cf1\par
      \cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40.),\cf5 mm\cf1 (\lang4105 192\lang1033 .),\cf5 mm\cf1 (30.),\cf5 mm\cf1 (1\lang4105 40\lang1033 .));\par
      \cf5 Axis\cf1 (1.,.5,0.25,0.25,1,0,1,0,0);\par
   \}\cf3 else\cf1  \cf3 if\cf1  (area == 7)\{                      \cf2 // Banquereau Bank\cf1\par
\lang4105\f5\tab\tab\cf5 Page_Orientation\cf1 (1);\par
\tab\tab\cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (50),\cf5 mm\cf1 (230),\cf5 mm\cf1 (60),\cf5 mm\cf1 (170));\par
\tab\tab\cf5 Data_Window\cf1 (-60.1,-57.2,44.0,45.05);\par
\lang1033\f0\tab\tab\cf5 Axis\cf1 (1.,.5,0.25,0.25,1,0,1,0,0);\par
   \}\cf3 else\cf1  \cf3 if\cf1  (area == 10)\{\par
\pard\cf5\lang4105\f5\tab Data_Window\cf0 (-52.25,-48.5,43.0,46.25);\par
\cf5\tab Data_Viewport\cf0 (\cf5 mm\cf0 (40.),\cf5 mm\cf0 (190.),\cf5 mm\cf0 (40.),\cf5 mm\cf0 (239.));\par
\tab Axis_increm = 0.5 0.25 0.1 0.1;\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf1\lang1033\f0    \};\par
  data_projection("MERCATOR");\par
\lang4105\f5   Character_Height(pts(12));\par
\pard\lang1033\f0   overlay_rangs(1,1,1,1,"BLACK","White","white"); \par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160   Line_Type(1);\par
  \cf5 Overlay_File\cf1 ("C:\\\lang4105\f5 Program Files (x86)\\\lang1033\f0 ACON\\Overlays\\dc50");\par
  \cf5 Line_Type\cf1 (0);\par
  \cf5 Overlay_File\cf1 ("C:\\\lang4105\f5 Program Files (x86)\\\lang1033\f0 ACON\\Overlays\\dc100");\par
  Line_Grey(0.75);\par
  Line_Type(3);\par
  \cf5 Overlay_File\cf1 ("C:\\\lang4105\f5 Program Files (x86)\\\lang1033\f0 ACON\\Overlays\\dc200");\par
  Line_Grey(0.);\par
  Line_Type(0);\par
\};\par
//------------------------------------------------------------------------------------\par
\cf3\lang4105\f1 Function\cf1  \cf4 Simple_biomass\cf1 (Map_area,\lang1033\f0 in_species\lang4105\f1 ,survey_polygon\lang1033\f0 ,sel_tows,Efficiency,sel_corr\lang4105\f1 )\{\par
\f5    \cf4\lang1033\f0 back_map\cf1 (4)\par
\lang4105\tab\cf4 Map_objects\cf1 (1,1);\f2\par
\tab Contour_Method(0);\par
\tab Data_Subtriangles(16);\par
\f1\tab\cf2 //\f2 Data_Contour_Levels(0  ,\f1 .9\f2  ,\f1 75.\f2   ,0.\f1 7\f2 5 ,\f1 100.\f2   ,0.5 ,\f1 150.\f2   ,0.\f1 3\f2 5 ,\f1 300.\f2   ,0.2 ,\f1 500.\f2 0 ,0 );\f1    // COmparison to 2004\cf1\f2\par
\f1\tab\cf2 //\tab\f2 Data_Contour_Levels(0  ,\f1 .9\f2  ,\f1 15.\f2   ,0.\f1 7\f2 5 ,\f1 35.\f2   ,0.5 ,\f1 75.\f2   ,0.\f1 3\f2 5 ,\f1 150.\f2   ,0.2 ,\f1 300.\f2 0 ,0 );\f1      // Good levels for 2010 raw survey catches\cf1\f2\par
\f1\tab\cf5\f2 Data_Contour_Levels\cf1 (0  ,\f1 .9\f2  ,\f1 30.\f2   ,0.\f1 7\f2 5 ,\f1 75.\f2   ,0.5 ,\f1 100.\f2   ,0.\f1 3\f2 5 ,\f1 150.\f2   ,0.2 ,\f1 500.\f2 0 ,0 );\f1      \cf2 // Good levels for 2010 efficiency corrected and economic\cf1\f2\par
\f1\tab\cf2 // \f2 Data_Contour_Levels(0  ,\f1 .9\f2  ,\f1 15.\f2   ,0.\f1 7\f2 5 ,\f1 35.\f2   ,0.5 ,\f1 75.0\f2   ,0.\f1 3\f2 5 ,\f1 100.0\f2   ,0.2 ,\f1 120.\f2 0 ,0 );\f1        // Grand Bank examine economic break even densities from Gardiner Pinfold 2002\cf1\f2\par
\tab\cf5 Data_Interpolation\cf1 (0,2,0);\par
\f1    \cf5 Draw_filled\cf1 (0);\par
\lang1033\f2    Marker_Height(mm(\lang4105\f1 2\lang1033\f2 .));\par
\f0    Catch = \cf4 Get_catch_2_orc\cf1 (in_species,sel_tows,1)   // Standardized catch per tow for selected species and tows  \par
\pard\lang4105\f5    \cf2 //---------------------------------------------------------------------------------------------------------------\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0    \cf3 if\cf1 (sel_corr == 1)\{  \par
\tab\tab\cf2 // Selectivity adjusted 2010 tows\cf1\par
\pard\lang4105\f5\tab\tab Catch_adj = Sel_adjusted_Catch(Catch,\lang1033\f0 sel_tows\lang4105\f5 );\par
\tab\tab Catch = catch_adj[;1 3];\par
\lang1033\f0    \lang4105\f5\};\par
   \cf2 //---------------------------------------------------------------------------------------------------------------\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0    \cf3 if\cf1 (catch[1;1] > 1000)\{                           \cf2 // Tow numbers have been indexed by survey by adding multiples of 1000\cf1\par
      idx = \cf5 bindex\cf1 (catch[;1] >= \cf5 int\cf1 (catch[;1]/1000)*1000 + 900)     \cf2 // Tows too rocky to dredge\cf1\par
   \}\cf3 else\cf1\{                                              \cf2 // using regular tow numbers i.e. < 1000 within a survey\cf1\par
\tab    idx = \cf5 bindex\cf1 (catch[;1] >=  900)                 \cf2 // Tows too rocky to dredge\cf1\par
   \};\par
\lang4105\f5   \lang1033\f0  catch[idx;2] = 0.0;                            \cf2 // set catch to zero for rocky tows\cf1\par
   catch[;2] = catch[;2]* 1.0/Efficiency ;                 \cf2 // efficiency correction\cf1\par
\pard\lang4105\f5    temp_idx = \cf5 bindex\cf1 (\cf5 member\cf1 (\lang1033\f0 sel_tows\lang4105\f5 ,tow_index))   \cf2 // index of selected tows\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f0    Datam = \cf5 cat\cf1 (2,\f5 tow_index\f0 [\f5 temp_idx]\f0 ,pos[\f5 temp_idx;]\f0 ,\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (t_tow[\f5 temp_idx]\f0 ),1),0.))   \cf2 // tow data for selected tows\cf1\par
   Datam[\cf5\f5 index\cf1 (\cf5 int\cf1 (\f0 Datam[;1])\f5 ,\cf5 int\cf1 (\lang1033\f0 Catch[;1])\lang4105\f5 );4] = \lang1033\f0 Catch\lang4105\f5 [;2];                 \cf2 // Match tow and catch data                 \lang1033\f0   \cf1\par
\lang4105    Datam = \cf5 cat\cf1 (2,datam,datam[;4]*2.0);                            \cf2\f5 // Catch/500m sq *2 to have /1000 msq for contouring as 5th column\cf1\f0\par
\f1    \cf5 Blanking_Distance\cf1 (1.0);             \cf2 // Make sure large enough as clipping to contour\cf1\f2\par
\f1    \cf5 polygon_border\cf1 ("polycatch",\f0 Datam[;2 3 4]\f1 ); \cf2 // polygon from data points\cf1\par
   Data_area = \cf5 polygon_area\cf1 (polycatch); \cf2 // area of above polygon\cf1\par
   \cf5 Print\cf1 ("Area of polygon defined by data points = ",Data_area);\par
\lang1033    \lang4105 Sur_poly = \cf5\f5 polygon_intersect\cf1 (\f1 survey_polygon\f5 ,\f1 polycatch\f5 ,0);             \cf2 // Intersect data_polygon &  survey polygon\cf1\par
   Area_sur_poly = \cf5 polygon_area\cf1 (\f1 Sur_poly);\f5\par
   \cf5 Print\cf1 ("Area of intersection of data polygon and survey polygon is: ",Area_sur_poly);\par
\f1    \cf5 line_colour\cf1 ("RED");\par
\f5    \cf5 polygon_draw\cf1 (\f1 Sur_poly\f5 );\par
\f1    \cf5 line_colour\cf1 ("BLUE");\par
\f5    \cf5 polygon_draw\cf1 (\f1 survey_polygon\f5 );\par
\f1    \cf5 line_colour\cf1 ("BLACK");\par
\lang1033\tab\cf5 Print\cf1 ("Shading contours");\par
\lang4105    \cf5 Draw_filled\cf1 (1);\par
   \cf5\f2 polygon_Shade_contours\cf1 (\f1 Sur_poly,\f0 Datam[;2 3 5]\f2 )\f1 ; \cf2 // Shade clipped to survey polygon \par
\cf1    \cf5 Draw_filled\cf1 (0);\par
\f2\tab\cf2\f1 //\f2 greyscale_legend(mm(1\f1 7\f2 0.),mm(\f1 132\f2 .));\cf1\par
\lang1033\f5\tab\cf5 Marker_Height\cf1 (\cf5 mm\cf1 (1.));\par
\f1   \lang4105  \cf5 data_points\cf1\lang1033\f2 (\lang4105\f0 Datam[;2 3 5]\lang1033\f2 );\par
\f5    Marker_Type(0);\par
   Fill_Colour("BLACK");\par
\lang4105\f1    \cf5 Print\cf1 ("Calculating volume (biomass) \cf3 for\cf1  data and survey intersection polygon,");\par
   acon_biomass = \cf5 volume_polygon\cf1 (Sur_poly,\f0 Datam[;2 3 5]\f1 ); \cf2 // volume = biomass\cf1\lang1033\f2\par
\lang4105\f1    \cf4\lang1033\f2 mke_legend\cf1 (\cf5 getview\cf1 (\lang4105\f1 1\lang1033\f2 ) \lang4105\f1 +\lang1033\f2  \cf5 mm\cf1 (\lang4105\f1 25\lang1033\f2 .),\cf5 getview\cf1 (\lang4105\f1 4\lang1033\f2 ) \lang4105\f1 -\lang1033\f2  \cf5 mm\cf1 (\lang4105\f1 25\lang1033\f2 .)); \cf2 // draw legend on map\cf1\par
\lang4105\f1    \cf5 print\cf1 (" Calculated biomass is:");\par
   \cf5 print\cf1 (acon_biomass);\par
   \cf5 print\cf1 (" ");\par
   \cf5 Print\cf1 ("Now doing statistics biomass:");\par
   \cf2 // stdTow = 666. * \f0 69.5/39.36996\f1 ; // Area of a standard tow Note: Catch can be standardized to a 1000 m sq tow for for ACOM map for simplicity\cf1\par
   stdTow = 500.; \cf2 // Area of a standard tow Note: has to match that in Get_catch_orc2\cf1\par
   factor = \f5 Area_sur_poly\f1  * 1000000./stdtow; \cf2 // Number of tows possible in survey area as defined by data extents & survey polygon\cf1\par
\pard\f5    p_idx = \cf5 bindex\cf1 (\cf5 inside\cf1 (Survey_polygon,Datam[;2 3],1));                \cf2 // inside polygon from selected tows\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f0    Data2 = Datam[p_idx;]                                              \cf2 // tow data for selected tows\cf1\par
\f1    Biomass = \cf5 ave\cf1 (\f0 Data2[;4]\f1 )* factor;   \cf2 //Ave(Std Catch/1000 m sq tow adjusted to Std Tow) * #poss tows\cf1\par
   MSY = .5*.08*biomass; \cf2 // Maximum sustainable yield with M = .08\cf1\par
   MCY = .33*.08*biomass; \cf2 // Maximum constant yield with M = .08\cf1\par
\lang1033\f2    sample_sd = \cf5 stdev\cf1 (\lang4105\f0 Data2[;4]\lang1033\f2 );\par
   tCI = 1.96 * \cf5 sqrt\cf1 ((\cf5 pow\cf1 (\lang4105\f1 factor\lang1033\f2 ,2) * sample_sd/\cf5\lang4105\f1 len\cf1 (data2)[1]\lang1033\f2 ) * ((\lang4105\f1 factor\lang1033\f2  - \cf5\lang4105\f1 len\cf1 (data2)[1]\lang1033\f2 )/\lang4105\f1 factor\lang1033\f2 ));\par
\lang4105\f1    \cf5 Print\cf1 ("Ave catch per standard tow = ",\cf5 ave\cf1 (\f0 Data2[;4]\f1 )," kg");\par
   Print("Area of a standard tow = ",stdtow," m sq");\par
\f0    \f1 Print(" ");\par
   \cf5 Print\cf1 ("Using polygon defined by stations and survey polygon to match Acon biomass"); \par
   \cf5 Print\cf1 ("Number of tows used in analysis = ",\cf5 str\cf1 (\cf5 len\cf1 (\lang1033\f0 data2)[1]\lang4105\f1 )); \par
   Print(\f0 sprintf(\f1 "Number of tows possible in survey area = \f0 %14.0f\f1 ",factor));\par
   \cf5 Print\cf1 ("surveyed area = ",\f5 Area_sur_poly\f1 ," km sq");\par
\f0    \f1 Print(\f0 sprintf("Survey Biomass (Ave catch per tow* #tows possible) =   %14.0f",biomass)," kg");\par
   \f1 Print(\f0 sprintf("                    95 percent confidence interval =    +- %10.0f",\lang1033\f2 tCI\lang4105\f0 )," kg")\par
   \f1 Print(\f0 sprintf("Estimated MSY  =   %10.0f",msy)," kg");\par
   \f1 Print(\f0 sprintf("Estimated 2/3 MSY = %9.0f",0.6667 * msy)," kg");\par
   \f1 Print(\f0 sprintf("Estimated MCY  =   %10.0f",mcy)," kg");\par
   \f1 Print(" ");\par
   \cf2 //\cf1\par
   \cf5 Print\cf1 ("Now doing statistics biomass \cf3 for\cf1  survey polygon");\par
   Survey_area = \cf5 polygon_area\cf1 (survey_polygon); \cf2 // area of survey polygon\cf1\par
   factor = Survey_area * 1000000./stdtow; \cf2 // Number of tows possible in survey area as defined by data extents & survey polygon\cf1\par
   Biomass = \cf5 ave\cf1 (\f0 Data2[;4]\f1 )* factor;   \cf2 //Ave(Std Catch/1000 m sq tow adjusted to Std Tow) * #poss tows\cf1\par
   MSY = .5*.08*biomass; \cf2 // Maximum sustainable yield with M = .08\cf1\par
   MCY = .33*.08*biomass; \cf2 // Maximum constant yield with M = .08\cf1\par
\lang1033\f2    sample_sd = \cf5 stdev\cf1 (\lang4105\f0 Data2[;4]\lang1033\f2 );\par
   tCI = 1.96 * \cf5 sqrt\cf1 ((\cf5 pow\cf1 (\lang4105\f1 factor\lang1033\f2 ,2) * sample_sd/\cf5\lang4105\f1 len\cf1 (data2)[1]\lang1033\f2 ) * ((\lang4105\f1 factor\lang1033\f2  - \cf5\lang4105\f1 len\cf1 (data2)[1]\lang1033\f2 )/\lang4105\f1 factor\lang1033\f2 ));\lang4105\f1   \cf2 // note: no small sample correction\cf1\lang1033\f2\par
\lang4105\f1    \cf5 Print\cf1 ("Ave catch per standard tow = ",\cf5 ave\cf1 (\f0 Data2[;4]\f1 )," kg");\par
   \cf5 Print\cf1 ("Sum of catch per standard tow = ",\cf5 sum\cf1 (\f0 Data2[;4]\f1 )," kg");\par
   \cf5 Print\cf1 ("Area of a standard tow = ",stdtow," m sq");\par
\f0    \f1 Print(" ");\par
   \cf5 Print\cf1 ("Using polygon defined by survey polygon "); \par
   \cf5 Print\cf1 ("Number of tows used in analysis = ",\cf5 str\cf1 (\cf5 len\cf1 (\lang1033\f0 Data2)[1]\lang4105\f1 )); \par
   Print(\f0 sprintf(\f1 "Number of tows possible in survey area = \f0 %14.0f\f1 ",factor));\par
   \cf5 Print\cf1 ("surveyed area = ",Survey_area," km sq");\par
\f0    \f1 Print(\f0 sprintf("Survey Biomass (Ave catch per tow* #tows possible) =   %14.0f",biomass)," kg");\par
   \f1 Print(\f0 sprintf("                    95 percent confidence interval =    +- %10.0f",\lang1033\f2 tCI\lang4105\f0 )," kg")\par
   \f1 Print(\f0 sprintf("Estimated MSY  =   %10.0f",msy)," kg");\par
   \f1 Print(\f0 sprintf("Estimated 2/3 MSY = %9.0f",0.6667 * msy)," kg");\par
   \f1 Print(\f0 sprintf("Estimated MCY  =   %10.0f",mcy)," kg");\par
   \cf5\f1 Print\cf1 (" ");\par
\};\lang1033\f2\par
\cf2\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\lang4105\f0 // Total length frequency  Note: weighted by total clam catch weight but does not correct for missing data\cf1\par
\pard\cf3\f5 Function\cf0  \cf4 TOTAL_LENGTH_FREQUENCY_2\cf0 (SP_CODE,SEL_TOWS,STANDARDIZE)\{\par
\cf3\tab if\cf0 (\cf5 len\cf0 (sel_tows) == 1)\{\par
\tab\tab Clam_catch = \cf4 Get_catch_2_orc\cf0 (sp_code,sel_tows,Standardize); \cf2 // Standardized or unstandardized catch for selected species\cf0\par
\tab\tab Clam_catch[\cf5 bindex\cf0 (clam_catch[;2] == \cf5 NAN\cf0 ());2] = 0.0;       \cf2 // Catches for rockey tows etc where no catch recorded\cf0\par
\tab\tab t_indx = \cf5 bindex\cf0 (((fs_tow_index == sel_tows)&&(fs_species == sp_code)));               \cf2 // index of selected tows in lf_sample data file for this species\cf0\par
\tab\tab lf_indx = \cf5 bindex\cf0 ((LF_tow_index==sel_tows)&&(lf_species == sp_code));               \cf2 // index of selected tow in len_freq data file for this species\cf0\par
\tab\}\cf3 else\cf0\{\par
\tab\tab Clam_catch = \cf4 Get_catch_2_orc\cf0 (sp_code,sel_tows,Standardize); \cf2 // Standardized catch for selected species\cf0\par
\tab\tab t_indx = \cf5 bindex\cf0 ((\cf5 member\cf0 (sel_tows,fs_tow_index)&&(fs_species == sp_code)));               \cf2 // index of selected tows in lf_sample data file for selected species, selected tows\cf0\par
\tab\tab lf_indx = \cf5 bindex\cf0 ((\cf5 member\cf0 (sel_tows,LF_tow_index)&&(lf_species == sp_code)));              \cf2 // index of selected tows in  len_freq data file for selected species, selected tows\cf0\par
\tab\}\par
\tab tt = \cf5 cat\cf0 (2,fs_tow_index[t_indx],weight_measured[t_indx],\cf5 shape\cf0 (\cf5 cat\cf0 (0,\cf5 len\cf0 (t_indx),2),\cf5 cat\cf0 (0,0.,1.)));  \cf2 // weights of measured clams per tow\cf0\par
\tab z2 = \cf5 index\cf0 (tt[;1],clam_catch[;1])\par
\tab z2 = z2[\cf5 bindex\cf0 (z2 \cf3 !\cf0 = 0)]\par
\tab a2 = \cf5 bindex\cf0 (\cf5 member\cf0 (tt[;1],clam_catch[;1]))\par
\cf5\tab insert\cf0 (tt,z2,\cf5 shape\cf0 (\cf5 len\cf0 (z2),3),clam_catch[a2;2]);                           \cf2 // insert std catch for this species into sample data file tt\cf0\par
\tab z_indx = \cf5 bindex\cf0 (tt[;2]>0)\par
\tab tt[z_indx;4] = tt[z_indx;3]/tt[z_indx;2];                \cf2 // factor to go from measured sample to total clam catch\cf0\par
\tab lf_datam = \cf5 cat\cf0 (2,lf_tow_index[lf_indx],lf_len[lf_indx],lf_N_at_len[lf_indx],\cf5 shape\cf0 (\cf5 len\cf0 (lf_indx),1.));   \cf2 // Set up matrix for data aggregation\cf0\par
\cf2\tab // Adjust for tows with a catch weight but no length frequency data (usually cases of a few unmeasurable clams)\cf0\par
\tab Catch_w_len_feq = \cf5 sum\cf0 (tt[;3]);                                                           \cf2 // sum of catches for which there is length frequencies\cf0\par
\tab Catch_wo_len_Freq = \cf5 sum\cf0 (clam_catch[\cf5 bindex\cf0 (\cf5 member\cf0 (tt[;1],clam_catch[;1]) == 0);2]);     \cf2 // sum of catches for which there are no length frequencies\cf0\par
\tab if(Catch_w_len_feq > 0)\{\par
\tab\tab Global_adj_factor = (Catch_w_len_feq + Catch_wo_len_Freq)/Catch_w_len_feq;   \cf2 // Factor to bump numbers up to total catch weight from measured catch by tow\cf0\par
       \}else\{\par
\tab\tab Global_adj_factor = 1;                                                       // if nothing to bump up\par
\tab\};\par
\tab lf_datam[;4]= tt[\cf5 index\cf0 (tt[;1],lf_datam[;1]);4]*Global_adj_factor * lf_datam[;3];       \cf2 // LF_Datam = tow length Measured_NAL  Total_NAL \cf0\par
\cf2\tab // Look for possible data errors\cf0\par
\tab B_idx = \cf5 bindex\cf0 ((tt[;2]==0)&&(tt[;3]>0));                          \cf2 // Records with no measured weight, but did have clams in length frequency: Check data files and correct\cf0\par
\cf3\tab if\cf0 (\cf5 len\cf0 (b_idx) > 0)\{\par
\cf5\tab\tab Print\cf0 ("Records with no measured weight recorded, but did have clams in length frequency, - Check data files and correct \cf3 if\cf0  possible");\par
\cf5\tab\tab Print\cf0 ("TOW, WGT_Measured, Catch_wgt");\par
\cf5\tab\tab Print\cf0 (tt[B_idx;]);\par
\tab\};\par
\cf3\tab if\cf0 (\cf5 len\cf0 (sel_tows) == 1)\{\par
\cf3\tab\tab if\cf0 (\cf5 len\cf0 (tt)[1] == 0)\{miss_lf = 1;\};\par
\tab\}\cf3 else\cf0\{\par
\tab\tab miss_lf = \cf5 bindex\cf0 (\cf5 member\cf0 (tt[;1],sel_tows)==0);      \cf2 // index of tows with no length frequency data\cf0\par
\cf3\tab\tab if\cf0 (\cf5 len\cf0 (Miss_lf) > 0)\{\par
\tab\tab\tab Miss_LF_idx = sel_tows[Miss_lf];                                  \cf2 // Tows with no length frequency\cf0\par
\tab\tab\tab Bad_idx = Miss_LF_idx[\cf5 bindex\cf0 (\cf5 member\cf0 (Clam_catch[\cf5 bindex\cf0 (Clam_catch[;2] >0.);1],Miss_LF_idx))]; \cf2 // Tows with no length frequency but do have a catch weight\cf0\par
\cf3\tab\tab\tab if\cf0 (\cf5 len\cf0 (Bad_idx) > 0)\{\par
\cf5\tab\tab\tab\tab Print\cf0 ("Records with no length frequency but have a catch weight recorded, - Check data files and correct \cf3 if\cf0  possible");\par
\cf5\tab\tab\tab\tab Print\cf0 (\cf5 cat\cf0 ("TOWS",\cf5 str\cf0 (bad_idx)));\par
\tab\tab\tab\};\par
\tab\tab\};\par
\tab\};\par
\cf2\tab // end of error check\cf0\par
\tab Aggdata = \cf5 aggregate\cf0 (lf_datam[;2],1,"sum",lf_datam[;4]);\par
\cf3\tab return\cf0 (aggdata);\par
\};\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033\f2 /\lang4105\f1 / \lang1033\f2 ----------------------------------------------------------------------------------------------------------\lang4105\f1 -------------------------------\cf1\lang1033\f2\par
F\cf3 unction\cf1  \cf4 mke_legend\cf1 (xpos,ypos) \{\par
  \lang4105\f1 //\lang1033\f2 Data_Clip_Window(0);\lang4105\f1   // have to convert to use data_clip_polygon\lang1033\f2\par
  Line_Type(0);\par
   Fill_Colour("white");\par
   Line_Colour("white");\par
   Marker_Type(3);\par
   Marker_Height(mm(45.));\par
   Draw_marker(cat(0,xpos,ypos));  /* trying to draw background for legend, not working */\par
   Fill_Colour("Black");\par
   Line_Colour("Black");\par
   Character_Height(pts(10.));\par
   Marker_Height(mm(\lang4105\f1 2\lang1033\f2 .));\par
  \lang4105\f1  \lang1033\f2 Decimal_Digits(0);\par
   GreyScale_Legend(xpos - mm(2\lang4105\f1 0\lang1033\f2 .),ypos + mm(15.));\par
   Character_Alignment(1); \par
\f1    x_off = mm(10.); // offset in x axis direction\f2\par
   draw_text(xpos\f1  +\f2  \f1 x_off\f2 ,ypos + mm(11),\lang4105\f0 sprintf("%9.0f",\f1 acon_biomass\lang1033\f2 [3;2 3]));\par
   draw_text(xpos\f1  +\f2  \f1 x_off\f2 ,ypos + mm(5.5),\lang4105\f0 sprintf("%9.0f"\lang1033\f2 ,\lang4105\f1 acon_biomass\lang1033\f2 [4;2 3]));\par
   draw_text(xpos\f1  +\f2  \f1 x_off\f2 ,ypos - mm(0),\lang4105\f0 sprintf("%9.0f"\lang1033\f2 ,\lang4105\f1 acon_biomass\lang1033\f2 [5;2 3]));\par
   draw_text(xpos\f1  +\f2  \f1 x_off\f2 ,ypos - mm(5.5),\lang4105\f0 sprintf("%9.0f"\lang1033\f2 ,\lang4105\f1 acon_biomass\lang1033\f2 [6;2 3]));\par
   draw_text(xpos\f1  +\f2  \f1 x_off\f2 ,ypos - mm(11),\lang4105\f0 sprintf("%9.0f"\lang1033\f2 ,\lang4105\f1 acon_biomass\lang1033\f2 [7;2 3]));\par
   draw_text(xpos\f1  +\f2  \f1 x_off\f2 ,ypos - mm(1\lang4105\f1 6.5\lang1033\f2 ),\lang4105\f0 sprintf("%9.0f"\lang1033\f2 ,\lang4105\f1 acon_biomass\lang1033\f2 [\lang4105\f1 8\lang1033\f2 ;2 3]));\par
   Character_Alignment(0); \par
   \cf5 draw_text\cf1 (xpos - \cf5 mm\cf1 (21),ypos + \cf5 mm\cf1 (18),"\lang4105\f1 t\lang1033\f2 /\lang4105\f1 km sq.\lang1033\f2 "); \par
   draw_text(xpos + mm(1),ypos + mm(18),"Area k2"); \par
   draw_text(xpos + mm(15),ypos + mm(18),"mt\lang4105\f1  \lang1033\f2 "); \par
   Marker_Type(0);\par
\};\par
\cf2 /\lang4105\f1 / \lang1033\f2 ----------------------------------------------------------------------------------------------------------\lang4105\f1 -------------------------------\cf1\lang1033\f2\par
\f0 f\cf3 unction\cf1  \cf4 set_paths\cf1 (c)\{\par
\tab\cf3 if\cf1 (c==1)\{\par
\tab\tab s\cf5 earch_paths\cf1 (\lang4105\f5 "\f0 R:\\Science\\Population Ecology Division\\Sections\\Eastern Scotian Shelf\\Clam Group\\ACONLibraries\\\f5 Clam_library\\");\par
\lang1033\f0\tab\tab\cf5 search_paths\cf1 (\lang4105\f5 "\f0 R:\\Science\\Population Ecology Division\\Sections\\Eastern Scotian Shelf\\Clam Group\\ACONLibraries\\\f5 Dale_library\\");\par
\lang1033\f0\tab\tab\cf5 search_paths\cf1 (\lang4105\f5 "\f0 R:\\Science\\Population Ecology Division\\Sections\\Eastern Scotian Shelf\\Clam Group\\ACONLibraries\\\f5 Clam_library\\\lang1033\f0 Map_objects\\\lang4105\f5 ");\par
\pard\tab Overlay_Path = "R:\\Science\\Population Ecology Division\\Sections\\Eastern Scotian Shelf\\Clam Group\\ACONLibraries\\BANQ_xyp\\";\f0              \cf2 // R drive path overlay folder path\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tab\tab in_path = \f5 "\f0 R:\\Science\\Population Ecology Division\\Sections\\Eastern Scotian Shelf\\Clam Group\\2010 Banquereau Survey\\Data\\Text Data\\";  \cf2 // R drive path\cf1\par
\lang1033\tab\}\cf3 else\cf1\{\par
\tab\tab\cf5 search_paths\cf1 (\lang4105\f5 "C:\\Program Files (x86)\\ACON\\Clam_library\\");\par
\lang1033\f0\tab\tab\cf5 search_paths\cf1 (\lang4105\f5 "C:\\Program Files (x86)\\ACON\\Dale_library\\\lang1033\f0 ");\par
\tab\tab\cf5 search_paths\cf1 ("\lang4105\f5 C:\\Program Files (x86)\\ACON\\Clam_library\\\lang1033\f0 Map_objects\\");\par
\tab\tab\lang4105\f5 Overlay_Path = \lang1033\f0 "\lang4105\f5 C:\\Program Files (x86)\\ACON\\BANQ_xyp\\\lang1033\f0 ";\par
\pard\lang4105\f5\tab\f0 in_path = \f5 "F:\\Dale\\Clam Work\\2010 Banquereau Survey\\data\\R drive\\";\par
\tab  (x86)\par
   \};\par
\};\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033\f2 /\lang4105\f1 / \lang1033\f2 ----------------------------------------------------------------------------------------------------------\lang4105\f1 -------------------------------\cf1\lang1033\f2\par
\pard\cf3\lang4105\f5 Function\cf1  \cf4 mappath\cf1 (x) \{\cf3 return\cf1 (\cf5 cat\cf1 ("C:\\Program Files (x86)\\ACON\\Overlays\\",x))\};  \cf2 // Missing from ACON definitions???\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033\f2 /\lang4105\f1 / \lang1033\f2 ----------------------------------------------------------------------------------------------------------\lang4105\f1 -------------------------------\cf1\lang1033\f2\par
\pard\cf2\lang4105\f5 //Character_Read("Catch_data_B.txt","cDATA");\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\f0 // Reading in Combined data files\cf1\par
\cf2 // Dist_method = 2;\cf1\par
\cf2 // \lang1033 read_delimited_\lang4105 Len_freq_data_\lang1033 file_combined(in_path,\lang4105 "\f1 Len_Freq_data_a.txt",\f0 "\f1 Len_Freq_data_b.txt"\lang1033\f0 )\lang4105 ;\cf1\par
\cf2 // \lang1033 read_delimited_\lang4105 Tow_data_\lang1033 file(in_path,\lang4105 "\f5 Tow_data.txt\f0 ",Dist_method\lang1033 )\lang4105 ;\cf1\par
\cf2 // \lang1033 read_delimited_\lang4105 Catch_data_\lang1033 file(in_path,\lang4105 "\f5 Catch_data.txt\f0 "\lang1033 )\lang4105 ;\cf1\par
\cf2 // \lang1033 read_delimited_Oracle_\lang4105 By_catch_\lang1033 file2(in_path,"\lang4105\f5 ByCatch Catch Data.txt"\lang1033\f0 );\cf1\par
\cf2\lang4105 // \lang1033 read_delimited_\lang4105 FreqSample_\lang1033 file(in_path,"\lang4105\f1 Freq_Sample_data.txt\lang1033\f0 ");\cf1\lang4105\par
\cf2 // \lang1033\f2 read_delimited_\lang4105\f1 Morphometrics_\lang1033\f2 file(in_path,\lang4105\f1 "Morphometrics_dataB.txt"\lang1033\f2 )\lang4105\f1 ; // \cf1\par
\cf2\lang1033\f0 // Index_tows();\cf1\par
\cf2 // check_data_files()\cf1\par
\cf2 // only Banquereau 2010 files\cf1\par
set_paths(2)\par
\lang4105 Dist_method = 1;\par
\cf4\lang1033 read_delimited_\lang4105 Len_freq_data_\lang1033 file\cf1 (in_path,\lang4105 "\f1 Orc_lf_2010.txt"\lang1033\f0 )\lang4105 ;\par
\cf4\lang1033 read_delimited_\lang4105 Tow_data_\lang1033 file\cf1 (in_path,\lang4105 "\f5 Tow_Data_Banq_2010.txt\f0 ",Dist_method\lang1033 )\lang4105 ;\par
\cf4\lang1033 read_delimited_\lang4105 Catch_data_\lang1033 file\cf1 (in_path,\lang4105 "\f5 Catch_Data_Banq_2010.txt\f0 "\lang1033 )\lang4105 ;\par
\cf4\lang1033 read_delimited_\lang4105 FreqSample_\lang1033 file\cf1 (in_path,"\lang4105\f1 Orc_Samp_freq_2010.txt\lang1033\f0 ");\lang4105\par
\cf4\lang1033\f2 read_delimited_\lang4105\f1 Morphometrics_\lang1033\f2 file\cf1 (in_path,\lang4105\f1 "allmorphs BAN2010.txt"\lang1033\f2 )\lang4105\f1 ; \par
\cf2\lang1033\f0 //read_delimited_Oracle_\lang4105 By_catch_\lang1033 file2(in_path,"BycatchData 2010 Orc.txt\lang4105\f5 "\lang1033\f0 );\cf1\par
\pard\cf0\lang4105\f5 read_delimited_Oracle_By_catch_file2(in_path,"ORC_BycatchData 2010.txt");\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160     tow_index =    \lang1033\f0 t_\lang4105\f5 tow;  \cf2 // unique tow index\cf1\par
\lang1033\f0     C_tow_index = \lang4105\f5   C_tow;  \cf2 // unique\cf1\lang1033\f0\par
    B_tow_index = \lang4105\f5   B_tow;  \cf2 // unique\cf1\lang1033\f0\par
    LF_tow_index =\lang4105\f5   LF_tow;  \cf2 // unique\cf1\lang1033\f0\par
    FS_tow_index = \lang4105\f5  FS_tow;  \cf2 // unique\cf1\lang1033\f0\par
    OB_tow_index = \lang4105\f5   \f1 OB_TOW_NO\f5 ;  \cf2 // unique\cf1\lang1033\f0\par
    M_tow_index = \lang4105\f5   M_tow;  \cf2 // unique\cf1\par
\lang1033\f0\par
\lang4105\f5 Dist_m = Dist_adj;                                                                           \cf2 // Use SSP derived tow distances\par
\cf1\par
\cf2\lang1033\f0 //---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 //---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 //---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 //---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 //---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 //---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 //---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 //---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\cf1\par
\pard\lang4105 Good_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 1)&&(t_SURVEY == "\f5 T12010-01\f0 "))]; \cf2 // list of regular survey tows that were sussessful \cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033 //Surfclam, propellerclam,cockles and quahogs\cf1\par
species_cds= 80983 81343 81763 80944 80879 79718 79619;   \cf2 //\cf1\par
Species_names = \cf5 strfold\cf1 ("Arctic Surfclams/Ocean Quahogs/Propellerclams/Atlantic Surfclams/Greenland Cockles/Sea Scallops/Icelandic Scallops","/");\par
Title = "Selected species in clam surveys";\par
\cf4\lang4105\f5 Back_Map\cf1 (4);\par
\cf4\f0 Map_objects\cf1 (1,1)\f5\par
\cf4\lang1033\f0 multi_Plot\cf1 (Good_tows,species_cds,Species_names,Title)\par
rocky = \cf5 bindex\cf1 ((tow_type == 1)&&(Tow_quality == 2)); \cf2 // tows too rocky to dredge\cf1\par
Deep = \cf5 bindex\cf1 ((tow_type == 1)&&(Tow_quality == 3)); \cf2 // tows too deep to dredge\cf1\par
\pard\cf5\lang4105\f5 Marker_Type\cf1 (1);\par
\cf5 Marker_Height\cf1 (\cf5 mm\cf1 (1.5));\par
\cf5 Fill_Colour\cf1 ("RED");\par
\cf5\lang1033\f0 data_points\cf1 (pos[rocky;1 2 2]);\par
\cf5\lang4105\f5 Fill_Colour\cf1 ("BLUE");\par
\cf5\lang1033\f0 data_points\cf1 (pos[deep;1 2 2]);\par
\par
\cf4 Make_catch_table\cf1 (80983,Good_tows)\par
\lang4105\f5\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2 // Map of station locations with tow numbers\cf1\par
B\cf4 ack_Map\cf1 (4);\par
\cf4\f0 Map_objects\cf1 (1,1)\par
g_idx = \cf5\f5 bindex\cf1 (\cf5 member\cf1 (good_tows,tow_index));\f0\par
\cf5\f5 Data_points\cf1 (pos[\f0 g_idx\f5 ;1 2 2]);\par
\cf5 Character_Height\cf1 (\cf5 pts\cf1 (8));\par
\cf5 Data_labels\cf1 (\cf5 cat\cf1 (2,pos[g_idx;1 2],tow_index[g_idx]));\par
\lang1033\f0 rocky = \cf5 bindex\cf1 ((tow_type == 1)&&(Tow_quality == 2)); \cf2 // tows too rocky to dredge\cf1\par
Deep = \cf5 bindex\cf1 ((tow_type == 1)&&(Tow_quality == 3)); \cf2 // tows too deep to dredge\cf1\par
\pard\cf5\lang4105\f5 Marker_Type\cf1 (1);\par
\cf5 Marker_Height\cf1 (\cf5 mm\cf1 (1.5));\par
\cf5 Fill_Colour\cf1 ("RED");\par
\cf5\lang1033\f0 data_points\cf1 (pos[rocky;1 2 2]);\par
\cf5 data_labels\cf1 (\cf5 cat\cf1 (2,pos[rocky;1 2],tow_index[rocky]));\par
\cf5\lang4105\f5 Fill_Colour\cf1 ("BLUE");\par
\cf5\lang1033\f0 data_points\cf1 (pos[deep;1 2 2]);\par
\cf5 data_labels\cf1 (\cf5 cat\cf1 (2,pos[deep;1 2],tow_index[deep]));\par
\cf5\lang4105\f5 Character_Height\cf1 (\cf5 pts\cf1 (12));\lang1033\f0\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5\lang4105 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (12.),"Banquereau 2010 Survey Stations");\f5\par
\lang1033\f0\par
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\par
\cf2 // Check tow distances\cf1\par
\cf5 Data_projection\cf1 ("MERCATOR");                                                  \cf2 // Make sure projection is on\cf1\par
T_dist = \cf5 data_distance\cf1 (\cf5 cat\cf1 (2,start_long,start_lat,End_long,End_lat))          \cf2 // Calculate tow distances\cf1\par
sort_index = \cf5 ascending\cf1 (t_dist[;1]);                                           \cf2 // Index for sorting by ascending tow distances\cf1\par
out = \cf5 cat\cf1 (2,t_tow,start_lat,start_long,End_lat,End_long,t_dist[;1]*1000.,t_dist[;2]);  \cf2 // Put together in matrix, convert distance to meters\cf1\par
out = out[sort_index;];                                                      \cf2 // Sort \cf1\par
\cf5 Print\cf1 (out)\par
\cf2 /*\par
//---------------------------------------------------------------------------------------------------------\par
\lang4105\f5 // Make Catch Tables to check catch calculations for both a main catch species and a by-catch only species\par
\lang1033\f0 //---------------------------------------------------------------------------------------------------------\par
\lang4105\f5 s_tows = tow_index[bindex((t_survey == "\lang1033\f0 CK2003-01")||\lang4105\f5 (t_survey == "\lang1033\f0 CK2004-01"))];\lang4105\f5\par
\lang1033\f0 Surf_clam_catch = Make_catch_table(80983,good_tows);\par
Sand_dollar_catch = Make_catch_table(158016,s_tows);\par
//---------------------------------------------------------------------------------------------------------\par
// Test script to fill missing data:  Fill_Bycatch_Table\par
//---------------------------------------------------------------------------------------------------------\par
Sertularia_no_fill = Make_catch_table(49901,s_tows);  // catch table with no filling\par
Fill_Bycatch_Table()\par
Sertularia_filled = Make_catch_table(49901,s_tows);   // catch table after filling\par
//---------------------------------------------------------------------------------------------------------\par
*/\cf1\par
\par
\cf2 //---------------------------------------------------------------------------------------------------------\cf1\par
\cf2 // total ve clam catch\cf1\par
\cf2 //---------------------------------------------------------------------------------------------------------\cf1\par
\pard\cf3\lang4105\f5 Function\cf1  \cf4 Plot_tot_vs_clams\cf1 (sel_survey)\{\par
\tab Use_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&((Tow_Quality == 1)||(Tow_Quality == 2))&&((t_SURVEY == sel_survey)))]; \par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0\tab     Catch = \cf4 Get_catch_2_orc\cf1 (80983,use_tows,0)   \cf2 // Unstandardized catch per tow for selected species and tows  \cf1\par
\pard\lang4105\f5\tab\cf5 data_projection\cf1 ("NIL")\par
\cf0\tab Data_Window(0,2500,0,500);\cf1\par
\tab\cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (50),\cf5 mm\cf1 (180),\cf5 mm\cf1 (100),\cf5 mm\cf1 (230));\par
\tab\cf5 Axis\cf1 (500.0,100.0,50.0,10.0,1,0,1,0,0);\par
\cf5\tab Marker_Type\cf1 (0);\par
\lang1033\f0\tab\cf5 Marker_Height\cf1 (\cf5 mm\cf1 (3.0));\par
\lang4105\f5\tab t2=\cf5 bindex\cf1 (\cf5 member\cf1 (\lang1033\f0 catch[;1],C_tow_index))\par
\lang4105\f5\tab t3=\cf5 bindex\cf1 (\cf5 member\cf1 (\lang1033\f0 C_tow_index[t2],catch[;1]))\par
\tab\cf5 data_points\cf1 (\cf5 cat\cf1 (2,\lang4105 Tot_Catch_kg\lang1033 [t2],catch[t3;2]));\par
\tab\cf5 Draw_text\cf1 (\cf5 mm\cf1 (100.),\cf5 mm\cf1 (90),"Total Catch (kg)");\par
\tab\cf0\lang4105\f5 Character_Rotation(90);\cf1\par
\lang1033\f0\tab\cf5 Draw_text\cf1 (\cf5 mm\cf1 (40.),\cf5 mm\cf1 (160),"Clam Catch (kg)");\par
\tab\cf5\lang4105\f5 Character_Rotation\cf1 (0);\par
\lang1033\f0\}\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2 //---------------------------------------------------------------------------------------------------------\cf1\par
\pard\cf3\lang4105\f5 Function\cf1  \cf4 Plot_Vol_tot_vs_clams\cf1 (sel_survey)\{\par
\tab Use_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&((Tow_Quality == 1)||(Tow_Quality == 2))&&((t_SURVEY == sel_survey)))]; \par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0\tab     Catch = \cf4 Get_catch_2_orc\cf1 (80983,use_tows,0)   \cf2 // Unstandardized catch per tow for selected species and tows  \cf1\par
\pard\lang4105\f5\tab\cf5 data_projection\cf1 ("NIL")\par
\tab\cf5 Data_Window\cf1 (0,100,0,500);\par
\tab\cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (50),\cf5 mm\cf1 (180),\cf5 mm\cf1 (100),\cf5 mm\cf1 (230));\par
\tab\cf5 Axis\cf1 (25.0,100.0,5.0,10.0,1,0,1,0,0);\par
\cf5\tab Marker_Type\cf1 (0);\par
\lang1033\f0\tab\cf5 Marker_Height\cf1 (\cf5 mm\cf1 (3.0));\par
\lang4105\f5\tab t2=\cf5 bindex\cf1 (\cf5 member\cf1 (\lang1033\f0 catch[;1],C_tow_index))\par
\lang4105\f5\tab t3=\cf5 bindex\cf1 (\cf5 member\cf1 (\lang1033\f0 C_tow_index[t2],catch[;1]))\par
\tab\cf5 data_points\cf1 (\cf5 cat\cf1 (2,\lang4105 Tot_Catch_Vol\lang1033 [t2],catch[t3;2]));\par
\tab\cf5 Draw_text\cf1 (\cf5 mm\cf1 (100.),\cf5 mm\cf1 (90),"Total Catch (Bu)");\par
\tab\cf0\lang4105\f5 Character_Rotation(90);\cf1\par
\lang1033\f0\tab\cf5 Draw_text\cf1 (\cf5 mm\cf1 (40.),\cf5 mm\cf1 (160),"Clam Catch (kg)");\par
\tab\cf5\lang4105\f5 Character_Rotation\cf1 (0);\par
\lang1033\f0\}\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2 //---------------------------------------------------------------------------------------------------------\cf1\par
\cf4\lang4105\f5 Plot_tot_vs_clams\cf1 (\f0 "T12010-01"\f5 );\lang1033\f0\par
\par
\lang4105\f5 Plot_Vol_tot_vs_clams(\f0 "T12010-01"\f5 )\par
\lang1033\f0\par
\cf2\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\lang4105\f5 //  Map with pies for major Clams\cf1\par
\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\f0 species_cds= 80983 80879 81763 81343;   \cf2 //\cf1\par
Species_names = \cf5 strfold\cf1 ("Surfclams/Cockles/Propellerclams/Quahogs","/");\par
Title = "Banquerau 2010";\par
\cf2 // Fill_Bycatch_Table(); // tries to fill in using average weights, note: changes data files\cf1\par
\cf4\lang4105\f5 Back_Map\cf1 (4);\par
\cf4\f0 Map_objects\cf1 (1,1)\f5\par
\cf4\lang1033\f0 multi_Plot\cf1 (Good_tows,species_cds,Species_names,Title)\par
\lang4105\f1\par
\lang1033\f0 species_cds= 80983 81343 81763 80944 80879 79718 79619;   \cf2 //Major bivalves\cf1\par
Species_names = \cf5 strfold\cf1 ("Arctic Surfclams#Ocean Quahogs#Propellerclams#Atlantic Surfclams#Greenland Cockles#Sea Scallops#Icelandic Scallops","#");\par
Title = "Major Bivalves"\cf4\par
back_map\cf1 (4)\par
\cf4 multi_Plot\cf1 (Good_tows,species_cds,Species_names,Title)\lang4105\par
\lang1033  \cf2 //polygon_draw(CC_30m);\cf1\par
\lang4105\f1\par
\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\lang4105\f5 //  Map with pies for Quahogs and sea cucumbers\cf1\par
\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\pard\lang4105\f0 Good_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 1)&&(t_SURVEY == "T12010-01"))]; \cf2 // list of regular survey tows that were sussessful \cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033 species_cds= 81343 158159;   \cf2 //\cf1\par
Species_names = \cf5 strfold\cf1 ("Quahogs/sea Cucumbers","/");\par
Title = "Grand Bank Clam Surveys";\par
\cf4 back_map\cf1 (4)\par
\cf2 //Fill_Bycatch_Table(); // tries to fill in using average weights, note: changes data files\cf1\par
m\cf4 ulti_Plot\cf1 (Good_tows,species_cds,Species_names,Title)\lang4105\par
\f1\par
\pard\cf2\f0 // Clams versus rocks\cf1\par
Good_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 1)&&(t_SURVEY == "T12010-01"))]; \cf2 // list of regular survey tows that were sussessful \cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033 species_cds= 80983 -7665 -6080 -6150;   \cf2 //\cf1\par
Species_names = \cf5 strfold\cf1 ("A_Surfclams/Rocks_Stones/Rock/Gravel","/");\par
Title = "Banquereau 2010 Clam Survey";\par
\lang4105\f5 Back_Map(4);\par
\cf4\f0 Map_objects\cf1 (1,1)\f5\par
\cf4\lang1033\f0 multi_Plot\cf1 (Good_tows,species_cds,Species_names,Title)\par
\cf5\lang4105 print\cf1 (data_out);\par
\cf5 next_page\cf1 ();\par
\pard\cf2\lang1033 //Data_Window(0,1.02*max(\lang4105\f5 sum(datam[;5 6 7],2)),\lang1033\f0 0,250);\cf1\par
\cf5 Data_Window\cf1 (0,2000.\lang4105\f5 ,\lang1033\f0 0,400);\par
\cf5\lang4105\f5 Data_Viewport\cf1 (\cf5 mm\cf1 (50),\cf5 mm\cf1 (180),\cf5 mm\cf1 (100),\cf5 mm\cf1 (230));\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5 data_projection\cf1 ("NIL")\par
\cf5 Axis\cf1 (500.0,50.0,100.0,10.0,1,0,1,0,0);\par
\cf5\lang1033\f0 Marker_Height\cf1 (\cf5 mm\cf1 (3.0));\lang4105\f5\par
\pard\lang1033\f0 Marker_Type(0);\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5\lang4105\f5 data_points\cf1 (\cf5 cat\cf1 (2,\cf5 sum\cf1 (datam[;5 6 7],2),datam[;4]));\par
\lang1033\f3\par
\par
\par
\cf2 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf4\f0 plot_length_frequency\cf1 (80983,good_tows,1,1); \cf2 // Plot of survey length frequencies\cf1\par
\pard\lang4105\f5\par
\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\lang4105\f0 //  Looking at average length\cf1\lang1033\f3\par
\cf2 // ------------------------------------------------------------------------------------------------------------\cf1\par
\pard\lang4105\f5 Avelen = \cf5 aggregate\cf1 (lf_datam[;1],1,"AVERAGE",lf_datam[;2]);  \cf2 // average length per tow of species selected in "\lang1033\f0 plot_length_frequency" script\cf1\lang4105\f5\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0 garb = \cf4 Make_catch_table\cf1 (80983,good_tows); \par
\pard\lang4105\f5 tow_num = \cf5 num\cf1 (tt[;\cf5 seq\cf1 (14,20)]);                 \cf2 // get tow number out of tt character matrix formed in "\lang1033\f0 plot_length_frequency" script\cf1\lang4105\f5\par
T_idx = \cf5 index\cf1 (avelen[;1],tow_num)               \cf2 // index of occurance of avelen tow numbers in tt tow numbers\cf1\par
\lang1033\f0 std_catch = \cf5 num\cf1 (tt[;\cf5 seq\cf1 (123,134)])\lang4105\f5              \cf2 // get standard catch out of tt character matrix formed in "\lang1033\f0 plot_length_frequency" script\cf1\lang4105\f5\par
\lang1033\f0 c_mat = \cf5 cat\cf1 (2,tow_num,std_catch,\cf5 shape\cf1 (\cf5 len\cf1 (tow_num),0.))               \cf2 // form matrix of tow number, std catch and zeros\cf1\par
c_mat[\cf5 bindex\cf1 (t_idx \cf3 !\cf1 = 0);3] = avelen[t_idx[\cf5 bindex\cf1 (t_idx \cf3 !\cf1 = 0)];2]     \cf2 // replace column 3 with ave length for that tow\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\f0\par
\cf2\lang4105\f5 // --------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\f1 // -------------- Function to estimate catch weight above cut off size ------------------------------------------------------------\cf1\par
\cf2\f5 // --------------------------------------------------------------------------------------------------------------------------------\cf1\par
\pard\cf3 Function\cf1  \cf4 Split_catch_weight\cf1 (Size,Sel_Species,Sel_tows)\{\par
\tab per_over = \cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (sel_tows),4),0.); \cf2 // empty matrix for results\cf1\par
\tab per_over[;1] = sel_tows;\par
\tab  M_idx = \cf5 bindex\cf1 ((\cf5 Member\cf1 (Sel_tows,M_tow_index))&&(M_Species == Sel_species));   \cf2 // index of records for selected tows for selected species \cf1\par
       m_idx = m_idx[\cf5 bindex\cf1 ((Leng[M_idx]>0)&&(Leng[M_idx]\cf3 !\cf1 =\cf5 NAN\cf1 ())&&(totWgt[M_idx]>0)&&(totWgt[M_idx] \cf3 !\cf1 = \cf5 NAN\cf1 ()))];   \cf2 // only Morph records with length and totWgt\cf1\par
       reg_par = \cf5 linear_regression\cf1 (\cf5 log\cf1 (Leng[M_idx]),\cf5 Log\cf1 (totWgt[M_idx])); \cf2 // overall length - weight logged regression\cf1\par
       WgtAgg = \cf5 aggregate\cf1 (Leng[M_idx],5, "Average",totWgt[M_idx])\cf2 // Average weight per 5 mm increment \cf1\par
       \cf3 For\cf1 (t = 1; t<= \cf5 len\cf1 (sel_tows); t = t++)\{\par
           Aggdata = \cf4 Total_length_frequency_2\cf1 (Sel_species,sel_tows[t],1);  \cf2 // Length frequency expanded to catch per standardized tow\cf1\par
           per_over[t;3] = clam_catch[1;2]; \cf2 // Catch weight for tow\cf1\par
           \cf3 if\cf1 (\cf5 len\cf1 (aggdata)[1] > 0)\{\par
             Aggdata2 = \cf5 aggregate\cf1 (aggdata[;1],5,"sum",aggdata[;2]);      \cf2 // aggregate in 5 mm increments\cf1\par
             rr = \cf5 cat\cf1 (2,Aggdata2[;1],\cf5 exp\cf1 (reg_par[2] + reg_par[1] * \cf5 log\cf1 (Aggdata2[;1] + 2.5)));  \cf2 // Corresponding weights for mid points of increments\cf1\par
             below = \cf5 bindex\cf1 (rr[;1] < size);\par
             Above = \cf5 bindex\cf1 (rr[;1] >= size);\par
             \cf3 if\cf1 (\cf5 len\cf1 (below) \cf3 !\cf1 = 0)\{\par
                 per_over[t;2] = (\cf5 sum\cf1 (rr[above;2]) + ((rr[\cf5 take\cf1 (-1,below);1] + 5. - size)/5.) * rr[\cf5 take\cf1 (-1,below);2])/\cf5 sum\cf1 (rr[;2]);  \cf2 // percentage of catch weight over size\cf1\par
             \}\cf3 else\cf1\{\par
\tab          per_over[t;2] = 1.0;                                                                  \cf2 // if nothing under specified size for this tow\cf1\par
\tab       \};\par
             per_over[t;4] = per_over[t;2]*per_over[t;3];    \cf2 // catch weight over specified size\cf1\par
\tab     \};\par
\tab\};\par
\tab\cf3 return\cf1 (per_over);\par
\};\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2 // Compare to 2004 50% selectivity of 87 mm\cf1\par
\pard Use_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 1)&&(t_SURVEY == "T12010-01"))]; \par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f1 Split_catch_weight(85.6,80983,use_tows);  \cf2 // 80% selectivity\cf1\f5\par
\lang1033\f0\par
\par
\par
\cf2\lang4105\f5 // --------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 // --- Biomass calculation for Banquereau -----------------------------------------------------------------------------------------\cf1\par
\cf2 // --------------------------------------------------------------------------------------------------------------------------------\cf1\par
\pard Good_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 1)&&(t_SURVEY == "T12010-01"))]; \cf2 // list of regular survey tows that were sussessful \cf1\par
Rocky_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 2)&&(t_SURVEY == "T12010-01"))]; \cf2 // list of regular survey tows that were too rocky to tow\cf1\par
Use_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&((Tow_Quality == 1)||(Tow_Quality == 2))&&(t_SURVEY == "T12010-01"))]; \par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf4 Back_Map\cf1 (4);\par
\cf4\f0 Map_objects\cf1 (1,1);\par
\lang1033\f5 Set_Banquereau_contours();\lang4105\par
survey_poly = \f0 Banquereau_90m_c\f5 ;\par
\pard Good_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 1)&&(t_SURVEY == "T12010-01"))]; \cf2 // list of regular survey tows that were sussessful \cf1\par
Rocky_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 2)&&(t_SURVEY == "T12010-01"))]; \cf2 // list of regular survey tows that were too rocky to tow\cf1\par
Use_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&((Tow_Quality == 1)||(Tow_Quality == 2))&&(t_SURVEY == "T12010-01"))]; \par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f1 Simple_biomass(0,\lang1033\f0 80983\lang4105\f1 ,\f0 Banquereau_90m_c\lang1033 ,\lang4105\f5 Use_tows,1,0\f1 );       \cf2 // Base case, no adjustment to survey catch\cf1\par
Simple_biomass(0,\lang1033\f0 80983\lang4105\f1 ,\f0 Banquereau_90m_c\lang1033 ,\lang4105\f5 Use_tows,1,1\f1 );       \cf2 // Applying selctivity adjustment to survey catch\cf1\par
Simple_biomass(0,\lang1033\f0 80983\lang4105\f1 ,\f0 Banquereau_90m_c\lang1033 ,\lang4105\f5 Use_tows,0.4504,0\f1 );  \cf2 // Applying efficiency correction but no selectivity adjustment\cf1\par
Simple_biomass(0,\lang1033\f0 80983\lang4105\f1 ,\f0 Banquereau_90m_c\lang1033 ,\lang4105\f5 Use_tows,0.4504,1\f1 );  \cf2 // Applying efficiency correction and selectivity adjustment\cf1\par
Simple_biomass(0,\lang1033\f0 80983\lang4105\f1 ,\f0 Banquereau_80m_c\lang1033 ,\lang4105\f5 Use_tows,1,0\f1 )\par
\f5 poly40_to_90m = \cf5 polygon_intersect\cf1 (Banquereau_90m_c,Banquereau_40m_c,1); \cf2 // Area between 40 and 80m contours\cf1\par
\pard\f1 Simple_biomass(0,\lang1033\f0 80983\lang4105\f1 ,\f5 poly40_to_90m\lang1033\f0 ,\lang4105\f5 Use_tows,1,0\f1 )\f5\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160 poly40_to_80m = \cf5 polygon_intersect\cf1 (Banquereau_80m_c,Banquereau_40m_c,1); \cf2 // Area between 40 and 80m contours\cf1\par
\pard\f1 Simple_biomass(0,\lang1033\f0 80983\lang4105\f1 ,\f5 poly40_to_80m\lang1033\f0 ,\lang4105\f5 Use_tows,1,0\f1 )\f5\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\par
\f1\par
\cf2\f5 // --------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 //--- Biomass calculation for non_fished areas\cf1\par
\cf2 // --------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 // 2010 survey from 2010 files\cf1\par
B\cf4 ack_Map\cf1 (4);\par
\cf4\f0 Map_objects\cf1 (1,1);\par
\cf4\lang1033\f5 Set_Banquereau_contours\cf1 ();\par
\lang4105 poly40_to_90m = \cf5 polygon_intersect\cf1 (Banquereau_90m_c,Banquereau_40m_c,1); \cf2 // Area between 40 and 80m contours\cf1\par
\cf4 Non_fishing_polygons_2010\cf1 (1);\par
\pard Good_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 1)&&(t_SURVEY == "T12010-01"))]; \cf2 // list of regular survey tows that were sussessful \cf1\par
Rocky_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 2)&&(t_SURVEY == "T12010-01"))]; \cf2 // list of regular survey tows that were too rocky to tow\cf1\par
Use_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&((Tow_Quality == 1)||(Tow_Quality == 2))&&(t_SURVEY == "T12010-01"))]; \cf2 // use survey tows only\cf1\par
\cf4\f1 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 poly40_to_90m\lang1033\f0 ,\lang4105\f5 Use_tows,1\f1 )\f5\par
\cf2 Use_tows = Tow_index[bindex(((Tow_type == 1)||(Tow_type == 4))&&((Tow_Quality == 1)||(Tow_Quality == 2))&&(t_SURVEY == "T12010-01"))]; // use survey and comparison tows\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf4\f1 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 SE_poly\lang1033\f0 ,\lang4105\f5 Use_tows,1\f1 )\par
\cf4 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 NE_poly\lang1033\f0 ,\lang4105\f5 Use_tows,1\f1 )\par
\cf4 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 Cen_poly\lang1033\f0 ,\lang4105\f5 Use_tows\f1 )\par
\cf4 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 WE_poly\lang1033\f0 ,\lang4105\f5 Use_tows,1\f1 )\par
\par
\cf2\f5 // 2010 survey from Combined survey files\cf1\par
\f0 in_path = \cf0\f5 "F:\\Dale\\Clam Work\\Combined Surveys\\Data\\Text Data\\\cf1\f0 ";   \cf2 // Laptop folder path\cf1\par
\cf4\f5 Read_Combined_survey_data\cf1 ("T12010-01");\par
B\cf4 ack_Map\cf1 (4);\par
\cf4\f0 Map_objects\cf1 (1,1);\par
\cf4\lang1033\f5 Set_Banquereau_contours\cf1 ();\par
\lang4105 poly40_to_80m = \cf5 polygon_intersect\cf1 (Banquereau_80m_c,Banquereau_40m_c,1); \cf2 // Area between 40 and 80m contours\cf1\par
\cf4 Non_fishing_polygons_2010\cf1 (1);\par
\pard Good_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 1)&&(t_SURVEY == "T12010-01"))]; \cf2 // list of regular survey tows that were sussessful \cf1\par
Rocky_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 2)&&(t_SURVEY == "T12010-01"))]; \cf2 // list of regular survey tows that were too rocky to tow\cf1\par
Use_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&((Tow_Quality == 1)||(Tow_Quality == 2))&&(t_SURVEY == "T12010-01"))]; \par
\cf4\f1 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 poly40_to_80m\lang1033\f0 ,\lang4105\f5 Use_tows,1\f1 )\f5\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf4\f1 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 SE_poly\lang1033\f0 ,\lang4105\f5 Use_tows\f1 ,1\par
\cf4 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 NE_poly\lang1033\f0 ,\lang4105\f5 Use_tows,1\f1 )\par
\cf4 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 Cen_poly\lang1033\f0 ,\lang4105\f5 Use_tows,1\f1 )\par
\cf4 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 WE_poly\lang1033\f0 ,\lang4105\f5 Use_tows,1\f1 )\par
\pard\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\f5 // 2004 survey from Combined survey files\cf1\par
\f0 in_path = \cf0\f5 "F:\\Dale\\Clam Work\\Combined Surveys\\Data\\Text Data\\\cf1\f0 ";   \cf2 // Laptop folder path\cf1\par
\cf4\f5 Read_Combined_survey_data\cf1 ("CK2004-01");\par
B\cf4 ack_Map\cf1 (4);\par
\cf4\f0 Map_objects\cf1 (1,1);\par
\cf4\lang1033\f5 Set_Banquereau_contours\cf1 ();\par
\lang4105 poly40_to_80m = \cf5 polygon_intersect\cf1 (Banquereau_80m_c,Banquereau_40m_c,1); \cf2 // Area between 40 and 80m contours\cf1\par
\cf4 Non_fishing_polygons_2010\cf1 (1);\par
\pard Good_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 1)&&(t_SURVEY == "CK2004-01"))]; \cf2 // list of regular survey tows that were sussessful \cf1\par
Rocky_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 2)&&(t_SURVEY == "CK2004-01"))]; \cf2 // list of regular survey tows that were too rocky to tow\cf1\par
Use_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&((Tow_Quality == 1)||(Tow_Quality == 2))&&(t_SURVEY == "CK2004-01"))]; \par
\cf4\f1 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 poly40_to_80m\lang1033\f0 ,\lang4105\f5 Use_tows,1\f1 )\f5\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf4\f1 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 SE_poly\lang1033\f0 ,\lang4105\f5 Use_tows,1\f1 )\par
\cf4 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 NE_poly\lang1033\f0 ,\lang4105\f5 Use_tows,1\f1 )\par
\cf4 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 Cen_poly\lang1033\f0 ,\lang4105\f5 Use_tows,1\f1 )\par
\cf4 Simple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f5 WE_poly\lang1033\f0 ,\lang4105\f5 Use_tows,1\f1 )\par
\pard\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\f5 // --------------------------------------------------------------------------------------------------------------------------------\cf1\par
\pard\cf2\f1 //   Extract contours and save them to file for comparison to 2004 data\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\f5 // --------------------------------------------------------------------------------------------------------------------------------\cf1\par
\pard\f1 S\cf4 imple_biomass\cf1 (0,\lang1033\f0 80983\lang4105\f1 ,\f0 Banquereau_90m_c\lang1033 ,\lang4105\f5 Use_tows\f1 )\par
\cf5\f2 Data_Contour_Levels\cf1 (0  ,\f1 .9\f2  ,\f1 100.\f2   ,0.\f1 7\f2 5 ,\f1 200.\f2   ,0.5 ,\f1 300.\f2   ,0.\f1 3\f2 5 ,\f1 400.\f2   ,0.2 ,\f1 500.\f2 0 ,0 );\par
\f5 M_2010_contours = \cf5 List_contour_polygons\cf1 (\f0 Datam[;2 3 5]\f1 ); \par
\cf5\f5 Matrix_write\cf1 ("F:\\Dale\\Garb\\garb",M_2010_contours)\par
\cf5 Convert_blanks_to_Tabs\cf1 ("F:\\Dale\\Garb\\garb","F:\\Dale\\Clam Work\\2010 Banquereau Survey\\Results\\M_2010_contours.txt");\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f1\par
\pard\f5\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2 // --------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 // ------ For Depletion Analysis, estimate catch weight above cut off shell length ------------------------------------------------\cf1\par
\cf2 // --------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 // ------ Select depletion tows and plot length frequencies by 5 tow batches ------------------------------------------------------\cf1\par
\cf2 // --------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\lang1033\f2 /\lang4105\f1 / \lang1033\f2 ----------------------------------------------------------------------------------------------------------\lang4105\f1 -------------------------------\cf1\lang1033\f2\par
\cf2\lang4105\f0 // plot length frequency  Note: weighted by total clam catch weight version for 3 per page for depletion length frequencies\cf1\par
\cf3\lang1033 function\cf1  \cf4 plot_length_frequencyB\cf1 (species_sel,sel_tows,standardize,plot)\{\par
\lang4105   Aggdata = \cf4\lang1033 Total_length_frequency\cf1 (species_sel,sel_tows,standardize)\lang4105\par
  \cf2 //Aggdata = aggregate(1.,1.,cat(2,lf_len,shape(len(lf_len),1.),\lang1033 lf\lang4105 _N_at_len));\cf1\par
\f5   \cf3 if\cf1 (plot == 1)\{\par
    \cf5 Data_Window\cf1 (0,204,0,300);\par
\cf2 //    Data_Viewport(mm(40),mm(192),mm(30),mm(90));\cf1\par
    \cf5 data_projection\cf1 ("NIL")\par
    \cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
    \cf5 Axis\cf1 (10.,50.,1.0,50.,1,0,1,0,0);\par
\f0     \cf5 Data_Histogram\cf1 (1.,0.,aggdata[;1 2 2]);\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (7.),\cf5 cat\cf1 ("Sampled n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (lf_\lang1033 datam[;3]\lang4105 )))));\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (12.),\cf5 cat\cf1 ("Estimated total n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (aggdata[;2])))));\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (17.),"Species = Arctic Surfclam");\par
\pard\f5    \cf5 data_line\cf1 (\cf5 shape\cf1 (2 2,\cf5 cat\cf1 (0,82.0, 0.0, 82.0, \cf5 getwind\cf1 (4))));\par
   \cf5 data_line\cf1 (\cf5 shape\cf1 (2 2,\cf5 cat\cf1 (0,73.0, 0.0, 73.0, \cf5 getwind\cf1 (4))));\par
   \cf5 data_line\cf1 (\cf5 shape\cf1 (2 2,\cf5 cat\cf1 (0,64.0, 0.0, 64.0, \cf5 getwind\cf1 (4))));\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f0   \};\par
  \cf3 return\cf1 (aggdata);\par
\};\par
\cf2\lang1033 //------------------------------------------------------------------------------------\cf1\par
\pard\lang4105\f5 Dep_tows = Tow_index[\cf5 bindex\cf1 ((t_SURVEY == "T12010-01")&&(t_tow >=701)&&(t_tow <=719))]; \cf2 // list of 2009 depleton tows\cf1\par
dep_tows = \cf5 cat\cf1 (0,216,dep_tows);  \cf2 // add in original tow as first\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (30),\cf5 mm\cf1 (140));\par
\lang1033\f0 plot_length_frequencyB(80983,dep_tows,1,1)\par
\cf2\lang4105\f1 // plot groups of tows\cf1\par
\cf5\f5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (170),\cf5 mm\cf1 (230));\par
\lang1033\f0 plot_length_frequencyB(80983,dep_tows[\cf5 seq\cf1 (1,6)],1,1)\lang4105\f1\par
\cf5\f5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (100),\cf5 mm\cf1 (160));\par
\cf4\lang1033\f0 plot_length_frequencyB\cf1 (80983,dep_tows[\cf5 seq\cf1 (7,13)],1,1)\lang4105\f1\par
\cf5\f5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (30),\cf5 mm\cf1 (90));\par
\cf4\lang1033\f0 plot_length_frequencyB\cf1 (80983,dep_tows[\cf5 seq\cf1 (14,20)],1,1);\par
\par
\par
\cf2\lang4105\f5 // --------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\f1 // -------------- Function to estimate catch weight above cut off size for depletion experiment tows only -------------------------\cf1\par
\cf2\f5 // --------------------------------------------------------------------------------------------------------------------------------\cf1\par
\pard F\cf3 unction\cf1  \cf4 Split_catch_weight\cf1 (Size,Sel_Species,Sel_tows)\{\par
\tab per_over = \cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (sel_tows),4),0.); \cf2 // empty matrix for results\cf1\par
\tab per_over[;1] = sel_tows;\par
\tab dt_idx = \cf5 scalar\cf1 (\cf5 bindex\cf1 (tow_index == sel_tows[1]));    \cf2 // position of depletion tows, first is original tow\cf1\par
\tab Dep_pos = pos[dt_idx;]\par
\tab S_index = \cf5 bindex\cf1 (((t_survey == t_survey[dt_idx;])&&(Tow_Type == 1)));  \cf2 // index of regular survey tows for this survey\cf1\par
\tab\cf5 Data_projection\cf1 ("Mercator");\par
\tab dep_dist = \cf5 Cat\cf1 (2,tow_index[s_index],\cf5 data_distance\cf1 (Dep_pos[1],dep_pos[2],pos[s_index;1],pos[s_index;2]));  \cf2 // distance of survey tows from depletion tows\cf1\par
\tab dep_dist = dep_dist[\cf5 ascending\cf1 (dep_dist[;2]);];   \cf2 // sort by distance from depletion site\cf1\par
       M_idx = \cf5 bindex\cf1 ((\cf5 Member\cf1 (dep_dist[\cf5 seq\cf1 (1,5);1],M_tow_index))&&(M_Species == Sel_species));   \cf2 // index of records for selected tows for selected species \cf1\par
       m_idx = m_idx[\cf5 bindex\cf1 ((Leng[M_idx]>0)&&(Leng[M_idx]\cf3 !\cf1 =\cf5 NAN\cf1 ())&&(totWgt[M_idx]>0)&&(totWgt[M_idx] \cf3 !\cf1 = \cf5 NAN\cf1 ()))];   \cf2 // only Morph records with length and totWgt\cf1\par
       reg_par = \cf5 linear_regression\cf1 (\cf5 log\cf1 (Leng[M_idx]),\cf5 Log\cf1 (totWgt[M_idx]))\par
       WgtAgg = \cf5 aggregate\cf1 (Leng[M_idx],5, "Average",totWgt[M_idx])\cf2 // Average weight per 5 mm increment \cf1\par
       \cf3 For\cf1 (t = 1; t<= \cf5 len\cf1 (sel_tows); t = t++)\{\par
           Aggdata = \cf4 Total_length_frequency_2\cf1 (Sel_species,sel_tows[t],0);  \cf2 // Length frequency expanded to catch per unstandardized tow\cf1\par
           per_over[t;3] = clam[1;2]; \cf2 // Cacth weight for tow\cf1\par
           \cf3 if\cf1 (\cf5 len\cf1 (aggdata)[1] > 0)\{\par
             Aggdata2 = \cf5 aggregate\cf1 (aggdata[;1],5,"sum",aggdata[;2]);      \cf2 // aggregate in 5 mm increments\cf1\par
             rr = \cf5 cat\cf1 (2,Aggdata2[;1],\cf5 exp\cf1 (reg_par[2] + reg_par[1] * \cf5 log\cf1 (Aggdata2[;1] + 2.5)));  \cf2 // Corresponding weights for mid points of increments\cf1\par
             below = \cf5 bindex\cf1 (rr[;1] < size);\par
             Above = \cf5 bindex\cf1 (rr[;1] >= size);\par
             \cf3 if\cf1 (\cf5 len\cf1 (below) \cf3 !\cf1 = 0)\{\par
                 per_over[t;2] = (\cf5 sum\cf1 (rr[above;2]) + ((rr[\cf5 take\cf1 (-1,below);1] + 5. - size)/5.) * rr[\cf5 take\cf1 (-1,below);2])/\cf5 sum\cf1 (rr[;2]);  \cf2 // percentage of catch weight over size\cf1\par
             \}\cf3 else\cf1\{\par
\tab          per_over[t;2] = 1.0;                                                                  \cf2 // if nothing under specified size for this tow\cf1\par
\tab       \};\par
             per_over[t;4] = per_over[t;2]*per_over[t;3];    \cf2 // catch weight over specified size\cf1\par
\tab     \};\par
\tab\};\par
\tab\cf3 return\cf1 (per_over);\par
\};\par
Dep_tows = Tow_index[\cf5 bindex\cf1 ((t_SURVEY == "T12010-01")&&(t_tow >=701)&&(t_tow <=719))]; \cf2 // list of 2009 depleton tows\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf4\f1 Split_catch_weight\cf1 (79,80983,Dep_tows);  \cf2 // 90% selectivity\cf1\f5\par
\f1 Split_catch_weight(74,80983,Dep_tows);  \cf2 // 80% selectivity\cf1\f5\par
\f1 Split_catch_weight(72,80983,Dep_tows);  \cf2 // 75% selectivity\cf1\f5\par
\f1 Split_catch_weight(70,80983,Dep_tows);  \cf2 // 70% selectivity\cf1\f5\par
\f1 Split_catch_weight(66,80983,Dep_tows);  \cf2 // 60% selectivity\cf1\f5\par
\f1 Split_catch_weight(62,80983,Dep_tows);  \cf2 // 50% selectivity\cf1\f5\par
\f1 Split_catch_weight(49,80983,Dep_tows);  \cf2 // 25% selectivity\cf1\f5\par
\f1 Split_catch_weight(0,80983,Dep_tows);  \cf2 // 0% selectivity\par
\cf1\f5\par
\pard RichBanq2010 = -14.2175879 0.1894616 3.6212438;   \cf2 // Selectivity curve parameters from 2010 selectivity study\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\par
\cf5 plot_points\cf1 (\cf5 log\cf1 (Leng[M_idx]),\cf5 Log\cf1 (totWgt[M_idx])) \cf2 // quick look at regression used in split_catch_weight to calculate weights\par
\cf1\par
\cf2 // Compare to 2004 50% selectivity of 87 mm\cf1\par
\pard Use_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 1)&&(t_SURVEY == "T12010-01"))]; \par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f1 Split_catch_weight(85.6,80983,use_tows);  \cf2 // 80% selectivity\cf1\f5\par
\par
\cf2 // Plot catch by tow\cf1\par
\cf5 Data_Window\cf1 (0,21,0,140);\par
\cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (30),\cf5 mm\cf1 (90));\par
\cf5 data_projection\cf1 ("NIL")\par
\cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
\cf5 Axis\cf1 (2.,20.,1.0,5.,1,0,1,0,0);\par
\pard\cf5 data_points\cf1 (\cf5 cat\cf1 (2, \cf5 seq\cf1 (1,20),per_over[\cf5 seq\cf1 (1,20);3]));\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5\f0 Draw_text\cf1 (\cf5 Ave\cf1 (\cf5 getview\cf1 (1),\cf5 getview\cf1 (2))-\cf5 mm\cf1 (10.),\cf5 getview\cf1 (3) - \cf5 mm\cf1 (7.),"Tow");\par
\pard\cf5\f5 character_rotation\cf1 (90);\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5\f0 Draw_text\cf1 (\cf5 getview\cf1 (1) - \cf5 mm\cf1 (15.),\cf5 Ave\cf1 (\cf5 getview\cf1 (3),\cf5 getview\cf1 (4))-\cf5 mm\cf1 (10.),"Catch (kg)");\par
\pard\cf5\f5 character_rotation\cf1 (0);\par
\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\par
\par
\cf2 //-------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 // Plot of Dredge efficiency estimates versus cut off size for catch weight, Efficiency estimates from patch model in C:\\NMFSdepl\cf1\par
\cf2 //-------------------------------------------------------------------------------------------------------------------------------\cf1\par
Eff_data = \cf5 shape\cf1 (8 3,0 .82033 0. 25 .88321 55. 50 .9899999 64. 60 .99 68. 70 .989999 71. 75 .989999 73. 80 .99 75. 90 .99 82.); \par
    \cf5 Data_Window\cf1 (-5.,100.,0,1.1);\par
    \cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (30),\cf5 mm\cf1 (140));\par
    \cf5 data_projection\cf1 ("NIL")\par
    \cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
    \cf5 Axis\cf1 (10.,.1,5.0,0.05,1,0,1,0,0);\par
    \cf5 Marker_Height\cf1 (\cf5 mm\cf1 (2.0));\par
    \cf5 Data_points\cf1 (eff_data);\par
    \cf5 Data_labels\cf1 (eff_data);\par
\f0     \cf5 Draw_text\cf1 (\cf5 xuser\cf1 (40.),\cf5 yuser\cf1 (-0.10),"% Selectivity cut-off");\par
\pard     \cf5\f5 Character_Rotation\cf1 (90);\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f0     \cf5 Draw_text\cf1 (\cf5 xuser\cf1 (-10.),\cf5 yuser\cf1 (0.4),"Dredge Efficiency");\par
\pard\f5     \cf5 Character_Rotation\cf1 (0);\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2 //-------------------------------------------------------------------------------------------------------------------------------\cf1\par
\par
\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\lang4105\f0 // plot length frequency for dredge efficiency tows Note: weighted by total clam catch weight\cf1\par
\cf3\lang1033 function\cf1  \cf4 plot_efficiency_length_frequency\cf1 (species_sel,sel_tows,standardize)\{\par
\tab  n_tows = \cf5 len\cf1 (sel_tows);\par
\lang4105     Aggdata = \cf4\lang1033 Total_length_frequency_2\cf1 (species_sel,sel_tows,standardize)\lang4105\par
\f5     \cf5 Data_Window\cf1 (0,\cf5 int\cf1 (\cf5 max\cf1 (aggdata[;1])*1.05),0,299.);\par
    \cf5 data_projection\cf1 ("NIL")\par
    \cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
    \cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (180),\cf5 mm\cf1 (250));\par
    \cf5 Axis\cf1 (25.,100.,1.0,25.,1,0,0,0,0);\par
    s_tows = \lang1033\f0 sel_tows[\cf5 seq\cf1 (1,\cf5 int\cf1 (n_tows/3))]\lang4105\f5\par
\f0     Aggdata_1 = \cf4\lang1033 Total_length_frequency_2\cf1 (species_sel,\lang4105\f5 s_tows\lang1033\f0 ,standardize)\lang4105\par
\lang1033     Eff_plot(aggdata_1)\lang4105\par
\f5     \cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (110),\cf5 mm\cf1 (180));\par
    \cf5 Axis\cf1 (25.,100.,1.0,25.,1,0,0,0,0);\par
    s_tows = \lang1033\f0 sel_tows[\cf5 seq\cf1 (\cf5 int\cf1 (n_tows/3)+1,2*\cf5 int\cf1 (n_tows/3))]\lang4105\f5\par
\f0     Aggdata_2 = \cf4\lang1033 Total_length_frequency_2\cf1 (species_sel,\lang4105\f5 s_tows\lang1033\f0 ,standardize)\lang4105\par
\lang1033     Eff_plot(aggdata_2)\lang4105\par
\f5     \cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (40),\cf5 mm\cf1 (110));\par
    \cf5 Axis\cf1 (25.,100.,5.0, 25.,1,0,1,0,0);\par
    s_tows = \lang1033\f0 sel_tows[\cf5 seq\cf1 (2*\cf5 int\cf1 (n_tows/3)+1,n_tows)]\lang4105\f5\par
\f0     Aggdata_3 = \cf4\lang1033 Total_length_frequency_2\cf1 (species_sel,\lang4105\f5 s_tows\lang1033\f0 ,standardize)\lang4105\par
\lang1033     Eff_plot(aggdata_3)\lang4105\par
    \cf3 return\cf1 (Aggdata);\par
\};\par
\cf2\lang1033 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf3 Function\cf1  \cf4 Eff_plot\cf1 (aggdata)\{  \cf2 // used in above function\cf1\par
\lang4105     \cf5 Data_Histogram\cf1 (1.,0.,aggdata[;1 2 2]);\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (7.),\cf5 cat\cf1 ("Sampled n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (lf_\lang1033 datam[;3]\lang4105 ))))); \cf2 // Lf_datam is produced by Total_Length_Frequency\cf1\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (12.),\cf5 cat\cf1 ("Estimated total n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (aggdata[;2])))));\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (17.),"Species = Arctic Surfclam");\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (22.),\cf5 cat\cf1 ("Tows ",\cf5 str\cf1 (\cf5 take\cf1 (1,s_tows))," to ",\cf5 str\cf1 (\cf5 take\cf1 (-1,s_tows))));\par
\pard\f5     \cf5 Line_Type\cf1 (1);\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f0     \cf5 Data_line\cf1 (\cf5\f5 shape\cf1 (2 2,\cf5 cat\cf1 (0,62.2, 0.0, 62.2, \cf5 getwind\cf1 (4)))\f0 );  \cf2 // 50% retention size\cf1\par
\pard\f5     \cf5 Line_Type\cf1 (2);\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f0     \cf5 Data_line\cf1 (\cf5\f5 shape\cf1 (2 2,\cf5 cat\cf1 (0,79.1, 0.0, 79.1, \cf5 getwind\cf1 (4)))\f0 );  \cf2 // 90% retention size\cf1\par
\pard  \f5    \cf5 Line_Type\cf1 (0);\par
\};\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033\f0 // ------------------------------------------------------------------------------------------------------------\cf1\par
plot_efficiency_length_frequency(80983,\cf5 seq\cf1 (701,719),1)\par
\par
lf = \cf4 Total_length_frequency\cf1 (sp_code,sel_tows,Standardize)\par
\lang4105\f5\par
\cf2 //-------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 // 2004 - 2010 comparison tows \cf1\par
\cf2 //-------------------------------------------------------------------------------------------------------------------------------\cf1\par
\lang1033\f0\fs20 stns2010rep = 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303; \par
\lang4105\f5\fs18 tows_2010rep = t_tow[\cf5 index\cf1 (Station,\lang1033\f0\fs20 stns2010rep\lang4105\f5\fs18 )]\par
\lang1033\f0 Catchrep = \cf4 Get_catch_2_orc\cf1 (80983,\lang4105\f5 tows_2010rep\lang1033\f0 ,1);   \cf2 // Standardized catch per tow for selected species and tows  \cf1\par
\pard\lang4105\f5 rep = \cf5 cat\cf1 (2,stns2010rep,tows_2010rep,catchrep[\cf5 index\cf1 (catchrep[;1],tows_2010rep);])\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\par
\cf2 //-------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 // Functions for age and growth analysis\cf1\par
\cf2 //-------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\lang4105\f0 // Total length frequency  Note: weighted by total clam catch weight but does not correct for missing data\cf1\par
\cf3\lang1033 function\cf1  \cf4 Total_length_frequency\cf1 (sp_code,sel_tows,Standardize)\{\par
  \cf3 if\cf1 (\cf5 len\cf1 (sel_tows) == 1)\{\par
\tab    Clam_catch = \cf4 Get_catch_2_orc\cf1 (sp_code,sel_tows,Standardize); \cf2 // Standardized or unstandardized catch for selected species\cf1\par
      t_indx = \cf5 bindex\cf1 (((\f5 fs_tow\f0 _index == sel_tows)&&(fs_species == sp_code)));               \cf2 // index of selected tows in lf_sample data file for this species\cf1\par
      lf_indx = \cf5 bindex\cf1 ((\f5 LF_tow\f0 _index==sel_tows)&&(lf_species == sp_code));               \cf2 // index of selected tow in len_freq data file for this species\cf1\par
 \}\cf3 else\cf1\{\par
      Clam_catch = \cf4 Get_catch_2_orc\cf1 (sp_code,sel_tows,1); \cf2 // Standardized catch for selected species\cf1\par
      t_indx = \cf5 bindex\cf1 ((\cf5 member\cf1 (sel_tows,\f5 fs_tow\f0 _index)&&(fs_species == sp_code)));               \cf2 // index of selected tows in lf_sample data file for selected species, selected tows\cf1\par
      lf_indx = \cf5 bindex\cf1 ((\cf5 member\cf1 (sel_tows,\f5 LF_tow\f0 _index)&&(lf_species == sp_code)));              \cf2 // index of selected tows in  len_freq data file for selected species, selected tows\cf1\par
 \}\par
\f5   tt = \cf5 cat\cf1 (2,fs_tow_index[t_indx],weight_measured[t_indx],\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (t_indx),2),\cf5 cat\cf1 (0,0.,1.)));  \cf2 // weights of measured clams per tow\cf1\par
\pard\cf2\lang4105 //  temp_t=index(\lang1033\f0 tt[;1]\lang4105\f5 ,\lang1033\f0 Clam_catch[;1]\lang4105\f5 );\cf1\par
  z2 = \cf5 index\cf1 (tt[;1],clam\lang1033\f0 _catch\lang4105\f5 [;1])\par
  z2 = z2[\cf5 bindex\cf1 (z2 \cf3 !\cf1 = 0)]\par
  a2 = \cf5 bindex\cf1 (\cf5 member\cf1 (tt[;1],clam\lang1033\f0 _catch\lang4105\f5 [;1]))\par
  \cf5 insert\cf1 (tt,z2,\cf5 shape\cf1 (\cf5 len\cf1 (z2),3),clam\lang1033\f0 _catch\lang4105\f5 [a2;2]);                           \cf2 // insert std catch for this species into sample data file tt\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160   z_indx = \cf5 bindex\cf1 (tt[;2]>0)\par
  tt[z_indx;4] = tt[z_indx;3]/tt[z_indx;2];                \cf2 // factor to go from measured sample to total clam catch\cf1\par
\f0   lf_datam = \cf5 cat\cf1 (2,lf_tow\lang1033 _index[lf_indx]\lang4105 ,lf_len\lang1033 [lf_indx]\lang4105 ,\lang1033 lf\lang4105 _N_at_len\lang1033 [lf_indx]\lang4105 ,\cf5 shape\cf1 (\cf5 len\cf1 (\lang1033 lf_indx\lang4105 ),1.));   \cf2 // Set up matrix for data aggregation\cf1\par
\lang1033   \lang4105 lf_\lang1033 datam[;4]= tt[\cf5 index\cf1 (tt[;1],\lang4105 lf_\lang1033 datam[;1]);4];                \cf2 // Datam = tow length n_at_len factor\cf1\par
\lang4105   Aggdata = \cf5\f5 aggregate\cf1 (lf_datam[;2],1,"sum",lf_datam[;3]*lf_datam[;4])\f0 ;\par
  \cf3 return\cf1 (aggdata);\par
\};\par
\cf2\lang1033 // ------------------------------------------------------------------------------------------------------------\cf1\par
\lang4105\f5 F\cf3 unction\cf1  \cf4 Total_age_freq\cf1 (aldata,species_cd,sel_tows,incr,plot)\{ \cf2 // Bump sample length frequency numbers up to total numbers at length per tow \cf1\par
  datam = \cf5 cat\cf1 (2,sel_tows,\cf5 shape\cf1 (\cf5 CAT\cf1 (0,\cf5 len\cf1 (sel_tows),3),0 0 1.))\f0 ;            \cf2 // Set up matrix for aggregated data with tow numbers\cf1\par
\lang1033   \cf2 // -----------------------\cf1\par
  \cf4 Total_length_frequency\cf1 (\lang4105\f5 species_cd,sel_tows,1\lang1033\f0 );                     \cf2 // Produces lf_datam as global = tow length #at_length Factor\cf1\par
  \cf5 print\cf1 (\cf5 cat\cf1 ("Numbers at length from len Freq data adjusted to total catch = ",\cf5 str\cf1 (\cf5 sum\cf1 (lf_datam[;3]*lf_datam[;4]))));\par
\lang4105\f1   t2 = \cf5 aggregate\cf1 (lf_datam[;1],"SUM",(lf_datam[;3]*lf_datam[;4]));          \cf2 // Total # clams per tow\cf1\par
  miss_tows = sel_tows[\cf5\lang1033\f0 bindex\cf1 (\cf5 member\cf1 (t2[;1],datam[;1])==0)];               \cf2 // no len freq records for these tows\cf1\par
  t2 = \cf5 cat\cf1 (1,t2,\cf5 cat\cf1 (2,miss_tows,\cf5 shape\cf1 (\cf5 len\cf1 (miss_tows),0)));                 \cf2 // Add records for missing tows\cf1\par
\lang4105\f5   \lang1033\f0 datam[;2]= t2[\cf5 index\cf1 (t2[;1],datam[;1]);2];                                \cf2 // Add total number per tow to datam column 2\cf1\par
\pard   \lang4105\f5 LF_idx = \cf5 bindex\cf1 ((\cf5 member\cf1 (sel_tows,lf_tow_index)&&(lf_species == species_cd)));  \cf2 // index of LF records that are from selected tows and species\cf1\lang1033\f0\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105\f5   tt = \cf5 aggregate\cf1 (lf_tow_Index[lf_idx],"sum",lf_n_at_len[lf_idx]);         \cf2 // Aggregate numbers measured per tow\cf1\par
\lang1033\f0   zero_tows = sel_tows[\cf5 bindex\cf1 (\cf5 index\cf1 (tt[;1],datam[;1])==0)];               \cf2 // List of tows with no length frequencies(catch)\cf1\par
  tt = \cf5 cat\cf1 (1,tt,\cf5 cat\cf1 (2,zero_tows,\cf5 shape\cf1 (\cf5 len\cf1 (zero_tows),0)));                \cf2 // Add to aggregated list with zero numbers measured\cf1\par
  datam[;3]= tt[\cf5 index\cf1 (tt[;1],datam[;1]);2];                               \cf2 // Add numbers measured per tow to datam matrix\cf1\par
  \cf2 // datam[bindex(datam[;3] > datam[;2]);2] = datam[bindex(datam[;3] > datam[;2]);3]; // Correct tows with est# < actual lenfreq    : no, standardized sometimes <1\cf1\par
  B_idx = \cf5 bindex\cf1 ((datam[;2]==0)&&(datam[;3]>0));                          \cf2 // Records with no measured weight, but did have clams in length frequency: Check data files and correct\cf1\par
  \cf3 if\cf1 (\cf5 len\cf1 (b_idx) > 0)\{\par
\tab   \cf5 Print\cf1 ("Records with no measured weight recorded, but did have clams in length frequency, - Check data files and correct \cf3 if\cf1  possible");\par
\pard      \cf5 Print\cf1 ("\lang4105\f5 TOW, WGT_Measured, # in Len_freq, FACTOR");\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0      \cf5 Print\cf1 (datam[B_idx;]);\par
  \};\par
\pard\lang4105\f5   Miss_LF_idx=datam[\cf5 bindex\cf1 (datam[;3] == 0.);1];                          \cf2 // Tows with no length frequency\cf1\par
  Bad_idx = Miss_LF_idx[\cf5 bindex\cf1 (\cf5 member\cf1 (Clam_catch[\cf5 bindex\cf1 (Clam_catch[;2] >0.);1],Miss_LF_idx))]; \cf2 // Tows with no length frequency but do have a catch weight\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0   \cf3 if\cf1 (\cf5 len\cf1 (\lang4105\f5 Bad_idx\lang1033\f0 ) > 0)\{\par
\tab   \cf5 Print\cf1 ("Records with no length frequency but have a catch weight recorded, - Check data files and correct \cf3 if\cf1  possible");\par
\pard      \cf5 Print\cf1 (\cf5 cat\cf1 ("\lang4105\f5 TOWS",\cf5 str\cf1 (bad_idx)));\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0   \};\par
  datam[;4]= datam[;2]/datam[;3];                                         \cf2 // factor to bump sample number up to total numbers\cf1\lang4105\par
\lang1033   \cf2 // -----------------------\cf1\par
\lang4105   datatemp = \cf5 cat\cf1 (2,lf_tow_index\f5 [lf_idx]\f0 ,lf_len\f5 [lf_idx]\f0 ,lf_n_at_len\f5 [lf_idx]\f0 ,\cf5 shape\cf1 (\cf5 len\cf1 (lf_len\f5 [lf_idx]\f0 ),1.));      \cf2 // Set up matrix of len freq data\cf1\par
  datatemp[;4] = datatemp[;3] * \lang1033 datam[\cf5 index\cf1 (datam[;1],datatemp[;1]);4];   \cf2 // Add calculated total numbers at length per tow  \cf1\lang4105\par
\f5   tot_lf = \cf5 aggregate\cf1 (datatemp[;2],\b incr\b0 ,"sum",datatemp[;4]);               \cf2 // Aggregate total numbers at length\cf1\par
  \cf5 Print\cf1 (\cf5 cat\cf1 ("Total # at length before adjusting \cf3 for\cf1  ageing data = ",\cf5 str\cf1 (\cf5 sum\cf1 (tot_lf[;2]))));\par
  make_key(aldata,\b incr\b0 );                                                     \cf2 // Construct age-length key\cf1\par
  \cf2 // Now have to account for problems in matching aged and length frequency data\cf1\par
\lang1033\f0   miss_lens = lengths[\cf5 bindex\cf1 (\cf5 member\cf1 (tot_lf[;1],lengths)==0.)];             \cf2 // Lengths in key but not in Len-Freq data \cf1\par
\lang4105\f5   \cf3 if\cf1 (\cf5 len\cf1 (miss_lens) > 0)\{\par
    tot_lf=\cf5 cat\cf1 (1,tot_lf,\cf5 cat\cf1 (2,miss_lens,\cf5 shape\cf1 (\cf5 len\cf1 (miss_lens),0)));      \cf2 // Add zeros for miss_lens to total n_at_length\cf1\par
\lang1033\f0     tot_lf = tot_lf[\cf5 ascending\cf1 (tot_lf[;1]);];                             \cf2 // sort frequencies by length\cf1\par
  \};\par
  extra_lens = tot_lf[\cf5 bindex\cf1 (\cf5 member\cf1 (lengths,tot_lf[;1])==0.);1];      \cf2 // Lengths in Len_freq data but not in key (largest not aged)\cf1\par
\lang4105\f5   \cf3 if\cf1 (\cf5 len\cf1 (extra_lens) > 0)\{\par
    larger = extra_lens[\cf5 bindex\cf1 (\lang1033\f0 extra_lens > \cf5 max\cf1 (lengths))]\lang4105\f5\par
    \cf3 if\cf1 (\cf5 len\cf1 (Larger) > 0) \{\par
       top5percent=\cf5 sum\cf1 (al_key[\cf5 bindex\cf1 (\cf5 cum_sum\cf1 (\cf5 sum\cf1 (al_key,2)/\cf5 sum\cf1 (al_key)) >= .95);],1);  \cf2 // sum of age at len for top 5% of size distibution\cf1\par
\lang1033\f0        al_key = \cf5 cat\cf1 (1,al_key,\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (\lang4105\f5 larger\lang1033\f0 ),n_ages),top5percent));  \cf2 // add to key for extra ages based on top 5%\cf1\par
    \};\par
 \lang4105\f5    Smaller = extra_lens[\cf5 bindex\cf1 (\lang1033\f0 extra_lens < \cf5 min\cf1 (lengths))];\par
\lang4105\f5     \cf3 if\cf1 (\cf5 len\cf1 (smaller) > 0) \{\par
      lowest5percent=\cf5 sum\cf1 (al_key[\cf5 bindex\cf1 (\cf5 cum_sum\cf1 (\cf5 sum\cf1 (al_key,2)/\cf5 sum\cf1 (al_key)) <= .05);],1);  \cf2 // sum of age at len for first 5% of size distibution\cf1\par
\lang1033\f0       al_key = \cf5 cat\cf1 (1,\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (\lang4105\f5 smaller\lang1033\f0 ),n_ages),\lang4105\f5 lowest5percent\lang1033\f0 ),al_key);  \cf2 // add to key for extra ages based on top 5%\cf1\par
    \};\par
 \};\par
\lang4105\f1   \lang1033\f0 NAL = tot_lf;\lang4105\f1\par
  Per_key = al_key/\cf5 transpose\cf1 (\cf5 shape\cf1 (\cf5 cat\cf1 (0,n_ages,\cf5\f5 len\cf1 (al_key)[1]\f1 ),\cf5 sum\cf1 (al_key,2)));  \cf2 // Redo Percent age-len key\cf1\par
\pard   Per_key[\cf5 bindex\cf1 (\cf5 sum\cf1 (al_key,2)==0);]=0;                                \cf2 // for 0/0 cases, fill with zeros instead of 1's\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0   t1 = \cf5 transpose\cf1 (\cf5 shape\cf1 (\cf5 cat\cf1 (0,n_ages, \cf5\lang4105\f5 len\cf1 (al_key)[1]\lang1033\f0 ),tot_lf[;2])) * per_key;  \cf2 // Put numbers through \lang4105\f1 Percent \lang1033\f0 Age-length key\cf1\par
  age_freq = \cf5 sum\cf1 (t1,1);\par
\lang4105\f1   NAA =  \cf5 cat\cf1 (2,ages,age_freq); \cf2 // ages and # at age\cf1\par
\f5   \cf3 if\cf1 (plot == 1)\{\par
\tab  ymax = \cf5 max\cf1 (\f1 NAA[;2]\f5 ) * 1.1;\par
\tab  xmax = \cf5 max\cf1 (ages)*1.1;\par
    \cf5 Data_Window\cf1 (0,xmax,0,ymax);\par
    \cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (170),\cf5 mm\cf1 (260));\par
    \cf5 data_projection\cf1 ("NIL")\par
    \cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
    \cf5 Axis\cf1 (10.,2000.,\b 5\b0 ,500.,1,0,1,0,0);\par
\f0     \cf5 Data_Histogram\cf1 (\b 1\b0 ,0.,\cf5 cat\cf1 (2,\f1 NAA[;1] + .5,NAA[;2])\f0 );\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (2)- \cf5 mm\cf1 (55.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (16.),\cf5 cat\cf1 ("Estimated number caught = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (\f1 NAA[;2]\f0 )))));\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1) + .5 * (\cf5 getview\cf1 (2)-\cf5 getview\cf1 (1))- \cf5 mm\cf1 (5.),\cf5 getview\cf1 (3) - \cf5 mm\cf1 (12.),"Age");\par
    \cf5 Character_rotation\cf1 (90);\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1) - \cf5 mm\cf1 (14.),\cf5 getview\cf1 (3) + .5 * (\cf5 getview\cf1 (4)-\cf5 getview\cf1 (3))- \cf5 mm\cf1 (5.),"Frequency");\par
    \cf5 Character_rotation\cf1 (0);\par
  \};\par
  \cf5 Print\cf1 (\cf5 cat\cf1 ("numbers at age = ",\cf5 str\cf1 (\cf5 sum\cf1 (naa[;2])),", Numbers at Length = ",\cf5 str\cf1 (\cf5 sum\cf1 (nal[;2])), ", \cf3 if\cf1  different try aggregating with larger increment"));\par
  \cf3 return\cf1 (\f1 NAA\f0 );\par
\};\par
\cf2\lang1033 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf3\lang4105\f5 Function\cf1  \cf4 Total_age_freq_2\cf1 (aldata,species_cd,sel_tows,incr,plot)\{ \par
  \cf2 // Bump sample length frequency numbers up to total numbers at length per tow \cf1\par
  datam = \cf5 cat\cf1 (2,sel_tows,\cf5 shape\cf1 (\cf5 CAT\cf1 (0,\cf5 len\cf1 (sel_tows),3),0 0 1.))\f0 ;            \cf2 // Set up matrix for aggregated data with tow numbers\cf1\par
\lang1033   \cf2 // -----------------------\cf1\par
  LF_matrix = Total_length_frequency_2(\lang4105\f5 species_cd,sel_tows,1\lang1033\f0 );                     \cf2 // Produces lf_datam as global = tow length #at_length Factor\cf1\par
\lang4105\f5   tot_lf = \cf5 aggregate\cf1 (LF_datam[;2],\b incr\b0 ,"sum",LF_datam[;4]);               \cf2 // Aggregate total numbers at length\cf1\par
  \cf5 Print\cf1 (\cf5 cat\cf1 ("Total # at length before adjusting \cf3 for\cf1  ageing data = ",\cf5 str\cf1 (\cf5 sum\cf1 (tot_lf[;2]))));\par
  make_key(aldata,\b incr\b0 );                                                     \cf2 // Construct age-length key\cf1\par
  \cf2 // Now have to account for problems in matching aged and length frequency data\cf1\par
\lang1033\f0   miss_lens = lengths[\cf5 bindex\cf1 (\cf5 member\cf1 (tot_lf[;1],lengths)==0.)];             \cf2 // Lengths in key but not in Len-Freq data \cf1\par
\lang4105\f5   \cf3 if\cf1 (\cf5 len\cf1 (miss_lens) > 0)\{\par
    tot_lf=\cf5 cat\cf1 (1,tot_lf,\cf5 cat\cf1 (2,miss_lens,\cf5 shape\cf1 (\cf5 len\cf1 (miss_lens),0)));      \cf2 // Add zeros for miss_lens to total n_at_length\cf1\par
\lang1033\f0     tot_lf = tot_lf[\cf5 ascending\cf1 (tot_lf[;1]);];                             \cf2 // sort frequencies by length\cf1\par
  \};\par
  extra_lens = tot_lf[\cf5 bindex\cf1 (\cf5 member\cf1 (lengths,tot_lf[;1])==0.);1];      \cf2 // Lengths in Len_freq data but not in key (largest not aged)\cf1\par
\lang4105\f5   \cf3 if\cf1 (\cf5 len\cf1 (extra_lens) > 0)\{\par
    larger = extra_lens[\cf5 bindex\cf1 (\lang1033\f0 extra_lens > \cf5 max\cf1 (lengths))]\lang4105\f5\par
    \cf3 if\cf1 (\cf5 len\cf1 (Larger) > 0) \{\par
       top5percent=\cf5 sum\cf1 (al_key[\cf5 bindex\cf1 (\cf5 cum_sum\cf1 (\cf5 sum\cf1 (al_key,2)/\cf5 sum\cf1 (al_key)) >= .95);],1);  \cf2 // sum of age at len for top 5% of size distibution\cf1\par
\lang1033\f0        al_key = \cf5 cat\cf1 (1,al_key,\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (\lang4105\f5 larger\lang1033\f0 ),n_ages),top5percent));  \cf2 // add to key for extra ages based on top 5%\cf1\par
    \};\par
 \lang4105\f5    Smaller = extra_lens[\cf5 bindex\cf1 (\lang1033\f0 extra_lens < \cf5 min\cf1 (lengths))];\par
\lang4105\f5     \cf3 if\cf1 (\cf5 len\cf1 (smaller) > 0) \{\par
      lowest5percent=\cf5 sum\cf1 (al_key[\cf5 bindex\cf1 (\cf5 cum_sum\cf1 (\cf5 sum\cf1 (al_key,2)/\cf5 sum\cf1 (al_key)) <= .05);],1);  \cf2 // sum of age at len for first 5% of size distibution\cf1\par
\lang1033\f0       al_key = \cf5 cat\cf1 (1,\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (\lang4105\f5 smaller\lang1033\f0 ),n_ages),\lang4105\f5 lowest5percent\lang1033\f0 ),al_key);  \cf2 // add to key for extra ages based on top 5%\cf1\par
    \};\par
 \};\par
\lang4105\f1   \lang1033\f0 NAL = tot_lf;\lang4105\f1\par
  Per_key = al_key/\cf5 transpose\cf1 (\cf5 shape\cf1 (\cf5 cat\cf1 (0,n_ages,\cf5\f5 len\cf1 (al_key)[1]\f1 ),\cf5 sum\cf1 (al_key,2)));  \cf2 // Redo Percent age-len key\cf1\par
\pard   Per_key[\cf5 bindex\cf1 (\cf5 sum\cf1 (al_key,2)==0);]=0;                                \cf2 // for 0/0 cases, fill with zeros instead of 1's\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0   t1 = \cf5 transpose\cf1 (\cf5 shape\cf1 (\cf5 cat\cf1 (0,n_ages, \cf5\lang4105\f5 len\cf1 (al_key)[1]\lang1033\f0 ),tot_lf[;2])) * per_key;  \cf2 // Put numbers through \lang4105\f1 Percent \lang1033\f0 Age-length key\cf1\par
  age_freq = \cf5 sum\cf1 (t1,1);\par
\lang4105\f1   NAA =  \cf5 cat\cf1 (2,ages,age_freq); \cf2 // ages and # at age\cf1\par
\f5   \cf3 if\cf1 (plot == 1)\{\par
\tab  ymax = \cf5 max\cf1 (\f1 NAA[;2]\f5 ) * 1.1;\par
\tab  xmax = \cf5 max\cf1 (ages)*1.1;\par
    \cf5 Data_Window\cf1 (0,xmax,0,ymax);\par
    \cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (170),\cf5 mm\cf1 (260));\par
    \cf5 data_projection\cf1 ("NIL")\par
    \cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
    \cf5 Axis\cf1 (10.,2000.,\b 5\b0 ,500.,1,0,1,0,0);\par
\f0     \cf5 Data_Histogram\cf1 (\b 1\b0 ,0.,\cf5 cat\cf1 (2,\f1 NAA[;1] + .5,NAA[;2])\f0 );\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (2)- \cf5 mm\cf1 (55.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (16.),\cf5 cat\cf1 ("Estimated number caught = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (\f1 NAA[;2]\f0 )))));\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1) + .5 * (\cf5 getview\cf1 (2)-\cf5 getview\cf1 (1))- \cf5 mm\cf1 (5.),\cf5 getview\cf1 (3) - \cf5 mm\cf1 (12.),"Age");\par
    \cf5 Character_rotation\cf1 (90);\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1) - \cf5 mm\cf1 (14.),\cf5 getview\cf1 (3) + .5 * (\cf5 getview\cf1 (4)-\cf5 getview\cf1 (3))- \cf5 mm\cf1 (5.),"Frequency");\par
    \cf5 Character_rotation\cf1 (0);\par
  \};\par
  \cf5 Print\cf1 (\cf5 cat\cf1 ("numbers at age = ",\cf5 str\cf1 (\cf5 sum\cf1 (naa[;2])),", Numbers at Length = ",\cf5 str\cf1 (\cf5 sum\cf1 (nal[;2])), ", \cf3 if\cf1  different try aggregating with larger increment"));\par
  \cf3 return\cf1 (\f1 NAA\f0 );\par
\};\par
\cf2\lang1033 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf3\lang4105\f1 function\cf1  \cf4 make_key\cf1 (aL_data,incr)\{      \cf2 // Construct Age-length key aggregating length frequencies into "incr" width groups\cf1\par
\f5   tt = \cf5 aggregate\cf1 (\f1 aL_data\f5 [;2],incr,\f1 aL_data\f5 [;1],"count",\f1 aL_data\f5 [;2]);   \cf2 // aggregate by "incr" lengths and #\cf1\par
\f1   minlen = \cf5 min\cf1 (tt[;1]); maxlen = \cf5 max\cf1 (tt[;1]);          \par
\f5   lengths = \cf5 seq\cf1 (minlen,maxlen,incr);\par
  n_lens = \cf5 len\cf1 (lengths);\par
\f1   minage = \cf5 min\cf1 (tt[;2]); maxage = \cf5 max\cf1 (tt[;2]);          \par
  ages = \cf5 seq\cf1 (minage,maxage);\par
  n_ages = \cf5 len\cf1 (ages);\lang1033\f2\par
\lang4105\f1   al_key = \cf5 shape\cf1 (\cf5 cat\cf1 (0,\f5 n_lens\f1 ,n_ages),0);            \cf2 // build blank key matrix\cf1\par
\f5   ttidxl = \cf5 index\cf1 (lengths,tt[;1]);                      \cf2 // index of aggregated lengths\cf1\par
  ttidxa = \cf5 index\cf1 (ages,tt[;2]);                      \cf2 // index of aggregated ages\cf1\par
\f1   \cf3 for\cf1 (i = 1; i <= \cf5 len\cf1 (tt)[1]; i = i++)\{\par
\tab  al_key[\f5 ttidxl\f1 [i];\f5 ttidxa[i]\f1 ] = al_key[\f5 ttidxl\f1 [i];\f5 ttidxa[i]\f1 ] + tt[i;3];\par
  \};\par
  \cf5 print_width\cf1 (300);\par
  key = \cf5 sprintf\cf1 ("%3d ",\cf5 int\cf1 (al_key));\par
  col_h = \cf5 sprintf\cf1 ("%3d-%003d  ",\cf5 int\cf1 (\cf5 cat\cf1 (2,\f5 lengths,lengths+incr)));\f1\par
  row_h1 = \cf5 sprintf\cf1 ("%7d  ",0);\par
  row_h2 = \cf5 sprintf\cf1 ("%3d ",\cf5 int\cf1 (ages));\par
\pard   head_out = \cf5 cat\cf1 (row_h1,row_h2);\par
  txt_out = \cf5 cat\cf1 (2, col_h,key)\par
  Key_out = (\cf5 cat\cf1 (1,head_out,txt_out));\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160   Per_key = al_key/\cf5 transpose\cf1 (\cf5 shape\cf1 (\cf5 cat\cf1 (0,n_ages,\f5 n_lens\f1 ),\cf5 sum\cf1 (al_key,2)));\par
\pard   Per_key[\cf5 bindex\cf1 (\cf5 sum\cf1 (al_key,2)==0);]=0;  \cf2 // for 0/0 cases, fill with zeros instead of 1's\cf1\par
\};\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\lang4105\f0 // plot length frequency  Note: weighted by total clam catch weight\cf1\par
\cf3\lang1033 function\cf1  \cf4 plot_length_frequency\cf1 (species_sel,sel_tows,standardize,plot)\{\par
\lang4105   Aggdata = \lang1033 Total_length_frequency_2(species_sel,sel_tows,standardize)\lang4105\par
  \cf2 //Aggdata = aggregate(1.,1.,cat(2,lf_len,shape(len(lf_len),1.),\lang1033 lf\lang4105 _N_at_len));\cf1\par
\f5   \cf3 if\cf1 (plot == 1)\{\par
    \cf5 Data_Window\cf1 (0,\cf5 int\cf1 (\cf5 max\cf1 (aggdata[;1])*1.05),0,\cf5 int\cf1 (\cf5 max\cf1 (aggdata[;2])*1.05));\par
    \cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (30),\cf5 mm\cf1 (140));\par
    \cf5 data_projection\cf1 ("NIL")\par
    \cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
    \cf5 Axis\cf1 (10.,500.,1.0,100.,1,0,1,0,0);\par
\f0     \cf5 Data_Histogram\cf1 (1.,0.,aggdata[;1 2 2]);\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (7.),\cf5 cat\cf1 ("Sampled n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (lf_\lang1033 datam[;3]\lang4105 ))))); \cf2 // Lf_datam is produced by Total_Length_Frequency\cf1\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (12.),\cf5 cat\cf1 ("Estimated total n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (aggdata[;2])))));\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (17.),"Species = Arctic Surfclam");\par
    \cf5 Draw_text\cf1 (\cf5 Ave\cf1 (\cf5 getview\cf1 (1),\cf5 getview\cf1 (2)) - \cf5 mm\cf1 (17.),\cf5 getview\cf1 (3)-\cf5 mm\cf1 (10),"Shell Length (mm)");\par
    \cf5 Character_rotation\cf1 (90);\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)-\cf5 mm\cf1 (10),\cf5 Ave\cf1 (\cf5 getview\cf1 (3),\cf5 getview\cf1 (4)) - \cf5 mm\cf1 (17.),"Frequency");\par
    \cf5 Character_rotation\cf1 (0);\par
  \};\par
  \cf3 return\cf1 (aggdata);\par
\};\par
\cf2\lang1033 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf3\lang4105\f1 Function\cf1  \cf4 vonbline\cf1 (vbparams,vbdata)\{\par
\tab\cf2 //plot vonbertalanffy line, vbparams = vector of L_infinity, k and t_zero, vbdata are the points the line was fit to\cf1\par
\tab minx = \cf5 min\cf1 (vbdata[;1]);\par
\tab maxx = \cf5 max\cf1 (vbdata[;1]);\par
\tab temp_x = \cf5 seq\cf1 (minx,maxx,(maxx-minx)/60.);\par
\tab temp_y = vbparams[1]*(1-\cf5 exp\cf1 (-1*vbparams[2]*(temp_x - vbparams[3])));\par
\tab\cf5 data_line\cf1 (\cf5 cat\cf1 (2,temp_x,temp_y));\par
\};\lang1033\f2\par
\cf2\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf3\lang4105\f0 Function\cf1  \cf4 Check_samples\cf1 (in_species,sel_tows)\{\par
\tab\cf2 // compare catch, length_Frequency, Freq_sample_data, and Morphometrics files \cf1\par
\tab o_mat = \cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (sel_tows),7),0.0);\par
\tab o_mat[;1] = sel_tows;\par
\tab catch_recs = \cf4\lang1033 Get_catch_2_orc\cf1 (in_species,sel_tows,0);          \cf2 // Unstandardized catch per tow\cf1\par
\pard\lang4105\f5    o_mat[\cf5 index\cf1 (o_mat[;1],Catch_recs[;1]);2] =  catch_recs[;2];   \cf2 // add catch\cf1\par
   bb = \cf5 bindex\cf1 ((\cf5 member\cf1 (sel_tows,lf_tow_index)&&(lf_species == in_species)));                   \cf2 // LF records for selected tows\cf1\par
   lf_mat = \cf5 aggregate\cf1 (lf_tow_index[bb],"sum",\lang1033\f0 lf\lang4105 _N_at_len[bb]);   \cf2 // number mesured clams for selected tows\cf1\f5\par
   o_mat[\cf5 index\cf1 (o_mat[;1],lf_mat[;1]);3] =  lf_mat[;2];           \cf2 // add number measured to O_mat\cf1\par
   bb = \cf5 bindex\cf1 ((\cf5 member\cf1 (sel_tows,fs_tow_index)&&(fs_species == in_species)));                   \cf2 // FS records for selected tows\cf1\par
\f0   \f5  o_mat[\cf5 index\cf1 (o_mat[;1],\lang1033\f0 FS_tow_index\lang4105\f5 [bb]);4] =  \f0 Weight_Measured\f5 [bb];           \cf2 // add number measured to O_mat\cf1\par
\f0   \f5  o_mat[\cf5 index\cf1 (o_mat[;1],\lang1033\f0 FS_tow_index\lang4105\f5 [bb]);5] =  \f0 num_measured\f5 [bb];           \cf2 // add Weight measured to O_mat\cf1\par
   bb = \cf5 bindex\cf1 ((\cf5 member\cf1 (sel_tows,M_tow_index)&&(m_species == \f0 in_species\f5 )));                   \cf2 // FS records for selected tows\cf1\par
   M_mat = \cf5 aggregate\cf1 (m_tow_index[bb],"count",\lang1033\f0 clam\lang4105 [bb],"sum",\lang1033 TotWgt[bb]\lang4105 );   \cf2 // number mesured clams for selected tows\cf1\f5\par
\f0   \f5  o_mat[\cf5 index\cf1 (o_mat[;1],M_mat[;1]);6] =  M_mat[;2];           \cf2 // add number processed to O_mat\cf1\par
\f0   \f5  o_mat[\cf5 index\cf1 (o_mat[;1],M_mat[;1]);7] =  M_mat[;3];           \cf2 // add number processed to O_mat\cf1\par
   h1 = "  Tow  Catch_wgt  LF   Wgt_FS Num_fs  Num_Morph Wgt_morph"\par
   \cf3 Return\cf1 (\cf5 cat\cf1 (1,h1,\cf5 sprintf\cf1 ("%5.0f %8.3f %5.0f % 8.2f %5.0f   %5.0f   %10.2f ",o_mat)));\par
   \f0 Wgt_idx = \cf5 bindex\cf1 (((o_mat[;3] == o_mat[;6])&&(\cf5 sum\cf1 (o_mat[;3 6],2)\cf3 !\cf1 = 0)&&(o_mat[;4] \cf3 !\cf1 = 0.)));\f5     \cf2 // Num in Len_freq and Morph File the same\cf1\par
   Wgt_Check = \cf5 cat\cf1 (2,o_mat[Wgt_idx;1],((o_mat[Wgt_idx;7]/1000.)/o_mat[Wgt_idx;4]));              \cf2 // FS_wgt over Morph_wgt for those with same # clams\cf1\par
\};\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\pard\cf3\lang4105\f0 function\cf1  \cf4 Trim_mean\cf1 (x,per_trim)\{\par
\tab x = x[\cf5 ascending\cf1 (x)];  \cf2 // sort x\cf1\par
\tab lenx = \cf5 Len\cf1 (x);        \cf2 // Number of records\cf1\par
\tab to_trim = \cf5 int\cf1 (per_trim*lenx*0.5); \cf2 // number off each end\cf1\par
\tab\cf3 return\cf1 (\cf5 ave\cf1 (x[\cf5 seq\cf1 (to_trim,lenx  - to_trim)])); \cf2 // trimmed mean\cf1\par
\};\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\pard\lang4105\f1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\f5 //index for surfclams in Banquereu 2010 Survey\cf1\par
\pard M_Sel_idx = (m_Survey == "T12010-01");  \cf2 // Surveys selected\cf1\par
\lang1033\f3 idx = \cf5\lang4105\f0 bindex\cf1 (\lang1033\f3 (\lang4105\f0 Age>0\lang1033\f3 )\lang4105\f0 &&\f1 (Age \cf3 !\cf1\f5 = \cf5 NAN\cf1 ()\f1 )\f0 &&\f1 (leng \cf3 !\cf1\f5 = \cf5 NAN\cf1 ()\f1 )&&(leng \cf3 !\cf1\f5 = 0.\f1 )&&(\f5 M_Sel_idx\f1 ==1)&&\f5 (M_Species == 80983)\f1 )\lang1033\f3 ;\par
\lang4105\f5 TowT_idx = ((Tow_type == 1)&&(tow_quality == 1)&&(T_Survey == "T12010-01"));  \cf2 // Regular survey tows\cf1\par
\f1 sel_tows = \f5 tow_index[\cf5 bindex\cf1 (TowT_idx)];\par
\par
\cf4\lang1033\f0 plot_length_frequency\cf1 (80983,sel_tows,1,1)\lang4105\f5\par
\par
\cf2 // Total bycatch sample weight\cf1\par
bcidx = \cf5 bindex\cf1 (c_Survey == "T12010-01");  \cf2 // Survey selected\cf1\par
\cf5 Print\cf1 ("Total weight of by-catch samples = ",\cf5 sprintf\cf1 ("%9.2f",\cf5 sum\cf1 (\f0 Kg_B_Sample[bcidx])));\f5\par
\f1\par
\cf2 // Plot age vs length data\cf1\lang1033\f2\par
\lang4105\f5 M_Sel_idx = (m_Survey == "T12010-01");  \cf2 // Surveys selected\cf1\par
\lang1033\f3 idx = \cf5\lang4105\f0 bindex\cf1 (\lang1033\f3 (\lang4105\f0 Age>0\lang1033\f3 )\lang4105\f0 &&\f1 (Age \cf3 !\cf1\f5 = \cf5 NAN\cf1 ()\f1 )\f0 &&\f1 (leng \cf3 !\cf1\f5 = \cf5 NAN\cf1 ()\f1 )&&(leng \cf3 !\cf1\f5 = 0.\f1 )&&(\f5 M_Sel_idx\f1 ==1)&&\f5 (M_Species == 80983)\f1 )\lang1033\f3 ;\par
\cf5\lang2057\f0 data_projection\cf1 ("NIL")\par
\cf5\lang1033\f2 Data_Viewport\cf1 (\cf5 mm\cf1 (\lang4105\f1 5\lang1033\f2 0),\cf5 mm\cf1 (180),\cf5 mm\cf1 (1\lang4105\f1 5\lang1033\f2 0),\cf5 mm\cf1 (2\lang4105\f1 7\lang1033\f2 0));\par
\lang4105\f1 xwind = \cf5 int\cf1 (\cf5 max\cf1 (age[idx]*1.1));\lang1033\f2\par
\lang4105\f1 ywind = 1.1*\cf5 max\cf1 (Leng[idx]);\lang1033\f2\par
\cf5 Data_Window\cf1 (0,\lang4105\f1 xwind\lang1033\f2 ,0,\lang4105\f1 160\lang1033\f2 );\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5\lang4105\f5 Line_Width\cf1 (\cf5 pts\cf1 (0.5));\par
\cf5 Marker_Height\cf1 (\cf5 mm\cf1 (1.5));\par
\pard\cf5\lang1033\f2 Axis\cf1 (\lang4105\f1 10\lang1033\f2 ,25,\lang4105\f1 2\lang1033\f2 ,5,1,0,1,0,0);\par
\cf5\f3 data_projection\cf1 ("NIL")\par
\cf5 Data_points\cf1 (\cf5 cat\cf1 (2,age[idx],leng[idx])) ;\par
\cf5 Draw_text\cf1 (\cf5 getview\cf1 (1) + \cf5 mm\cf1 (5),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (10),"\lang4105\f0 Banquereau 2010 \lang1033\f3 Ageing Data");\par
\cf5 Draw_text\cf1 (\cf5 getview\cf1 (1) + \cf5 mm\cf1 (5),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (1\lang4105\f0 5\lang1033\f3 ),\cf5\lang4105\f0 cat\cf1 (0,\lang1033\f3 "\lang4105\f0 n = \lang1033\f3 "\lang4105\f0 ,\cf5 str\cf1 (\cf5 int\cf1 (\cf5 len\cf1 (idx))))\lang1033\f3 );\par
\cf2\lang4105\f0 // If fit to data points available run the following\cf1\par
\cf2 //paramsGB = \f4\fs24 112.410367    0.062793   -0.594943;                                   // fit to Grand Banks Aged sample data\cf1\f0\fs18\par
\cf2 //paramsGBWgt = \lang1033 98.104754\lang4105\f4\fs24    \lang1033\f0\fs18 0.081807 \lang4105\f4\fs24    \lang1033\f0\fs18 -2.222728\lang4105\f4\fs24 ;                                   // fit to Grand Banks Wrighted by population numbers\cf1\f0\fs18\par
\cf2 //paramsBanq2004 = \f1 115.3896 0.07722207 \lang1033\f0 -2.22266\lang4105\f1 ;           \lang1033\f2 //\lang4105\f1 Banquereau, Splus params\cf1\lang1033\f3\par
\lang4105\f0 paramsBanq2010 = \f1 119.556 0.083 \lang1033\f0 .098\lang4105\f1 ;           \cf2\lang1033\f2 //\lang4105\f1 Banquereau, 2010 R params\cf1\lang1033\f3\par
\lang4105\f1 v\cf4 onbline\cf1\lang1033\f2 (\lang4105\f0 paramsBanq\f1 ,\cf5\lang1033\f3 cat\cf1 (2,age[idx],leng[idx]))\f2 ; \lang4105\f1\par
\cf5\lang1033\f3 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 45\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 3\lang1033\f3 ) \lang4105\f0 +\lang1033\f3  \cf5 mm\cf1 (1\lang4105\f0 5\lang1033\f3 ),\cf5\lang4105\f0 cat\cf1 (0,\lang1033\f3 "\lang4105\f0 L inf = \lang1033\f3 "\lang4105\f0 ,\cf5 str\cf1 (paramsBanq2010[1]))\lang1033\f3 );\par
\cf5 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 45\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 3\lang1033\f3 ) \lang4105\f0 +\lang1033\f3  \cf5 mm\cf1 (1\lang4105\f0 0\lang1033\f3 ),\cf5\lang4105\f0 cat\cf1 (0,\lang1033\f3 "\lang4105\f0 k = \lang1033\f3 "\lang4105\f0 ,\cf5 str\cf1 (paramsBanq2010[2]))\lang1033\f3 );\par
\cf5 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 45\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 3\lang1033\f3 ) \lang4105\f0 +\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 5\lang1033\f3 ),\cf5\lang4105\f0 cat\cf1 (0,\lang1033\f3 "\lang4105\f0 tzero= \lang1033\f3 "\lang4105\f0 ,\cf5 str\cf1 (paramsBanq2010[3]))\lang1033\f3 );\par
\cf5 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 45\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 3\lang1033\f3 ) \lang4105\f0 +\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 20\lang1033\f3 ),"\lang4105\f0 Fit to aged sample"\lang1033\f3 );\par
\lang4105\f0 params = \cf5\f1 cat\cf1 (0,\f0 111.726029\fs20 ,\fs18 0.083813\fs20 ,\fs18 -2.515103\lang1033\f2 )\lang4105\f1 ;           \cf2\lang1033\f2 //\lang4105\f1 Banquereau 2010 Weighted data, R params\cf1\lang1033\f3\par
\cf5\lang4105\f5 Line_Colour\cf1 ("RED");\cf5 Fill_colour\cf1 ("RED");\par
\cf5 Line_Type\cf1 (1);\par
\f1 vonbline\lang1033\f2 (\lang4105\f0 params\f1 ,\cf5\lang1033\f3 cat\cf1 (2,age[idx],leng[idx]))\f2 ; \lang4105\f1\par
\cf5\lang1033\f3 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 115\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 3\lang1033\f3 ) \lang4105\f0 +\lang1033\f3  \cf5 mm\cf1 (1\lang4105\f0 5\lang1033\f3 ),\cf5\lang4105\f0 cat\cf1 (0,\lang1033\f3 "\lang4105\f0 L inf = \lang1033\f3 "\lang4105\f0 ,\cf5 str\cf1 (params[1]))\lang1033\f3 );\par
\cf5 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 115\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 3\lang1033\f3 ) \lang4105\f0 +\lang1033\f3  \cf5 mm\cf1 (1\lang4105\f0 0\lang1033\f3 ),\cf5\lang4105\f0 cat\cf1 (0,\lang1033\f3 "\lang4105\f0 k = \lang1033\f3 "\lang4105\f0 ,\cf5 str\cf1 (params[2]))\lang1033\f3 );\par
\cf5 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 115\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 3\lang1033\f3 ) \lang4105\f0 +\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 5\lang1033\f3 ),\cf5\lang4105\f0 cat\cf1 (0,\lang1033\f3 "\lang4105\f0 tzero= \lang1033\f3 "\lang4105\f0 ,\cf5 str\cf1 (params[3]))\lang1033\f3 );\par
\cf5 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 115\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 3\lang1033\f3 ) \lang4105\f0 +\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 20\lang1033\f3 ),"\lang4105\f0 Weighted to population numbers"\lang1033\f3 );\par
\cf5\lang4105\f5 Line_Colour\cf1 ("GREEN");\cf5 Fill_colour\cf1 ("GREEN");\par
\cf5 Line_Type\cf1 (2);\par
\f1 vonbline\lang1033\f2 (\lang4105\f0 paramsBanq\f1 ,\cf5\lang1033\f3 cat\cf1 (2,age[idx],leng[idx]))\f2 ; \lang4105\f1\par
\cf5\f5 Line_Type\cf1 (0);\par
\cf5\lang1033\f3 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 45\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 4\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 25\lang1033\f3 ),"\lang4105\f0 Banquereau Growth Curve"\lang1033\f3 );\par
\cf5\lang4105\f5 Line_Colour\cf1 ("BLACK");\cf5 Fill_colour\cf1 ("BLACK");\par
\lang1033\f2\par
\cf2\lang4105\f1 // plot sample data histograms to match aging data\cf1\par
\f5 al = \cf5\lang1033\f3 cat\cf1 (2,age[idx],leng[idx])\lang4105\f5\par
\cf5\lang1033\f2 Data_Viewport\cf1 (\cf5 mm\cf1 (\lang4105\f1 5\lang1033\f2 0),\cf5 mm\cf1 (180),\cf5 mm\cf1 (\lang4105\f1 19\lang1033\f2 0),\cf5 mm\cf1 (\lang4105\f1 23\lang1033\f2 0));\par
\lang4105\f1 AgeMax = \cf5 int\cf1 (\cf5 max\cf1 (age*1.1));\lang1033\f2\par
\cf5 Data_Window\cf1 (0,\lang4105\f1 xwind\lang1033\f2 ,0,\lang4105\f1 160\lang1033\f2 .);\par
\cf5 Axis\cf1 (\lang4105\f1 2\lang1033\f2 5,\lang4105\f1 25\lang1033\f2 ,\lang4105\f1 5\lang1033\f2 ,\lang4105\f1 5\lang1033\f2 ,1,0,1,0,0);\par
aggdata_age = \cf5 aggregate\cf1\f7\fs24 (\f3\fs18 age[idx],\f7\fs24 "COUNT",\f3\fs18 age[idx]\f7\fs24 );\par
\cf5\i Data_Histogram\cf1 (.95,0.,0,aggdata_age);\par
\cf5\i0\f3\fs18 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 20\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 4\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 5\lang1033\f3 ),\cf5\lang4105\f0 cat\cf1 (\lang1033\f3 "\lang4105\f0 n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (aggdata_age[;2])))));\par
\cf5\lang1033\f3 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 25\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 4\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 10\lang1033\f3 ),\lang4105\f0 "Sample ages");\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033\f2 // have to rotate\cf1\par
\pard D\cf5 ata_Viewport\cf1 (\cf5 mm\cf1 (\lang4105\f1 4\lang1033\f2 0),\cf5 mm\cf1 (160),\cf5 mm\cf1 (\lang4105\f1 15\lang1033\f2 0),\cf5 mm\cf1 (\lang4105\f1 18\lang1033\f2 0));\par
\cf5 Data_Window\cf1 (0,\lang4105\f1 160\lang1033\f2 ,0,\lang4105\f1 150\lang1033\f2 .);\par
\cf5 Axis\cf1 (\lang4105\f1 25\lang1033\f2 ,\lang4105\f1 25\lang1033\f2 ,\lang4105\f1 5\lang1033\f2 ,\lang4105\f1 5\lang1033\f2 ,1,0,1,0,0);\par
aggdata_hgt = \cf5 aggregate\cf1\f7\fs24 (\f3\fs18 leng[idx],\lang4105\f0 5,\lang1033\f7\fs24 "COUNT",\f3\fs18 leng[idx]\f7\fs24 );\par
\f2\fs18 aggdata_hgt\lang4105\f1 [;1] = \lang1033\f2 aggdata_hgt\lang4105\f1 [;1] + 2.5; \cf2 // move to midpoint\cf1\par
\cf5\lang1033\i\f7\fs24 Data_Histogram\cf1 (\lang4105\f8 4\lang1033\f7 .95,0.,0,aggdata_hgt);\i0\par
\cf5\f3\fs18 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 20\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 4\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 5\lang1033\f3 ),\cf5\lang4105\f0 cat\cf1 (\lang1033\f3 "\lang4105\f0 n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (aggdata_hgt[;2])))));\par
\cf5\lang1033\f3 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 25\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 4\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 10\lang1033\f3 ),\lang4105\f0 "Sample Lengths");\par
\cf2\f1 // plot Population data histograms to match aging data\cf1\lang1033\f2\par
D\cf5 ata_Viewport\cf1 (\cf5 mm\cf1 (\lang4105\f1 5\lang1033\f2 0),\cf5 mm\cf1 (180),\cf5 mm\cf1 (\lang4105\f1 9\lang1033\f2 0),\cf5 mm\cf1 (\lang4105\f1 13\lang1033\f2 0));\par
\lang4105\f1 AgeMax = \cf5 int\cf1 (\cf5 max\cf1 (age*1.1));\lang1033\f2\par
\cf5 Data_Window\cf1 (0,\lang4105\f1 xwind\lang1033\f2 ,0,\lang4105\f1 10000\lang1033\f2 .);\par
\cf5 Axis\cf1 (\lang4105\f1 2\lang1033\f2 5,\lang4105\f1 5000\lang1033\f2 ,\lang4105\f1 5\lang1033\f2 ,\lang4105\f1 1000\lang1033\f2 ,1,0,1,0,0);\par
aggdata_age = \cf4\lang4105\f5 Total_age_freq_2\cf1 (al\f0 ,80983,\f1 sel_tows\f5 ,1,0)\lang1033\f7\fs24 ;\lang4105\f8   \f5\fs18\par
\cf5\lang1033\i\f7\fs24 Data_Histogram\cf1 (.95,0.,0,aggdata_age);\i0\par
\cf5\f3\fs18 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 20\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 4\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 5\lang1033\f3 ),\cf5\lang4105\f0 cat\cf1 (\lang1033\f3 "\lang4105\f0 n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (aggdata_age[;2])))));\par
\cf5\lang1033\f3 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 25\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 4\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 10\lang1033\f3 ),\lang4105\f0 "Popn ages");\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033\f2 // have to rotate\cf1\par
\pard D\cf5 ata_Viewport\cf1 (\cf5 mm\cf1 (\lang4105\f1 3\lang1033\f2 0),\cf5 mm\cf1 (1\lang4105\f1 5\lang1033\f2 0),\cf5 mm\cf1 (\lang4105\f1 5\lang1033\f2 0),\cf5 mm\cf1 (\lang4105\f1 8\lang1033\f2 0));\par
\cf5 Data_Window\cf1 (0,\lang4105\f1 160\lang1033\f2 ,0,\lang4105\f1 20000\lang1033\f2 .);\par
\cf5 Axis\cf1 (\lang4105\f1 2\lang1033\f2 5,\lang4105\f1 5000\lang1033\f2 ,\lang4105\f1 5\lang1033\f2 ,\lang4105\f1 1000\lang1033\f2 ,1,0,1,0,0);\par
aggdata_hgt = \cf4\f0 Total_length_frequency_2\cf1 (80983,\lang4105\f1 sel_tows\lang1033\f0 ,0)\f7\fs24 ;\lang4105\f8   \par
\lang1033\f2\fs18 aggdata_hgt2 = \cf5 aggregate\cf1 (aggdata_hgt[\lang4105\f1 ;\lang1033\f2 1],5,"\lang4105\f1 SUM\lang1033\f2 ",aggdata_hgt[\lang4105\f1 ;2\lang1033\f2 ]);\par
aggdata_hgt\lang4105\f1 2[;1] = \lang1033\f2 aggdata_hgt\lang4105\f1 2[;1] + 2.5; \cf2 // move to midpoint\cf1\par
\cf5\lang1033\i\f7\fs24 Data_Histogram\cf1 (\lang4105\f8 4\lang1033\f7 .95,0.,0,aggdata_hgt\lang4105\f8 2[;1 2]\lang1033\f7 );\i0\par
\cf5\f3\fs18 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 20\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 4\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 5\lang1033\f3 ),\cf5\lang4105\f0 cat\cf1 (\lang1033\f3 "\lang4105\f0 n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (aggdata_hgt2[;2])))));\par
\cf5\lang1033\f3 Draw_text\cf1 (\cf5 getview\cf1 (\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 25\lang1033\f3 ),\cf5 getview\cf1 (\lang4105\f0 4\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  \cf5 mm\cf1 (\lang4105\f0 10\lang1033\f3 ),\lang4105\f0 "Popn Lengths");\par
\lang1033\f2\par
\lang4105\f1\par
\cf2 //------------------------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 //  Map distribution of selected sizes, i.e. pre-recruits\cf1\par
\cf2 //------------------------------------------------------------------------------------------------------------------------------\cf1\par
F\cf3 unction\cf1  \cf4 Plot_distribution_map_of_slected_sizes\cf1 (\f5 Sel_Species,Sel_Tows,\f1 Start_size,end_size)\{\par
\pard\tx284\lang1033\f0\tab\lang4105\f1 t\f5 lf = TOTAL_LENGTH_FREQUENCY_2(Sel_Species,Sel_Tows,1);  \cf2 // get total length frequency, produces lf_datam\cf1\par
\tab omat = \cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (sel_tows),4),0.0);           \cf2 // empty matrix to fill\cf1\par
\tab omat[;1] = SEL_TOWS;\tab\par
\tab tlf = lf_datam[\cf5 bindex\cf1 ((lf_datam[;2] >= \f1 Start_size\f5 )&&(lf_datam[;2] <= \f1 end_size\f5 ));];    \cf2 // reduce to size range\cf1\par
\tab rec_data = \cf5 aggregate\cf1 (tlf[;1],"SUM",tlf[;4]); \cf2 // Aggregate numbers by tow\cf1\par
\pard\tab omat[\cf5 index\cf1 (omat[;1],rec_data[;1]);2] = rec_data[;2];  \cf2 // Add aggregated Numbers to omat\cf1\par
   temp_pos = pos[p_idx = \cf5 bindex\cf1 (\cf5 member\cf1 (sel_tows,tow_index));]; \cf2 // Get position data for tows\cf1\par
\tab omat[; 3 4]= temp_pos[\cf5 index\cf1 (omat[;1],tow_index[p_idx]);]; \par
\pard\tx284\cf2\lang1033\f0 //\tab back_map(\lang4105\f5 4\lang1033\f0 )\lang4105 ;\cf1\par
\cf2 //\tab Map_objects(1,1);\cf1\par
\tab\cf2 //Continuous_Scaling(1, 0, mm(1.), mm(5), 0.1, 2500., 1. 250. 750. 1500. 2500.);\cf1\par
\tab\cf2 //Continuous_Scaling(1, 0, mm(1.), mm(5), 0.1, 50., 1. 5. 12. 25. 50.);\cf1\par
\tab\cf5 Continuous_Scaling\cf1 (1, 0, \cf5 mm\cf1 (1.), \cf5 mm\cf1 (5), 0.1, 8000., 100. 1000. 2000. 4000. 8000.);\par
\tab\cf5 Continuous_Scaling\cf1 (1, 0, \cf5 mm\cf1 (1.), \cf5 mm\cf1 (5), 0.1, 600., 10. 30. 100. 300. 600.);\par
\f5\tab\cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
\f0\tab\cf5 Scaled_Symbols\cf1 (\f5 omat\f0 [;3 4 2]);\par
\tab\cf5 Symbol_Legend\cf1 (\cf5 mm\cf1 (175), \cf5 mm\cf1 (67));\par
\f1\tab\cf5\lang1033\f2 draw_text\cf1 (\cf5\lang4105\f0 getview\cf1 (1)+\cf5 mm\cf1 (105.),\cf5 getview\cf1 (3) + \cf5 mm\cf1 (20.)\lang1033\f2 ,\cf5\lang4105\f1 cat\cf1 ("Size ",\cf5 str\cf1 (Start_size)," to ",\cf5 str\cf1 (end_size)\lang1033\f2 )\lang4105\f1 )\lang1033\f2 ;\par
\lang4105\f1\tab\cf5\lang1033\f2 draw_text\cf1 (\cf5\lang4105\f0 getview\cf1 (1)+\cf5 mm\cf1 (105.),\cf5 getview\cf1 (3) + \cf5 mm\cf1 (15.)\lang1033\f2 ,\lang4105\f1 "Number per standard tow"\lang1033\f2 );\par
\pard\lang4105\f1\};\par
\cf2 //------------------------------------------------------------------------------------------------------------------------------\cf1\par
\f5 Use_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&((Tow_Quality == 1)||(Tow_Quality == 2))&&(t_SURVEY == "T12010-01"))]; \par
\f1 sel_species= \f5 80983;\lang1033\f2\par
\cf0\lang4105\f5 Fill_Colour("RED"); Line_Colour("RED");\cf1\par
\cf4\f1 Plot_distribution_map_of_slected_sizes\cf1 (\f5 sel_species,Use_tows,0\f1 .,50.)\par
\cf5\f5 Fill_Colour\cf1 ("Black"); \cf5 Line_Colour\cf1 ("BLACK");\par
\cf4 Set_Honey_hole\cf1 (1)\par
\par
\par
\cf2 // get age, Length, Sample_Numbers Popn_numbers matrix for fitting growth curve weighted by population numbers\cf1\par
\cf3 function\cf1  \cf4 Make_age_matrix\cf1 ()\{\par
\f0   \lang1033\f3 idx = \cf5\lang4105\f0 bindex\cf1 (\lang1033\f3 (\lang4105\f0 Age>0\lang1033\f3 )\lang4105\f0 &&\f1 (Age \cf3 !\cf1\f5 = \cf5 NAN\cf1 ()\f1 )\f0 &&\f1 (leng \cf3 !\cf1\f5 = \cf5 NAN\cf1 ()\f1 )&&(leng \cf3 !\cf1\f5 = 0.\f1 )&&\f5 (m_Survey == "T12010-01")\f1 &&\f5 (M_Species == 80983)\f1 )\lang1033\f3 ;\par
\lang4105\f5   TowT_idx = ((Tow_type == 1)&&(tow_quality == 1)&&(t_Survey == "T12010-01"));  \cf2 // Regular survey tows\cf1\par
\f1   sel_tows = \f5 tow_index[\cf5 bindex\cf1 (TowT_idx)];\par
  XX = Total_age_freq_2(\cf5\lang1033\f3 cat\cf1 (2,age[idx],leng[idx])\lang4105\f5 ,80983,sel_tows,5,0);\par
  Pop_age_matrix = \cf5 shape\cf1 (0 3,0.);\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160   \cf3 For\cf1 (A = 1; a <= \cf5 len\cf1 (ages); A = A++)\{\par
\tab\cf3 for\cf1 (L = 1; L <= \cf5 len\cf1 (Lengths); L = L++)\{\par
\tab\tab\cf3 if\cf1 (t1[L;A] \cf3 !\cf1 = 0.)\{Pop_age_matrix=\cf5 cat\cf1 (1,Pop_age_matrix,\cf5 cat\cf1 (0,Ages[A],Lengths[L] + 2.5,T1[L;A]));\};\par
\tab\};\par
  \};\par
  \cf3 return\cf1 (Pop_age_matrix);\par
\};\par
zzz = Make_age_matrix();\tab\tab\tab\par
\par
\lang1033\f2\par
\pard\cf2\lang4105\f1 // Plot age vs Weight data\cf1\lang1033\f2\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5\lang4105\f1 Line_Width\cf1 (\cf5 pts\cf1 (1));\par
\cf5 Line_Colour\cf1 ("BLACK");\par
\cf5 Fill_Colour\cf1 ("BLACK");\par
\cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
\pard\cf5\lang1033\f2 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (180),\cf5 mm\cf1 (100),\cf5 mm\cf1 (230));\par
\f3 idx = \lang4105\f0 (\lang1033\f3 (\lang4105\f0 Age>0\lang1033\f3 )\lang4105\f0 &&\f1 (Age \cf3 !\cf1\f5 = \cf5 NAN\cf1 ()\f1 )\f0 &&\f1 (\lang1033\f2 TotWgt\lang4105\f1  \cf3 !\cf1\f5 = \cf5 NAN\cf1 ()\f1 )&&(\lang1033\f2 TotWgt\lang4105\f1  \cf3 !\cf1\f5 = 0.\f1 )&&\f5 (M_Species == 80983)\f1 )\lang1033\f3 ;\par
Code\lang4105\f0 _\lang1033\f3 idx = ((\lang4105\f0 sh\lang1033\f3 Code == 1) \lang4105\f0 &\lang1033\f3 & (\lang4105\f0 ft\lang1033\f3 Code == 1) &\lang4105\f0 &\lang1033\f3  (\lang4105\f0 bd\lang1033\f3 Code == 1) &\lang4105\f0 &\lang1033\f3  \lang4105\f0 ((\lang1033 SndWet\lang4105  == \cf5 NAN\cf1 ()\lang1033\f3 )\lang4105\f0 ||(SndWet == 0))\lang1033\f3 )\lang4105\f0 ;\par
idx = \cf5 bindex\cf1 ((idx == 1)&&(code_idx == 1)&&\f5 (m_Survey == "T12010-01")\f0 );\lang1033\f3  \par
\lang4105\f1 xwind = \cf5 int\cf1 (\cf5 max\cf1 (age[idx]*1.1));\lang1033\f2\par
\lang4105\f1 ywind = \cf5 int\cf1 (\cf5 max\cf1 (\lang1033\f2 TotWgt\lang4105\f1 [idx]*1.1));\lang1033\f2\par
\cf5 Data_Window\cf1 (0,\lang4105\f1 xwind\lang1033\f2 ,0,\lang4105\f1 ywind\lang1033\f2 );\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5\lang4105\f5 Line_Width\cf1 (\cf5 pts\cf1 (0.5));\par
\cf5 Marker_Height\cf1 (\cf5 mm\cf1 (1.5));\par
\pard\cf5\lang1033\f2 Axis\cf1 (\lang4105\f1 2\lang1033\f2 5,\lang4105\f1 50\lang1033\f2 ,\lang4105\f1 5\lang1033\f2 ,\lang4105\f1 10\lang1033\f2 ,1,0,1,0,0);\par
\cf5\f3 data_projection\cf1 ("NIL")\par
\cf5 Data_points\cf1 (\cf5 cat\cf1 (2,age[idx],\f2 TotWgt\f3 [idx])) ;\par
\cf5 Draw_text\cf1 (\cf5 getview\cf1 (1) + \cf5 mm\cf1 (5),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (10),"\lang4105\f0 Banquereau Surfclam \lang1033\f3 Ageing Data");\par
\cf5 Draw_text\cf1 (\cf5 getview\cf1 (1) + \cf5 mm\cf1 (5),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (1\lang4105\f0 5\lang1033\f3 ),\cf5\lang4105\f0 cat\cf1 (0,\lang1033\f3 "\lang4105\f0 n = \lang1033\f3 "\lang4105\f0 ,\cf5 str\cf1 (\cf5 int\cf1 (\cf5 len\cf1 (idx))))\lang1033\f3 );\par
\cf2\lang4105\f0 // If fit to data points available run the following\cf1\par
\cf2 /*\par
params = \f1 cat(0,\f5 237.609\lang1033\f2 ,\lang4105\f5 0.04352\lang1033\f2 ,\lang4105\f5 5.342\lang1033\f2 )\lang4105\f1 ;           \lang1033\f2 //\lang4105\f1  Banquereau 2010 parameters from R fit\par
vonbline\lang1033\f2 (\lang4105\f0 params\f1 ,\lang1033\f3 cat(2,age[idx],leng[idx]))\f2 ; \lang4105\f1\par
\lang1033\f3 Draw_text(getview(\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  mm(\lang4105\f0 30\lang1033\f3 ),getview(\lang4105\f0 3\lang1033\f3 ) \lang4105\f0 +\lang1033\f3  mm(1\lang4105\f0 5\lang1033\f3 ),\lang4105\f0 cat(0,\lang1033\f3 "\lang4105\f0 W inf = \lang1033\f3 "\lang4105\f0 ,str(params[1]))\lang1033\f3 );\par
Draw_text(getview(\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  mm(\lang4105\f0 30\lang1033\f3 ),getview(\lang4105\f0 3\lang1033\f3 ) \lang4105\f0 +\lang1033\f3  mm(1\lang4105\f0 0\lang1033\f3 ),\lang4105\f0 cat(0,\lang1033\f3 "\lang4105\f0 k = \lang1033\f3 "\lang4105\f0 ,str(params[2]))\lang1033\f3 );\par
Draw_text(getview(\lang4105\f0 2\lang1033\f3 ) \lang4105\f0 -\lang1033\f3  mm(\lang4105\f0 30\lang1033\f3 ),getview(\lang4105\f0 3\lang1033\f3 ) \lang4105\f0 +\lang1033\f3  mm(\lang4105\f0 5\lang1033\f3 ),\lang4105\f0 cat(0,\lang1033\f3 "\lang4105\f0 tzero= \lang1033\f3 "\lang4105\f0 ,str(params[3]))\lang1033\f3 );\par
\lang4105\f1 */\cf1\lang1033\f2\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105\f5\par
\par
\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\pard\cf3\lang4105\f1 Function\cf1  \cf4 AGE_histogram\cf1 (Age_Freq_Data)\{\par
\tab\cf2 // \lang1033\f2 Data_Viewport(mm(\lang4105\f1 5\lang1033\f2 0),mm(180),mm(\lang4105\f1 9\lang1033\f2 0),mm(\lang4105\f1 20\lang1033\f2 0));\cf1\par
\lang4105\f1\tab AgeMax = \cf5 int\cf1 (\cf5 max\cf1 (Age_Freq_Data\f5 [;1]\f1 *1.1));\lang1033\f2\par
\lang4105\f1\tab\cf2 //AgeMax = 80.0;\cf1\par
\tab FreqMax = \cf5 int\cf1 (\cf5 max\cf1 (Age_Freq_Data\f5 [;2]\f1 *1.1));\par
\tab\cf2 //FreqMax = 3500.\cf1\par
\tab\cf5\lang1033\f2 Data_Window\cf1 (0,\lang4105\f1 AgeMax\lang1033\f2 ,0,\lang4105\f1 FreqMax\lang1033\f2 );\par
\lang4105\f1\tab\cf5\lang1033\f2 Axis\cf1 (\lang4105\f1 20.\lang1033\f2 ,\lang4105\f1 2000\lang1033\f2 ,\lang4105\f1 5.\lang1033\f2 ,\lang4105\f1 500.\lang1033\f2 ,1,0,1,0,0);\par
\lang4105\i\f8\fs24\tab\cf5\lang1033\f7 Data_Histogram\cf1 (.95,0.,0,\lang4105\i0\f1\fs18 Age_Freq_Data)\lang1033\i\f7\fs24 ;\i0\par
\lang4105\f5\fs18\tab\cf5 Draw_text\cf1 (\cf5 getview\cf1 (2) - \cf5 mm\cf1 (25),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (5),\cf5 cat\cf1 ("n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (\f1 Age_Freq_Data\f5 [;2])))));\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\}\par
\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf3\f0 Function\cf1  \cf4 Add_regression\cf1 (start_age)\{\par
   xy = \cf5 cat\cf1 (2,ages,age_freq)\par
   r_parm = \cf5 linear_regression\cf1 (xy[\cf5 bindex\cf1 (ages > start_age);1],xy[\cf5 bindex\cf1 (ages > start_age);2])\par
   \cf5 data_line\cf1 (\cf5 shape\cf1 (2 2,\cf5 cat\cf1 (0,start_age, r_parm[2] + r_parm[1]*start_age, \cf5 max\cf1 (ages), r_parm[2] + r_parm[1]*\cf5 max\cf1 (ages))));\par
   \cf3 return\cf1 (r_parm);\par
\};\par
\cf2\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf3\f0 Function\cf1  \cf4 Add_log_regression\cf1 (\lang4105\f1 Age_Freq_Data\lang1033\f0 ,start_age,stop_age,plus_one)\{\par
\tab idx = \cf5 bindex\cf1 ((\lang4105\f1 Age_Freq_Data[;1]\lang1033\f0  >= start_age)&&(\lang4105\f1 Age_Freq_Data[;1]\lang1033\f0  <= stop_age));  \cf2 // Make index of ages to use\cf1\par
    xy = \cf5 cat\cf1 (2,\lang4105\f1 Age_Freq_Data[\f5 idx\f1 ;1 2 2]\lang1033\f0 );\par
    \cf3 if\cf1 (plus_one == 1)\{\par
\tab     xy[;3] = \cf5 log\cf1 (xy[;2] + 1);       \cf2 // add 1 to each for ln function\cf1\par
\tab  \} \cf3 Else\cf1  \{\par
       xy[;3] = \cf5 log\cf1 (xy[;2]);                  \cf2 // Natural log of frequency\cf1\par
     \};\par
    r_parm_2 = \cf5 linear_regression\cf1 (xy[;1],xy[;3]); \par
\lang4105\f5  \tab\cf2 // ymax = max(\lang1033\f0 xy[;3])\lang4105\f5  * 1.1;\cf1\par
    \cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
\pard     \cf5\lang1033\f2 Data_Window\cf1 (0,\lang4105\f1 Agemax\lang1033\f2 ,0,\cf5\lang4105\f1 log\cf1 (Freqmax)\lang1033\f2 );\lang4105\f5\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0     \cf5 Axis\cf1 (0.0,2.0,0.0,1.,0,1,0,0,0);\par
    \cf5 Marker_Height\cf1 (\cf5 mm\cf1 (2.));\par
\lang4105   \lang1033   \cf5 Marker_Type\cf1 (0);\par
\lang4105\tab  \cf5 Data_points\cf1 (\lang1033 xy[;1 3]);\lang4105\par
 \lang1033    \cf5 Marker_Type\cf1 (2);\par
 \tab  idx_B = \cf5 bindex\cf1 (((\lang4105\f1 Age_Freq_Data[;1]\lang1033\f0  < start_age)||(\lang4105\f1 Age_Freq_Data[;1]\lang1033\f0  > stop_age))&&(\lang4105\f1 Age_Freq_Data[;2]\cf3 !\cf1 =0.))\lang1033\f0 ;  \cf2 // Make index of ages not used\cf1\par
 \lang4105\tab  \cf5 Data_points\cf1 (\cf5 cat\cf1 (2,\f1 Age_Freq_Data\lang1033\f0 [idx_B;1],\cf5 log\cf1 (\lang4105\f1 Age_Freq_Data[idx_b;2]\lang1033\f0 )));\lang4105\par
\lang1033     \cf5 data_line\cf1 (\cf5 shape\cf1 (2 2,\cf5 cat\cf1 (0,start_age, r_parm_2[2] + r_parm_2[1]*start_age, stop_age, r_parm_2[2] + r_parm_2[1]*stop_age)));\par
\lang4105     \cf5 Draw_text\cf1 (\cf5 getview\cf1 (2)- \cf5 mm\cf1 (30.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (9.),\cf5 cat\cf1 ("Slope = ",\cf5 str\cf1 (\lang1033 r_parm_2[1]))\lang4105 );\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (2)- \cf5 mm\cf1 (30.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (14.),\cf5 cat\cf1 (\lang1033 " r_sq = ",\cf5\lang4105 str\cf1 (\lang1033 r_parm_2[4]\lang4105 )));\par
\lang1033  \lang4105    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1) + .5 * (\cf5 getview\cf1 (2)-\cf5 getview\cf1 (1))- \cf5 mm\cf1 (5.),\cf5 getview\cf1 (3) - \cf5 mm\cf1 (12.),"Age");\par
    \cf5 Character_rotation\cf1 (270);\par
    \cf5 Draw_text\cf1 (\cf5 getview\cf1 (2) + \cf5 mm\cf1 (12.),\cf5 getview\cf1 (3) + .5 * (\cf5 getview\cf1 (4)-\cf5 getview\cf1 (3))+ \cf5 mm\cf1 (12.),"Ln(Frequency)");\par
    \cf5 Character_rotation\cf1 (0);\par
\lang1033  \cf3 return\cf1 (\cf5 cat\cf1 (1,r_parm_2));\par
\};\par
\cf2\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\lang4105\f5 // Note matrix \f1 aggdata_age\f5  is set in functions above that calculate total age frequency\cf1\par
\lang1033\f2\par
\cf2\lang4105\f1 // 2010 frequencies\cf1\par
\pard\lang1033\f2 D\cf5 ata_Viewport\cf1 (\cf5 mm\cf1 (\lang4105\f1 5\lang1033\f2 0),\cf5 mm\cf1 (180),\cf5 mm\cf1 (\lang4105\f1 18\lang1033\f2 0),\cf5 mm\cf1 (\lang4105\f1 24\lang1033\f2 0));\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf4\lang4105\f1 AGE_histogram\cf1 (\lang1033\f2 aggdata_age\lang4105\f1 );\par
max_age = \cf5 scalar\cf1 (aggdata_age[-1+\cf5 take\cf1 (1,\cf5 bindex\cf1 (aggdata_age[;2]==0));1]);\par
max_age2 = \cf5 max\cf1 (aggdata_age[;1]);\par
\cf4\lang1033\f0 Add_log_regression\cf1 (\f2 aggdata_age\lang4105\f1 ,\lang1033\f0 25,\lang4105\f5 max_age\lang1033\f0 ,0)\par
\lang4105\f5 M2010 = \lang1033\f0 r_parm_2[1];\lang4105\f5\par
\lang1033\f0\par
\cf2\lang4105\f1 // 2010 frequencies using all number adding 1 to take log\cf1\par
\pard\lang1033\f2 D\cf5 ata_Viewport\cf1 (\cf5 mm\cf1 (\lang4105\f1 5\lang1033\f2 0),\cf5 mm\cf1 (180),\cf5 mm\cf1 (\lang4105\f1 18\lang1033\f2 0),\cf5 mm\cf1 (\lang4105\f1 24\lang1033\f2 0));\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf4\lang4105\f1 AGE_histogram\cf1 (\lang1033\f2 aggdata_age\lang4105\f1 );\par
max_age = \cf5 scalar\cf1 (aggdata_age[-1+\cf5 take\cf1 (1,\cf5 bindex\cf1 (aggdata_age[;2]==0));1]);\par
max_age2 = \cf5 max\cf1 (aggdata_age[;1]);\par
\cf4\lang1033\f0 Add_log_regression\cf1 (\f2 aggdata_age\lang4105\f1 ,\lang1033\f0 25,\lang4105\f5 max_age2\lang1033\f0 ,1)\par
\lang4105\f5 M2010 = \lang1033\f0 r_parm_2[1];\lang4105\f5\par
\lang1033\f0\par
\lang4105\f5\par
\pard\cf3\f1 Function\cf1  \cf4 Plot_estimated_recruitment\cf1 (Z,freq,Sur_Year)\{\par
   Rec_m = \cf5 reverse\cf1 (\cf5 cat\cf1 (2,freq,freq[;2]/\cf5\f0 exp\cf1 (\f1 Z\f0 *(\f1 freq[\f0 ;1] - \f1 start_age\f0 ))\f1 ,Sur_Year \f0 - freq[;1]),1);\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f1    Ave_rec = \cf5 ave\cf1 (Rec_m[;3]);\f5   \par
   \cf2 //X_wind = getWind(1 2);\cf1\par
\tab X_view = \cf5 getview\cf1 (1 2)\par
\tab max_y = \cf5 max\cf1 (\f1 Rec_m[;3]\f5 );\par
\pard\f1    \cf5 Line_Colour\cf1 ("BLACK"); \cf5\f5 Line_Type\cf1 (0);\f1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    \cf5 Line_Width\cf1 (\cf5 pts\cf1 (1));\par
   \cf5 Data_projection\cf1 ("NIL");\par
\pard\f5    \cf5 Line_colour\cf1 ("BLACK");\cf5 Fill_colour\cf1 ("BLACK");\f1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    \cf2 //Data_Viewport(\f5 X_view[1],X_view[2]\f1 ,mm(30),mm(80));      // Keep same x axis window and viewport as histogram plot\cf1\par
   \cf2 //Data_Window(\f5 X_wind[1]\f1 ,\f5 X_wind[2]\f1 ,0,1.05*max_y);\cf1\par
   \cf5 Data_Window\cf1 (\f5 rec_m[1;4]\f1 ,\f5 rec_m[\cf5 Len\cf1 (rec_m)[1];4] + 1\f1 ,0,1.05*max_y);\par
   \cf5 Axis\cf1 (10.,1000.0,1.0,250.,1,0,1,0,0);\par
\f5    \cf5 data_histogram\cf1 (1.0,0.5,rec_m[;4 3]\f1 )\par
\f5    \cf5 data_line\cf1 (\cf5\f0 shape\cf1 (2 2,\cf5 cat\cf1 (0,\cf5\f5 getWind\cf1 (\f0 1),\f1 Ave_rec\f0 ,\cf5\f5 getWind\cf1 (\f0 2),\f1 Ave_rec\f0 ))\f5 );\par
\lang1033\f0  \lang4105   \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1) + \cf5 mm\cf1 (5),(\cf5 getview\cf1 (4)- \cf5 mm\cf1 (10.)),\cf5 str\cf1 (\cf5 int\cf1 (sur_Year)));\par
\f5\};\par
\lang1033\f0\par
\cf2 // 2010 Banquereau\cf1\par
start_age = 25.\par
idx = \cf5 bindex\cf1 (\lang4105\f1 aggdata_age[;1]\lang1033\f0  >= start_age);  \cf2 // Make index of ages to use\cf1\par
idx = \cf5 bindex\cf1 ((\lang4105\f1 aggdata_age[;1]\lang1033\f0  >= start_age)&&(\lang4105\f1 aggdata_age\lang1033\f0 [;1] <= 77.));  \cf2 // Make index of ages to use cut off at age 77, low numbers at age\cf1\par
xy = \cf5 cat\cf1 (2,\lang4105\f1 aggdata_age[\f5 idx\f1 ;1 2]\lang1033\f0 );\par
\pard\cf5\f2 Data_Viewport\cf1 (\cf5 mm\cf1 (\lang4105\f1 5\lang1033\f2 0),\cf5 mm\cf1 (180),\cf5 mm\cf1 (\lang4105\f1 18\lang1033\f2 0),\cf5 mm\cf1 (\lang4105\f1 24\lang1033\f2 0));\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang4105\f1 //Plot_estimated_recruitment(M2010,xy[;1 2])\cf1\f5\par
\cf4\f1 Plot_estimated_recruitment\cf1 (-0.08,xy[;1 2],2010);\par
\cf5\f5 Print\cf1 (\cf5 cat\cf1 (0,"2010 estimated Ave Recruitment at age 25 = ",\cf5 str\cf1 (Ave_rec)));\par
\par
\cf2\lang1033 // Bump recruitment from survey tows up to entire survey area and adjust for efficency\cf1\par
Efficency = 0.4504\par
S\cf4 et_Banquereau_contours\cf1 ();\par
\pard\cf5\lang4105 data_projection\cf1 ("MERCATOR");\par
survey_area = \cf5 polygon_area\cf1 (Banquereau_90m_c)\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160 towed_area = \cf5 len\cf1 (sel_tows)*500. \cf2 // #tows x 500 msq standard area\cf1\par
total_recruitment = (survey_area*1000.*1000./towed_area*Ave_rec*1./\lang1033 Efficency\lang4105 ); \cf2 // estimated recruitemnt over entire survey area\cf1\par
\pard p\cf0 rint("Total recruitment = ",int(Total_recruitment))\cf1\par
\cf5 data_projection\cf1 ("NIL")\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\par
Recruit_density = ave_rec*1./\lang1033 Efficency\lang4105 /(\cf5 len\cf1 (sel_tows)*500.);\par
\cf5 print\cf1 ("Recruit density = ",Recruit_density," per m sq")\par
\cf5 print\cf1 (" Or 1 clam per ",1./Recruit_density," meters square")\par
\cf2 // ----------------------------------------------------------------------------------------------\cf1\par
\cf2 // Other mortality estimates\cf1\par
\cf2 // ----------------------------------------------------------------------------------------------\cf1\par
\cf2 //Chapman and Robson (1960) mortality estimator\cf1\par
F\cf3 unction\cf1  \cf4 C_R_Z_estimator\cf1 (truncate,start_age,trunc_age)\{\par
   \cf3 if\cf1 (truncate == 0) \{\par
\tab      idx = \cf5 bindex\cf1 (age_freq[;1] >= start_age);\par
\tab\} \cf3 else\cf1  \{\par
\tab\tab   idx = \cf5 bindex\cf1 ((age_freq[;1] >= start_age)&&(age_freq[;1] <= trunc_age));\par
   \};\par
   mean_age = \cf5 sum\cf1 (age_freq[idx;1]*age_freq[idx;2])/\cf5 sum\cf1 (age_freq[idx;2])-start_age+1;\par
   CR =\cf5 log\cf1 ((1 + mean_age - 1/\cf5 sum\cf1 (age_freq[idx;2]))/mean_age);\par
\cf5 Print\cf1 ("mean_age = ",\cf5 str\cf1 (mean_age));\par
\cf5 Print\cf1 ("  n= ",\cf5 str\cf1 (\cf5 sum\cf1 (age_freq[idx;2]));\par
   \cf3 return\cf1 (CR);\par
\};\par
\cf2 // ----------------------------------------------------------------------------------------------\cf1\par
\cf2 // 2010 numbers\cf1\par
\cf2 //age_freq = \lang1033\f0 cat(2,\lang4105\f1 mat[;1 2]\lang1033\f0 )\cf1\par
\lang4105\f5 age_freq = aggdata_age;\par
m2010cr = C_R_Z_estimator(0, 25, 100); \cf2 // without truncating age\cf1\par
m2010crt = C_R_Z_estimator(1, 25, 77); \cf2 // Cutoff at age 57 same as catch curve\cf1\par
\cf5 print\cf1 (\cf5 cat\cf1 ("2010 C-R estimate of Z = ",\cf5 str\cf1 (m2010crt\f1 )))\f5\par
\par
\pard\cf2\f8\fs24 // Estimate Z as 3/Tmax\cf1\par
r_idx = \cf5 bindex\cf1 (age_freq[;1]>9);  \cf2 // 50% selectivity 62mm ~9 years old\cf1\par
recruited = age_freq[r_idx;]\par
T_Max = age_freq[1+len(age_freq)[1]-take(1,bindex(cum_sum(recruited[seq(len(recruited)[1],1,-1);2])/sum(recruited[;2])>= 0.05));1]\par
Est_Tmax_mortality = 3.0/T_Max\par
\cf5 print\cf1 ("Total Mortality estimate (Z) using 3/Tmax = ",Est_Tmax_mortality)\par
\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\f5\fs18 // ----------------------------------------------------------------------------------------------\cf1\par
\cf2 // Beverton and Holt method using growth curve and length frequency\cf1\par
\cf2 // ----------------------------------------------------------------------------------------------\cf1\par
\pard\lang1033\f6\fs20 F\cf3 unction\cf1  \cf4 BH_mortality_estimate\cf1 (len_prime)\{\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105\f5\fs18      \cf2 //Len_prime = 75.0;  // lowest fully selected size\cf1\par
\pard      g_param =\f0  111.726029\fs20  \fs18 0.083813\fs20  \fs18 -2.515103\f1 ;           \cf2\lang1033\f2 //\lang4105\f1 Banquereau 2010 Weighted data, R params\cf1\lang1033\f3\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang4105\f5      Len_M = tot_lf[\cf5 bindex\cf1 (tot_lf[;1] >= Len_prime);]; \cf2 // all clams greater length than len_prime\cf1\par
     Len_M = \cf5 sum\cf1 (len_M[;1]*len_m[;2])/\cf5 sum\cf1 (len_m[;2]);\cf2 // average len of all len_m clams\cf1\par
     Z = (g_param[2]*(g_param[1] - len_m))/(len_m - len_prime);\par
     \cf3 return\cf1 (z);\par
\};\par
\cf2 // ----------------------------------------------------------------------------------------------\cf1\par
\cf3 function\cf1  \cf4 mortality_range\cf1 (sizes)\{\par
\tab n = \cf5 len\cf1 (sizes);\par
\tab out_mat = \cf5 shape\cf1 (0 2,0.0);\par
\tab\cf3 for\cf1 ( i = 1; i<=n; i = i ++)\{\par
\tab\tab out_mat = \cf5 cat\cf1 (1,out_mat,\cf5 cat\cf1 (0,sizes[i],\lang1033\f6\fs20 BH_mortality_estimate(sizes[i])));\par
\lang4105\f5\fs18\tab\};\par
   \cf3 return\cf1 (out_mat);\par
\};\par
\cf2 // ----------------------------------------------------------------------------------------------\cf1\par
\cf2 // Note: 2004 Size at 90% selectivity = 81 mm, 95% selectivity = 86 mm\cf1\par
\cf2 // ----------------------------------------------------------------------------------------------\cf1\par
\pard R\cf4 ichards_Curve\cf1 (\f4\fs24  -14.2175879   0.1894616   3.6212438\f5\fs18 ) \cf2 // 2010 survey dredge selectivity parameters\cf1\par
xv[\cf5 take\cf1 (1,\cf5 bindex\cf1 (yv >= 0.90))]; \cf2 // size at 90 % selectivity\cf1\par
xv[\cf5 take\cf1 (1,\cf5 bindex\cf1 (yv >= 0.95))]; \cf2 // size at 95 % selectivity\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\par
\lang1033\f0\par
\pard\lang4105\f5 TowT_idx = ((Tow_type == 1)&&(tow_quality == 1)&&(T_Survey == "T12010-01"));  \cf2 // Regular survey tows\cf1\par
\f1 sel_tows = \f5 tow_index[\cf5 bindex\cf1 (TowT_idx)];\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160 tot_lf = \cf4\lang1033\f0 Total_length_frequency\cf1 (\lang4105\f5 80983,sel_tows,1\lang1033\f0 );  \cf2 // get total length frequency\cf1\lang4105\f5\par
\cf4 mortality_range\cf1 (\cf5 seq\cf1 (80,150))\par
\par
\cf4 mortality_range\cf1 (\cf5 seq\cf1 (84,140))\par
\cf2 //  Fully recruited size too close to L infinity, Mean length fully recruited > Linf, produces negative estimates of Z\cf1\par
\par
\par
\cf2\lang1033\f0 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf2 // Thompson-Bell F0.1 analysis\cf1\par
\cf2 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf3 Function\cf1  \cf4 Len_at_age\cf1 (Linf,k,t0,Age)\{\par
\tab $LAA = Linf*(1-\cf5 exp\cf1 (-1*k*(age-t0)));\par
\tab\cf3 return\cf1 ($laa)\par
\};\par
\cf3 Function\cf1  \cf4 Mat_at_age_LOGISTIC\cf1 (a,b,age)\{\par
\tab $Mat = \cf5 exp\cf1 (a + b * Age)/(1+\cf5 exp\cf1 (a + b * Age)); \cf2 // logistic curve\cf1\par
\tab\cf3 return\cf1 ($Mat)\par
\};\par
\cf3\lang4105\f5 Function\cf1  \cf4\lang1033\f0 Mat_at_age_\lang4105\f5 Richards\cf1 (Ages,param) \{     \cf2 // Draw \f0 Richard's Maturity Curve\cf1\f5\par
  \lang1033\f0 $Mat\lang4105\f5  = \cf5 pow\cf1 ((\cf5 exp\cf1 (param[1]+param[2]*ages)/(1+\cf5 exp\cf1 (param[1] + param[2] * ages))),1./param[3]);\par
\lang1033\f0\tab\cf3 return\cf1 ($Mat)\par
\lang4105\f5\};\lang1033\f0\par
\cf3 Function\cf1  \cf4 Weight_at_Length\cf1 (a,b,in_len)\{\par
\tab $WAL = a*\cf5 pow\cf1 (in_len,b);\par
\tab\cf3 return\cf1 ($WAL)\par
\};\par
\cf3 Function\cf1  \cf4 Selectivity_at_Length\cf1 (a,b,d,in_len)\{\par
\tab $SAL = \cf5 pow\cf1 ((\cf5 exp\cf1 (a+b*in_len)/(1+\cf5 exp\cf1 (a+b*in_len))),1./d);\par
\tab\cf3 return\cf1 ($SAL)\par
\};\par
ages = \cf5 seq\cf1 (1,120);\par
Laa = \cf4 Len_at_age\cf1 (111.726029,\lang4105\f4\fs24  \lang1033\f0\fs18 0.083813,\lang4105\f4\fs24  \lang1033\f0\fs18 -2.515103,ages);   \cf2 // Banquereau 2010 weighted fit\cf1\par
Waa_1 = Weight_at_Length(\lang4105  0.00004027, 3.229 \lang1033 ,Laa); \cf2 // 2010 Using Length weight relationship\cf1\par
Waa_2 = Len_at_age(237.609, 0.044, 5.324,ages);    \cf2 // 2010 Using growth curve in weight \cf1\par
SAA = \cf4 Selectivity_at_Length\cf1 (\lang4105\f4\fs24 -14.2175879,   0.1894616,   3.6212438\lang1033\f0\fs18 , Laa);  \cf2 // Banquereau 2010 selectivity\cf1\par
saa[\cf5 bindex\cf1 (ages < 10)] = 0.;  \par
Maa = \cf5 shape\cf1 (\cf5 len\cf1 (ages),0.08); \cf2 // natural mortality at age\cf1\par
Mataa = Mat_at_age_\lang4105\f5 Richards(\lang1033\f0 Ages,(4.9494  0.2473  0.002769));  \cf2 // Maturity at age GB2009 \cf1\par
\pard\lang4105\f5 Heading = "Age    Length   Weight_1   Weight_2   Selectivity    M   Maturity";\par
Data_mat = \cf5 sprintf\cf1 ("%3.0f   %7.3f   %7.3f     %7.3f     %5.4f     %5.3f    %5.3f",\cf5 cat\cf1 (2,ages,laa,waa_1,waa_2,saa,maa,Mataa));\par
\cf5 print\cf1 (\cf5 cat\cf1 (1,Heading,data_mat));\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0 Frange = \cf5 cat\cf1 (0, 0.0, .0001, .0002, \cf5 seq\cf1 (.001,1.,.01));\par
yield = biomass = \cf5 shape\cf1 (\cf5 len\cf1 (frange),0.0);\par
f01max = y01max = 0.0 0.0;\par
\cf5 Thompson_Bell\cf1 (saa,waa_1,Maa,1,frange,yield,biomass,f01max,y01max);\par
\pard\cf5\lang4105\f1 Line_Colour\cf1 ("BLACK"); \cf5\f5 Line_Type\cf1 (0);\f1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5 Line_Width\cf1 (\cf5 pts\cf1 (1));\par
\cf5 data_projection\cf1 ("NIL")\par
\cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (20),\cf5 mm\cf1 (200),\cf5 mm\cf1 (20),\cf5 mm\cf1 (150));\par
\cf5 Data_Window\cf1 (0.0,1.0,0.0,25.);\par
\cf5 Axis\cf1 (0.050000,1.0,0.05,0.25,1,0,1,0,0);\par
\cf5 data_line\cf1 (\cf5 cat\cf1 (2,frange,yield));\par
\cf5 data_line\cf1 (\cf5 shape\cf1 (2 2,\cf5 cat\cf1 (0,f01max[1],y01max[1],f01max[1],0.0)));\par
\cf5 data_line\cf1 (\cf5 shape\cf1 (2 2,\cf5 cat\cf1 (0,f01max[2],y01max[2],f01max[2],0.0)));\par
\cf5 draw_text\cf1 (\cf5 xuser\cf1 (f01max[2]),\cf5 yuser\cf1 (y01max[2]),(\cf5 cat\cf1 ("Fmax = ",\cf5 str\cf1 (f01max[2]),", Yield per recruit = ",\cf5 str\cf1 (y01max[2]))));\par
\cf5 draw_text\cf1 (\cf5 xuser\cf1 (f01max[1]),\cf5 yuser\cf1 (y01max[1]),(\cf5 cat\cf1 ("F0.1 = ",\cf5 str\cf1 (f01max[1]),", Yield per recruit = ",\cf5 str\cf1 (y01max[1]))));\par
\lang1033\f0\par
\cf2 //  Add another line to compare\cf1\par
\cf5 Thompson_Bell\cf1 (saa,waa_2,Maa,1,frange,yield,biomass,f01max,y01max);\par
\cf5\lang4105\f1 Line_Colour\cf1 ("RED"); \cf5 Fill_Colour\cf1 ("RED"); \f5\par
\cf5\f1 data_line\cf1 (\cf5 cat\cf1 (2,frange,yield));\par
\cf5 data_line\cf1 (\cf5 shape\cf1 (2 2,\cf5 cat\cf1 (0,f01max[1],y01max[1],f01max[1],0.0)));\par
\cf5 data_line\cf1 (\cf5 shape\cf1 (2 2,\cf5 cat\cf1 (0,f01max[2],y01max[2],f01max[2],0.0)));\par
\cf5 draw_text\cf1 (\cf5 xuser\cf1 (f01max[2]),\cf5 yuser\cf1 (y01max[2]),(\cf5 cat\cf1 ("Fmax = ",\cf5 str\cf1 (f01max[2]),", Yield per recruit = ",\cf5 str\cf1 (y01max[2]))));\par
\cf5 draw_text\cf1 (\cf5 xuser\cf1 (f01max[1]),\cf5 yuser\cf1 (y01max[1]),(\cf5 cat\cf1 ("F0.1 = ",\cf5 str\cf1 (f01max[1]),", Yield per recruit = ",\cf5 str\cf1 (y01max[1]))));\par
\cf2\f5 // Outout matrix for Stratus's Yield per recruit program Spawning weight at age unknown at this time\cf1\par
\cf5\f1 Line_Colour\cf1 ("BLACK"); \cf5 Fill_Colour\cf1 ("BLACK"); \f5\par
\cf5 cat\cf1 (2,ages,saa,waa,waa*saa,mataa)\f1\par
\f5\par
agedata = \cf4 total_age_freq\cf1 (al,1,0);\par
agedata[;1] = agedata[;1] + 2.5; \cf2 // center of age interval\cf1\par
agedata[;2] = agedata[;2]/294.*\f1 10752106.0  \cf2 //Num tot/#tows * possible tows in survey area \cf1\par
\lang1033\f0 yield = \cf5 sum\cf1 (f01max[1]*Selectivity_at_Length(-12.8376,0.1498,3.598,\lang4105\f5 agedata[;1]\lang1033\f0 )*\lang4105\f5 agedata[;2]*\lang1033\f0 Len_at_age(172.179,0.0257629,9.72857,\lang4105\f5 agedata[;1]\lang1033\f0 ));\par
\par
\cf2 // ------------------------------------------------------------------------------------------------------------\cf1\par
\cf2\lang4105\f5 //Use output from S. Gavaris's Yield per Recruit 3.0\cf1\par
\pard\f6\fs20 F = 0  0.1  0.100737  0.2  0.3  0.36818  0.4  0.5  0.6  0.7  0.8  0.9  1;\par
Catch =  0  0.174757  0.175399  0.235161  0.268575  0.284526  0.290788  0.307073  0.319756  0.330044  0.338638  0.345977  0.352353;\f4\fs24\par
\f6\fs20 Yield = 0  22.99217  23.03946  26.09169  26.64876  26.64545  26.60001  26.37303  26.09513  25.81049  25.53537  25.27553  25.03242;\f4\fs24\par
\f6\fs20 SSB = 744.1086  348.9022  347.7045  246.064  198.1991  177.6362  169.9606  151.0259  137.2813  126.7547  118.3763  111.5126  105.7622;\f4\fs24\par
\cf5\f1\fs18 Line_Colour\cf1 ("BLACK"); \cf5\f5 Line_Type\cf1 (0);\f1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5 Line_Width\cf1 (\cf5 pts\cf1 (1));\par
\cf5 data_projection\cf1 ("NIL")\par
\cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (20),\cf5 mm\cf1 (200),\cf5 mm\cf1 (20),\cf5 mm\cf1 (150));\par
\cf5 Data_Window\cf1 (0.0,1.0,0.0,45.);\par
\cf5 Axis\cf1 (0.050000,1.0,0.05,0.25,1,0,1,0,0);\par
F01max = F[3 6];  y01max=Yield[3 6];\par
\cf5 data_line\cf1 (\cf5 cat\cf1 (2,F,yield));\par
\cf5 data_line\cf1 (\cf5 shape\cf1 (2 2,\cf5 cat\cf1 (0,f01max[1],y01max[1],f01max[1],0.0)));\par
\cf5 data_line\cf1 (\cf5 shape\cf1 (2 2,\cf5 cat\cf1 (0,f01max[2],y01max[2],f01max[2],0.0)));\par
\cf5 draw_text\cf1 (\cf5 xuser\cf1 (f01max[2]),\cf5 yuser\cf1 (y01max[2]),(\cf5 cat\cf1 ("Fmax = ",\cf5 str\cf1 (f01max[2]),", Yield per recruit = ",\cf5 str\cf1 (y01max[2]))));\par
\cf5 draw_text\cf1 (\cf5 xuser\cf1 (f01max[1]),\cf5 yuser\cf1 (y01max[1]),(\cf5 cat\cf1 ("F0.1 = ",\cf5 str\cf1 (f01max[1]),", Yield per recruit = ",\cf5 str\cf1 (y01max[1]))));\par
\cf5 Data_Window\cf1 (0.0,1.0,0.0,1.);\par
\cf5 Axis\cf1 (0.050000,0.25,0.05,0.05,0,1,1,0,0);\par
\pard\cf5 Line_Colour\cf1 ("BLACK"); \cf5\f5 Line_Type\cf1 (1);\f1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5 data_line\cf1 (\cf5 cat\cf1 (2,F,SSB/SSB[1]));\par
\f5\par
\par
\par
\cf2\f0 //Quick and dirty estimate of production\cf1\par
\cf2 // run simple biomass first to set parameters and stations\cf1\par
\cf2 // Note: this is for existing len frequencies and should turn out a negative net production\cf1\par
\f5 //index for surfclams in Grand BankSurveys\par
\cf2\lang1033\f0 //--------------------------------------------------------\cf1\par
\pard\lang4105\f5 M_Sel_idx = ((m_Survey == "CK2006-01")||(m_Survey == "T12008-01")||(m_Survey == "T12009-01"));  \cf2 // Surveys selected\cf1\par
\lang1033\f3 idx = \cf5\lang4105\f0 bindex\cf1 (\lang1033\f3 (\lang4105\f0 Age>0\lang1033\f3 )\lang4105\f0 &&\f1 (Age \cf3 !\cf1\f5 = \cf5 NAN\cf1 ()\f1 )\f0 &&\f1 (leng \cf3 !\cf1\f5 = \cf5 NAN\cf1 ()\f1 )&&(leng \cf3 !\cf1\f5 = 0.\f1 )&&(\f5 M_Sel_idx\f1 ==1)&&\f5 (M_Species == 80983)\f1 )\lang1033\f3 ;\par
\lang4105\f5 TowT_idx = ((Tow_type == 1)&&(tow_quality == 1)&&((T_Survey == "CK2006-01")||(T_Survey == "T12008-01")||(T_Survey == "T12009-01")));  \cf2 // Regular survey tows\cf1\par
\f1 sel_tows = \f5 tow_index[\cf5 bindex\cf1 (TowT_idx)];\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033\f0 //--------------------------------------------------------\cf1\par
VonB_param = 98.104754 \lang4105\f4\fs24  \lang1033\f0\fs18 0.081807 \lang4105\f4\fs24  \lang1033\f0\fs18 -2.222728;    \cf2 // vonBeralanffy growth curve parameters\cf1\par
\cf2 //--------------------------------------------------------\cf1\par
Len_wgt_param = \lang4105  0.0000589326 3.1589766770;  \cf2 // Length-weight conversion parameters, W=(a*L)^b\cf1\lang1033\par
\cf2 //--------------------------------------------------------\cf1\par
M = 0.08;                                     \cf2 // Natural Mortality\cf1\par
\cf2 //--------------------------------------------------------\cf1\par
Recruits = 1591;                             \cf2 // Estimated recruits from survey data\cf1\par
Age_plus = 25                                \cf2 // Recruitment age\cf1\par
\cf2 //--------------------------------------------------------\cf1\par
Survey_area =   47360.2;                    \cf2 // Survey area in km square\cf1\par
\pard\lang4105\f5 Stdtow = 500;                               \cf2 // \lang1033\f0 Area of a standard tow\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2 //--------------------------------------------------------\cf1\par
TLF = Total_length_frequency_2(80983,sel_tows,1)\par
\pard\lang4105\f5 Pmatrix = \cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (tlf)[1], 6),0);\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f0 Pmatrix[;1 2] = tlf;                                                                 \cf2 // Present length and Numbers at length\cf1\par
Pmatrix[;3] = (\lang1033 VonB_param[1]\lang4105  - pmatrix[;1])*(1 - \cf5 exp\cf1 (-1*\lang1033 VonB_param[2]\lang4105 *1.0));         \cf2 // One years growth, linear form of growth curve\cf1\par
Pmatrix[\cf5 bindex\cf1 (Pmatrix[;3] <= 0.0);3] = 0.000000001;                                 \cf2 // replace negative growth\cf1\par
Pmatrix[;4] = \lang1033 Len_wgt_param[1]\lang4105 *\cf5 pow\cf1 (pmatrix[;1],\lang1033 Len_wgt_param[2]\lang4105 );                    \cf2 // Present weight\cf1\par
Pmatrix[;5] = \lang1033 Len_wgt_param[1]\lang4105 *\cf5 pow\cf1 ((pmatrix[;1] + pmatrix[;3]),\lang1033 Len_wgt_param[2]\lang4105 );    \cf2 // Weight next year\cf1\par
Pmatrix[;4 5] = Pmatrix[;4 5]* 1/(1-0.196);                                          \cf2 // Accounts for 19.6% water loss in processed clams\cf1\par
\pard Pmatrix[;6] = (Pmatrix[;5] - Pmatrix[;4]) *(Pmatrix[;2] * \cf5\f5 exp\cf1 (-1*M))\f0 ;                \cf2 // Production per length bin in grams, includes M\cf1\par
\f5 LenPlus = \lang1033\f0 VonB_param[1]\lang4105\f5 *(1-\cf5 exp\cf1 (-1*\lang1033\f0 VonB_param[2]\lang4105\f5 *(\lang1033\f0 Age_plus\lang4105\f5 -\lang1033\f0 VonB_param[3]\lang4105\f5 )));          \cf2 // length at age = Age_Plus\cf1\par
survey_prod = \cf5 sum\cf1 (pmatrix[;6]);                                                      \cf2 // All size classes\cf1\par
survey_prod_Plus = \cf5 sum\cf1 (pmatrix[\cf5 bindex\cf1 (pmatrix[;1] >= LenPlus);6]);                   \cf2 // Restrict to >= Age_Plus size\cf1\par
Ave_prod = survey_prod/\cf5 len\cf1 (sel_tows);                                                \cf2 // Average production per tow\cf1\par
Ave_prod_Plus = survey_prod_Plus/\cf5 len\cf1 (sel_tows);                                      \cf2 // As above for ages Age_Plus+ sizes\cf1\par
factor = \lang1033\f0 Survey_area\lang4105\f5  * 1000000/Stdtow;                                               \cf2 // Number of tows possible in survey area \cf1\par
t\cf0 otal_prod = ave_prod * factor;\cf1\par
total_prod_Plus = ave_prod_Plus * factor;\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f0 Ave_rec = \lang1033 Recruits\lang4105 /\cf5\f5 len\cf1 (sel_tows)\f0 ;                                                    \cf2 // Ave recruitment per tow  \cf1\par
\cf2 //tot_recruitment = Ave_rec * len(sel_tows);                                         // Recruitment \cf1\par
tot_recruitment = Ave_rec * \f1 factor\f0 ;                                                  \cf2 // Recruitment \cf1\par
Recruit_length = \lang1033 VonB_param[1]\lang4105\f5 *(1-\cf5 exp\cf1 (-1*\lang1033\f0 VonB_param[2]\lang4105\f5 *(\lang1033\f0 Age_plus\lang4105\f5 -\lang1033\f0 VonB_param[3]\lang4105\f5 ))); \f0   \cf2 // Length at Recruitment_age\cf1\par
Rec_weight = tot_recruitment*\lang1033 Len_wgt_param[1]\lang4105 *\cf5 pow\cf1 (Recruit_length,\lang1033 Len_wgt_param[2]\lang4105 )/1000000.0;        \cf2 // total recruitment #'s * weight at recruitment length\cf1\par
p\cf5 rint\cf1 ("Estimate of total growth production = ",\cf5 str\cf1 (\cf5 int\cf1 (total_prod/1000000.))," t");\par
\cf5 print\cf1 ("Estimate of Age 25+ growth production = ",\cf5 str\cf1 (\cf5 int\cf1 (total_prod_Plus/1000000.))," t");\par
\cf5 print\cf1 ("Estimate of recruitment weight = ",\cf5 str\cf1 (\cf5 int\cf1 (Rec_weight))," t");\par
\cf5 print\cf1 ("Estimate of total production = ",\cf5 str\cf1 (\cf5 int\cf1 ((Rec_weight)+(total_prod/1000000.)))," t");\par
\cf2 //--------------------------\cf1\par
\pard\f5 D\cf0 eaths = pmatrix[;2]*(1.0-exp(-1.0*M));\cf1\par
Deaths_plus = Deaths[\cf5 bindex\cf1 (pmatrix[;1] >= LenPlus)];\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160 Mortality_Wgt = Deaths*(\lang1033\f0 Len_wgt_param[1]\lang4105 *\cf5 pow\cf1 (\f5 pmatrix[;1]\f0 ,\lang1033 Len_wgt_param[2]\lang4105 ));\f5\par
Mortality_Wgt = Mortality_Wgt/\cf5\f0 len\cf1 (sel_tows)*factor;\par
Mortality_wgt_plus = \cf5 sum\cf1 (\f5 Mortality_Wgt[\cf5 bindex\cf1 (pmatrix[;1] >= LenPlus)]);\par
Mortality_Wgt = \cf5 sum\cf1 (Mortality_Wgt);\f0\par
\cf5 print\cf1 ("Estimate of loss due to mortality = ",\cf5 sprintf\cf1 ("%12.2f",(\f5 Mortality_Wgt/1000000.\f0 ))," t");\par
\cf5 print\cf1 ("Net production = ",\cf5 str\cf1 (\cf5 int\cf1 ((total_prod-\f5 Mortality_Wgt)/1000000.)),"t");\f0\par
\f5\par
\par
\par
\par
\pard\f0 Good_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 1)&&(t_SURVEY == "T12010-01"))]; \cf2 // list of regular survey tows that were sussessful \cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2 // Whelk distribution\cf1\par
\cf2\lang1033 Fill_Bycatch_Table()\cf1\par
\lang4105 Buccinum_codes = 73726 73803 73817 73727 73777 73737 73795;\par
Colus_codes = 73892 73918 73920 73922 567390;\par
Neptunea_codes = 73975 567952 74010 73984;\par
\pard\f5 bn_idx = \cf5 bindex\cf1 ((\cf5 member\cf1 (buccinum_codes,\f1 OB_ITIS_CODE\f5 )\f0 )\f5 );  \cf2 // select Buccinum codes, exclude eggs\cf1\par
Org_bn = \f1 OB_ITIS_CODE[bn_idx];\f5\par
co_idx = \cf5 bindex\cf1 ((\cf5 member\cf1 (\f0 Colus_codes\f5 ,\f1 OB_ITIS_CODE\f5 )));\par
Org_co = \f1 OB_ITIS_CODE[co_idx];\f5\par
Np_idx = \cf5 bindex\cf1 ((\cf5 member\cf1 (\f0 Neptunea_codes\f5 ,\f1 OB_ITIS_CODE\f5 )));\par
Org_np = \f1 OB_ITIS_CODE[np_idx];\f5\par
\cf2 // Note: Have to replace bycatch codes\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f1 OB_ITIS_CODE\f0 [\f5 bn_idx] = 700;\f0\par
\f1 OB_ITIS_CODE\f0 [\f5 co_idx] = 800;\f0\par
\f1 OB_ITIS_CODE\f0 [\f5 Np_idx] = 900;\par
\cf2\lang1033\f0 //back_map(3)\cf1\par
\cf4 back_map\cf1 (7)\lang4105\f5\par
\cf4\lang1033\f0 multi_Plot\cf1 (\lang4105 Good_tows,\lang1033 (700 800 900),\cf5 strfold\cf1 ("Buccinum/Colus/Neptunea","/"),"Whelk Distribution")\lang4105\f5\par
\f1 OB_ITIS_CODE\f0 [\f5 bn_idx] = Org_bn;\f0\par
\f1 OB_ITIS_CODE\f0 [\f5 co_idx] = Org_co;\f0\par
\f1 OB_ITIS_CODE\f0 [\f5 Np_idx] = Org_np;\f0\par
\f5\par
\par
\par
\par
\cf2\f0 // plot length frequency  Note: weighted by total clam catch weight\cf1\par
\lang1033 f\cf3 unction\cf1  \cf4 plot_length_frequency\cf1 (sel_species, tow, scale_to_catch)\{\par
  clams = \cf4 Get_catch_2_orc\cf1 (sel_species,tow,1); \cf2 // Standardized surfclam catch   \par
\f5   // -----------------------------------------------------------------------------------\cf1\par
  \cf2 // Will have to add other species to Freq_Sample Data file\cf1\par
  \cf2 // -----------------------------------------------------------------------------------\cf1\par
  tt = \cf5 cat\cf1 (2,\f0 FS_tow_index\f5 ,weight_measured,\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (fs_tow),2),\cf5 cat\cf1 (0,0.,1.)));  \cf2 // weights of measured clams per tow\cf1\par
\lang4105\f0   tt[\cf5\f5 index\cf1 (\lang1033\f0 FS_tow_index\lang4105\f5 ,\lang1033\f0 clams[;1]\lang4105\f5 );3] = \lang1033\f0 clams\lang4105\f5 [;2];                               \cf2 // Matching standardized quahog catch per tow\cf1\par
  z_indx = \cf5 bindex\cf1 (tt[;2]>0)\par
  tt[z_indx;4] = tt[z_indx;3]/tt[z_indx;2];                \cf2 // factor to go from measured sample to total clam catch\cf1\par
\f0   datam = \cf5 cat\cf1 (2,\lang1033 LF_tow_index\lang4105 ,lf_len,\lang1033 lf\lang4105 _N_at_len,\cf5 shape\cf1 (\cf5 len\cf1 (lf_len),1.));               \cf2 // Set up matrix for data aggregation\cf1\par
\lang1033   datam[;4]= tt[\cf5 index\cf1 (tt[;1],datam[;1]);4];\par
  datam = datam[\cf5 bindex\cf1 (datam[;3] > 0);];     \cf2 // remove lengths with no clams\cf1\par
\lang4105\f5   Datam = datam[\cf5 bindex\cf1 (datam[;1] == tow);];  \cf2 // select single tow\cf1\par
\f0   \cf5 Aggregation_Type\cf1 ("TOTAL");\par
  \cf3 if\cf1 (\lang1033 scale_to_catch == 1)\{\par
\lang4105\tab   Aggdata = \cf5 aggregate\cf1 (1.,1.,\cf5 cat\cf1 (2,\lang1033 datam[;2]\lang4105 ,\cf5 shape\cf1 (\cf5 len\cf1 (\lang1033 datam[;2]\lang4105 ),1.),\lang1033 datam[;3]*datam[;4]\lang4105 ));    \cf2 // total catch\cf1\par
  \} \cf3 else\cf1  \{\par
\tab   Aggdata = \cf5 aggregate\cf1 (5.,1.,\cf5 cat\cf1 (2,\lang1033 datam[;2]\lang4105 ,\cf5 shape\cf1 (\cf5 len\cf1 (\lang1033 datam[;2]\lang4105 ),1.),\lang1033 datam[;3]\lang4105 ));              \cf2 // measured catch\cf1\par
\f5   \};\par
  \cf5 Data_Window\cf1 (0,150,0,10.*\cf5 ceil\cf1 (1.05*\cf5 max\cf1 (aggdata[;3])/10.));\par
  \cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (30),\cf5 mm\cf1 (140));\par
  \cf5 data_projection\cf1 ("NIL")\par
  \cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
  \cf5 Axis\cf1 (10.,10.,1.0,5.,1,0,1,0,0);\par
\f0   \cf5 Data_Histogram\cf1 (5.,0.,aggdata[;1 3 3]);\par
  \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (7.),\cf5 cat\cf1 ("Sampled n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (\lang1033 datam[;3]\lang4105 )))));\par
  \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (17.),\cf5 cat\cf1 ("Tow = ",\cf5 str\cf1 (tow)));\par
  \cf3 if\cf1 (\lang1033 scale_to_catch == 1)\{\cf5\lang4105 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (5.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (12.),\cf5 cat\cf1 ("Estimated total n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (aggdata[;3])))));\};\par
\};\par
\f5\par
\cf4\lang1033\f0 plot_length_frequency\cf1 (80983, 200, 1)\par
\lang4105\f5\par
\cf2\f1 // ---------------------------------------------------------------------------------------------------\cf1\lang1033\f2\par
\cf2\lang4105\f1 // Plots each individual tow length frequency with multiple plots per page\cf1\lang1033\f2\par
\cf2\lang4105\f1 // ---------------------------------------------------------------------------------------------------\cf1\lang1033\f2\par
F\cf3 unction\cf1  \cf4\lang4105\f1 LF_\lang1033\f2 tow_loop\cf1 (\f0 sel_species, \lang4105\f1 sel_\lang1033\f2 tows) \{\par
\lang4105\f1    bot = 30.; top = 260.; left = 30.; right = 260.; sizex = 40.; spacex = 5.;  sizey = 40.; spacey = 5.;\par
  x = left; y = top; \lang1033\f2 plot = \lang4105\f1 1;page = 1;\lang1033\f2\par
  $ntows = \cf5 len\cf1 (\lang4105\f1 sel_\lang1033\f2 tows);\par
\lang4105\f1   cols_pp = \cf5 int\cf1 ((right+spacex-left)/(sizex+spacex));  \cf2 // columns per page\cf1\par
  rows_pp = \cf5 int\cf1 ((top-bot-spacey)/(sizey+spacey));     \cf2 // rows per page\cf1\par
  pages = $ntows/(cols*rows*1.0)                      \cf2 // number of pages (decimal)\cf1\lang1033\f2\par
  axright = axtop = 0;\par
  axleft = 1;\par
 \lang4105\f1  \cf3\lang1033\f2 for\cf1 ($t = 1; $t <= $ntows; $t = $t ++) \{\par
   \lang4105\f1    \cf5\lang1033\f2 print\cf1 ("Doing tow #",\lang4105\f1 sel_\lang1033\f2 tows[$t]);\par
 \cf2\lang4105\f1 //\lang1033\f2      if((Illust_out == 1)&&($t == 1)) \{new_plot(plot_name,0);\}\cf1\par
      \cf6 Data_Viewport\cf1 (\cf6 mm\cf1 (x),\cf6 mm\cf1 (x + sizex - spacex),\cf6 mm\cf1 (y - sizey),\cf6 mm\cf1 (y));\par
      axbot  = \lang4105\f1 0\lang1033\f2 ;\par
\lang4105\f1       \cf3 if\cf1 ((($ntows - plot) < cols_pp)||(Plot >((rows_pp-1)*cols_pp)))\{\par
\tab       axbot = 1;\par
\tab   \} \cf3 else\cf1\{\par
\lang1033\f2\tab\tab\lang4105\f1   axbot = 0;                    \cf2 // Can set to 0 to omit bottom axis\cf1\par
\lang1033\f2\tab\lang4105\f1   \};\lang1033\f2\par
\f0       Multi_plot_length_frequency(sel_species,\lang4105\f1 sel_\lang1033\f2 tows[$t]\f0 , 1)\par
\f2       x = x + sizex; plot = plot + 1;\par
\lang4105\f1      \lang1033\f2  axleft = \lang4105\f1 0\lang1033\f2 ;\par
      \cf3 if\cf1  ((x + sizex) >= right) \cf3 then\cf1  \{\par
        x = left;\par
        y = y - sizey - spacey;\par
     \lang4105\f1   \lang1033\f2  axleft = 1;\par
      \};\par
      \cf3 if\cf1  ((y - sizey) <= bot) \cf3 then\cf1  \{\par
        page = page + 1;\par
        \cf6 Character_Height\cf1 (\cf6 pts\cf1 (12.));\par
        \cf5 Draw_text\cf1 (\cf5 mm\cf1 (30.),\cf5 mm\cf1 (15),"Figure xx. \lang4105\f1 Length Frequencies\lang1033\f2  \cf3 for\cf1  \lang4105\f1 2010 Banquereau\lang1033\f2  survey stations.");\par
        \cf6 Character_Height\cf1 (\cf6 pts\cf1 (8.));\par
      \lang4105\f1   \cf5\lang1033\f2 next_page\cf1 ();\par
        plot = 1;\par
        y = top;\par
  \lang4105\f1       \lang1033\f2 axleft = 1;\par
      \};\par
  \};\par
  \cf3 if\cf1 (y \cf3 !\cf1 = top)\{      \cf2 /* if last plot not labeled yet */\cf1\par
    \cf6 Character_Height\cf1 (\cf6 pts\cf1 (12.));\par
    \cf5 Draw_text\cf1 (\cf5 mm\cf1 (30.),\cf5 mm\cf1 (15),"Figure xx. \lang4105\f1 Length Frequencies\lang1033\f2  \cf3 for\cf1  \lang4105\f1 2010 Banquereau\lang1033\f2  survey stations.");\par
    \cf5 Character_Height\cf1 (\cf5 pts\cf1 (8.));\par
\cf2\lang4105\f1 //\lang1033\f2     if(Illust_out == 1) \{screen_output;\};  /* if Illustrator output selected close last file */\cf1\par
  \};\par
  \cf3 return\cf1 (\lang4105\f1 " "\lang1033\f2 );\par
\};\par
\cf2 /\lang4105\f1 /\lang1033\f2  ---------------------------------------------------------------------------------------------\lang4105\f1 -----------------------------------------\cf1\lang1033\f2\par
\f0 f\cf3 unction\cf1  \cf4 Multi_plot_length_frequency\cf1 (sel_species, tow, scale_to_catch)\{\par
\f5   \cf2 // -----------------------------------------------------------------------------------\cf1\par
  \cf2 // Version for LF_tow_loop\cf1\par
  \cf2 // -----------------------------------------------------------------------------------\cf1\par
\pard\lang4105   agg_tot_lf = \cf4\lang1033\f0 Total_length_frequency\cf1 (sel_species, tow,1); \cf2 // Produced LF_datam = tow,len,#at_Len,scale_to_catch_factor\cf1\par
\lang4105\f5   Agg_Samp_lf = \cf5 aggregate\cf1 (L\lang1033\f0 F_datam[;2],5.0,"Total",LF_datam[;3])\lang4105\f5\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160   \cf5 Data_Window\cf1 (0,170,0,50);\par
 \cf2 // Data_Viewport(mm(40),mm(192),mm(30),mm(140));\cf1\par
  \cf5 data_projection\cf1 ("NIL")\par
  \cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
  \cf5 Axis\cf1 (25.,10.,5.0,5.,Axleft,0,axbot,0,0);\par
\f0   \cf5 Data_Histogram\cf1 (5.,2.5,\f5 Agg_Samp_lf\f0 [;1 2 2]);\par
\f5   \cf5 Character_Height\cf1 (\cf5 pts\cf1 (8));\par
\f0   \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (2.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (7.),\cf5 cat\cf1 ("n = ",\cf5 str\cf1 (\cf5 int\cf1 (\cf5 sum\cf1 (\f5 Agg_Samp_lf\lang1033\f0 [;2]\lang4105 )))));\par
  \cf5 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (2.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (4.),\cf5 cat\cf1 ("Tow = ",\cf5 str\cf1 (tow)));\par
\f5   \cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
\f0\};\par
\cf2\lang1033\f2 /\lang4105\f1 /\lang1033\f2  ---------------------------------------------------------------------------------------------\lang4105\f1 -----------------------------------------\cf1\lang1033\f2\par
\cf4\lang4105\f1 LF_\lang1033\f2 tow_loop\cf1 (\f0 80983, \lang4105\f1 good_\lang1033\f2 tows)\lang4105\f5\par
\par
\par
\par
\cf2 // Check on sample weights in different files ----------------\cf1\par
F\cf3 unction\cf1  \cf4 check_sample_weights\cf1 ()\{\par
\pard\f0   Good_tows = Tow_index[\cf5 bindex\cf1 ((Tow_type == 1)&&(Tow_Quality == 1)&&(t_SURVEY == "\f5 T12010-01\f0 "))]; \cf2 // list of regular survey tows that were sussessful \cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033   \cf2 //Surfclam, propellerclam,cockles and quahogs\cf1\par
  species_cds= 80983 81343 81763 80944 80879;   \cf2 //\cf1\par
  Species_names = \cf5 strfold\cf1 ("Arctic Surfclams/Ocean Quahogs/Propellerclams/Atlantic Surfclams/Greenland Cockles","/");\par
  \cf3 for\cf1  (sp = 1; sp <= \cf5 len\cf1 (species_cds); sp = sp++)\{\par
\tab\tab\cf5 print\cf1 ("Species = ",\cf5 str\cf1 (species_cds[sp]));\par
\pard\tab\cf5 print\cf1 (\lang4105\f5 " Tow     Catch   Wgt_Measured Wgt_UnMeas  Wgt_Morph  Num_Measured Wgt_Not_Measured Catch>Sample  Morph<=Measured  Sample%of_catch  Ave_weight")\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\lang1033\f0\tab\tab omat = \cf4 Get_catch_2_orc\cf1 (species_cds[sp],good_tows,0)   \cf2 // Unstandardized catch per tow for selected species and tows\cf1\par
\pard\lang4105\f5\tab omat = \cf5 cat\cf1 (2,omat,\cf5 shape\cf1 (\cf5 cat\cf1 (0,\cf5 len\cf1 (omat)[1],9),0.0))\par
\tab\cf3 for\cf1 (l = 1; l<=\cf5 len\cf1 (omat)[1]; l = l++)\{\par
\tab\tab r_idx = \cf5 bindex\cf1 ((fs_tow_index==omat[l;1])&&(fs_species == \lang1033\f0 species_cds[sp]));\par
\tab\tab\cf3 if\cf1 (\cf5 len\cf1 (r_idx) > 0)\{\par
\lang4105\f5\tab\tab\tab omat[l;3] = weight_measured[r_idx];\par
\tab\tab\tab omat[l;4] = \f0 Weight_unmeasured\f5 [r_idx];\par
\tab\tab\tab omat[l;5] = \f0 Weight_morph\f5 [r_idx];\par
\tab\tab\tab omat[l;6] = \f0 num_measured\f5 [r_idx];\par
\tab\tab\tab omat[l;7] = \f0 Weight_Not_retained\f5 [r_idx];\par
\tab\tab\};\par
\tab\};\par
\tab omat[;8] = omat[;2]>=(omat[;3]+omat[;4]);  \cf2 // check: catch greater than or equal sample weights\cf1\par
\tab omat[;9] = omat[;5]<=omat[;3];             \cf2 // check: Morphometrics sample <= weight measured\cf1\par
\tab c_idx = \cf5 bindex\cf1 (omat[;2] > 0.);\par
\tab omat[c_idx;10] = 100*(omat[c_idx;2]-(omat[c_idx;3]+omat[c_idx;4]))/omat[c_idx;2]; \cf2 // check: samples as % of catch\cf1\par
\tab m_idx = \cf5 bindex\cf1 (omat[;6] > 0.);\par
\tab omat[m_idx;11] = omat[m_idx;3]/omat[m_idx;6]; \cf2 // check: Average weight of clam\cf1\par
\cf0\tab Print(sprintf("%4.0f  %9.4f %9.2f   %9.2f  %9.2f   %9.0f      %9.2f       %9.2f      %9.2f         %9.2f    %9.2f",omat));\cf1\par
  \};\par
\};\par
check_sample_weights();\par
\par
\cf2 // Honey hole area\cf1\par
Honey_Hole =  -57.445422 44.818167 -57.527814 44.780211 -57.560707 44.742230 -57.634795 44.686745 -57.675991 44.634046 -57.721179 44.584371 -57.684135 44.522814;\par
Honey_Hole =  \cf5 cat\cf1 (0,Honey_Hole, -57.614197, 44.522814, -57.544260, 44.519854, -57.466020, 44.549220, -57.424824, 44.584371, -57.412529, 44.654609, -57.383628);\par
Honey_Hole =  \cf5 shape\cf1 (16 2,\cf5 cat\cf1 (0,Honey_Hole,  44.701387, -57.375485, 44.756859, -57.404226, 44.791884, -57.445422 44.818167));\par
\cf5 polygon_draw\cf1 (Honey_hole)\par
HH_tows = tow_index[\cf5 bindex\cf1 (\cf5 inside\cf1 (Honey_hole,pos)&&(\cf5 member\cf1 (good_tows,tow_index)))]; \cf2 // good tows inside Honey Hole area\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f1 L\cf4 F_\lang1033\f2 tow_loop\cf1 (\f0 80983, \lang4105\f5 HH_tows\lang1033\f2 )\lang4105\f5\par
\pard\par
Honey_Hole = -57.449574 44.765589 -57.474164 44.771483 -57.498913 44.762641 -57.527814 44.733497 -57.556555 44.713076 -57.589448 44.689696 -57.610046 44.660401;\par
Honey_Hole =  \cf5 cat\cf1 (0,Honey_Hole, -57.618349, 44.660401, -57.630644, 44.639955, -57.647090, 44.628251, -57.692438, 44.601881, -57.725330, 44.575500, -57.729482, 44.540344);\par
Honey_Hole =  \cf5 cat\cf1 (0,Honey_Hole, -57.721179, 44.508127, -57.684135, 44.499358, -57.638947, 44.499358, -57.593600, 44.508127, -57.552404, 44.514048, -57.531806, 44.525774);\par
Honey_Hole =  \cf5 cat\cf1 (0,Honey_Hole, -57.503064, 44.531580, -57.478315, 44.537498, -57.457717, 44.557981, -57.449574, 44.572656, -57.420673, 44.616545, -57.404226, 44.657448);\par
Honey_Hole =  \cf5 shape\cf1 (30 2,\cf5 cat\cf1 (0,Honey_Hole, -57.375485, 44.686745, -57.375485, 44.710125, -57.371334, 44.750962, -57.387780, 44.771483, -57.449574, 44.768536));\par
HH_tows = tow_index[\cf5 bindex\cf1 (\cf5 inside\cf1 (Honey_hole,pos)&&(\cf5 member\cf1 (good_tows,tow_index)))]; \cf2 // good tows inside Honey Hole area\cf1\par
\cf5 polygon_draw\cf1 (Honey_hole)\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f1 LF_\lang1033\f2 tow_loop(\f0 80983, \lang4105\f5 HH_tows\lang1033\f2 )\par
\lang4105\f5\par
\par
\cf2 // plot age-Length data from aged clams from honey Hole area\cf1\par
hh_age_idx = \cf5 bindex\cf1 ((\cf5 member\cf1 (hh_tows,m_tow)&&(age\cf3 !\cf1 =\cf5 NAN\cf1 ())))\par
\cf5 Data_Window\cf1 (0,80,0,170);\par
\cf5 Data_Viewport\cf1 (\cf5 mm\cf1 (40),\cf5 mm\cf1 (192),\cf5 mm\cf1 (30),\cf5 mm\cf1 (140));\par
\cf5 data_projection\cf1 ("NIL")\par
\cf5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
\pard\cf0 Line_Colour("BLACK");\par
Fill_Colour("BLACK");\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5 Axis\cf1 (10.,25.,5.0,5.,1,0,1,0,0);\par
\cf5\f0 Data_points\cf1 (\f5 age[hh_age_idx],\f0 leng[\f5 hh_age_idx]);\par
\cf5\f0 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (2.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (15.),"Age data from Honey Hole");\par
\cf5 Draw_text\cf1 (\cf5 Ave\cf1 (\cf5 getview\cf1 (1),\cf5 getview\cf1 (2))- \cf5 mm\cf1 (5.),\cf5 getview\cf1 (3) - \cf5 mm\cf1 (15.),"Age");\par
\pard\cf0\f5 Character_Rotation(90);\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5\f0 Draw_text\cf1 (\cf5 getview\cf1 (1)- \cf5 mm\cf1 (5.),\cf5 Ave\cf1 (\cf5 getview\cf1 (3),\cf5 getview\cf1 (4)) - \cf5 mm\cf1 (10.),"Shell Length (mm)");\par
\pard\cf5\f5 Character_Rotation\cf1 (0);\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160 mid_tows = m_tow[\cf5 bindex\cf1 ((Pos[;1]>=-59.0)&&(Pos[;1]<=-58.0))];\par
Mid_a_idx = \cf5 bindex\cf1 ((\cf5 member\cf1 (mid_tows,m_tow)&&(age \cf3 !\cf1 = \cf5 NAN\cf1 ())));\par
\pard\cf5 Line_Colour\cf1 ("RED");\par
\cf5 Fill_Colour\cf1 ("RED");\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5\f0 Data_points\cf1 (\f5 age[mid_a_idx],\f0 leng[\f5 mid_a_idx]);\par
\cf5\f0 Draw_text\cf1 (\cf5 getview\cf1 (1)+\cf5 mm\cf1 (2.),\cf5 getview\cf1 (4) - \cf5 mm\cf1 (7.),"Age data from 58-59 degrees Longitude");\par
\pard\cf5\f5 Line_Colour\cf1 ("BLACK");\cf0\par
Fill_Colour("BLACK");\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\par
\cf5 cat\cf1 (2,m_tow[hh_age_idx],M_species[hh_age_idx],clam[hh_age_idx],age[hh_age_idx])\par
\par
\par
\par
\par
\cf2 //******************************************************************************************************************************************************************\cf1\par
\cf2 // Looking at difference in contours 2004 to 2010 surveys\par
//******************************************************************************************************************************************************************\cf1\par
\pard\cf5 Matrix_read\cf1 ("F:\\Dale\\\\Clam Work\\2010 Banquereau Survey\\Results\\\f1 M_2010_contours.txt\f5 ","Cont_2010",0);\par
\cf5\f1 Matrix_Read\cf1 ("F:\\Dale\\Clam Work\\2010 Banquereau Survey\\Results\\M_2004_contours.txt","\f5 Cont_2004\f1 ",0);\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f5 Back_Map(4);\par
\cf4\f0 Map_objects\cf1 (1,1);\par
\lang1033\f5 Set_Banquereau_contours();\par
\pard\cf5\lang4105 line_colour\cf1 ("GREEN");\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5 Polygon_draw\cf1 (Banquereau_90m_c)\par
\pard\cf5 Line_Colour\cf1 ("BLACK");\par
\cf5 polygon_draw\cf1 (cont_2010[\cf5 bindex\cf1 (cont_2010[;4] == 500);1 2 3])\par
\cf5 polygon_draw\cf1 (cont_2010[\cf5 bindex\cf1 (cont_2010[;4] == 400);1 2 3])\par
\cf5 polygon_draw\cf1 (cont_2010[\cf5 bindex\cf1 (cont_2010[;4] == 300);1 2 3])\par
\cf5 polygon_draw\cf1 (cont_2010[\cf5 bindex\cf1 (cont_2010[;4] == 200);1 2 3])\par
\cf5 polygon_draw\cf1 (cont_2010[\cf5 bindex\cf1 (cont_2010[;4] == 100);1 2 3])\par
\cf5 polygon_draw\cf1 (cont_2010[\cf5 bindex\cf1 (cont_2010[;4] ==   0);1 2 3])\par
\cf5 line_colour\cf1 ("RED");\par
\cf0 polygon_draw(cont_2004[bindex(cont_2004[;4] == 500);1 2 3])\cf1\par
\cf5 polygon_draw\cf1 (cont_2004[\cf5 bindex\cf1 (cont_2004[;4] == 400);1 2 3])\par
\cf5 polygon_draw\cf1 (cont_2004[\cf5 bindex\cf1 (cont_2004[;4] == 300);1 2 3])\par
\cf5 polygon_draw\cf1 (cont_2004[\cf5 bindex\cf1 (cont_2004[;4] == 200);1 2 3])\par
\cf5 polygon_draw\cf1 (cont_2004[\cf5 bindex\cf1 (cont_2004[;4] == 100);1 2 3])\par
\cf5 polygon_draw\cf1 (cont_2004[\cf5 bindex\cf1 (cont_2004[;4] ==   0);1 2 3])\par
\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\par
\par
\par
\par
\par
\cf2 // Stratified estimates of non-fished areas to compare 2004 and 2010 surveys\cf1\par
\lang1033\f2 Function stratified_est(ndata) \{\par
  n = \cf5 len\cf1 (ndata)[1];                                      \lang4105\f1        \lang1033\f2  \cf2 // # tows in file\cf1\par
  tstrata = \cf5 distinct\cf1 (ndata[;2]);                          \lang4105\f1         \cf2\lang1033\f2 // list of strata in data file\cf1\par
  nstrata = \cf5 len\cf1 (tstrata);                                 \lang4105\f1         \cf2\lang1033\f2 // # of strata in data file\cf1\par
  \cf2\lang4105\f1 // \lang1033\f2 $SetstrataA = select(member(tstrata,stratad[;1]),stratad); \lang4105\f1   \lang1033\f2 // Set of selected strata existing in file\cf1\par
  \cf2\lang4105\f1 // \lang1033\f2 totalA = sum($SetstrataA[;3]);                        \lang4105\f1      \lang1033\f2   // Total area of above strata\cf1\par
  smatrix = \cf5 shape\cf1 (\cf5 cat\cf1 (0,nstrata,7),0.);                   \lang4105\f1        \lang1033\f2  \cf2 // empty output matrix for strata data\cf1\par
  \cf2\lang4105\f1 // \lang1033\f2 AllStrataA = shape(nstrata,0.);                        \lang4105\f1     \lang1033\f2   // empty output matrix for strata areas\cf1\par
  AllStrataA = \lang4105\f1 624. 967. 1138. 260.\lang1033\f2 ;                       \lang4105\f1     \lang1033\f2    \cf2 // strata areas\lang4105\f1  in km sq\cf1\lang1033\f2\par
  totalA = \cf5 sum\cf1 (AllStrataA);                       \lang4105\f1      \lang1033\f2   \lang4105\f1         \lang1033\f2  \cf2 // Total area of above strata\cf1\par
  \cf3 for\cf1 (s = 1; s <= nstrata; s = s + 1) \{                  \lang4105\f1        \lang1033\f2   \cf2 // loop through strata\cf1\par
    \cf2\lang4105\f1 // \lang1033\f2 AllStrataA[s] = scalar(select($SetstrataA[;1] == scalar(tstrata[s]),$SetstrataA[;3]));\cf1\par
    $nsdata = \cf5 select\cf1 (ndata[;2] == tstrata[s],ndata);    \lang4105\f1          \lang1033\f2  \cf2 // select tows for this strata\cf1\par
    ns = \cf5 len\cf1 ($nsdata)[1];                                 \lang4105\f1         \cf2\lang1033\f2 // #tows for this strata\cf1\par
    smean = \cf5 sum\cf1 ($nsdata[;1]) / ns;                        \lang4105\f1         \cf2\lang1033\f2 // mean #/tow\cf1\par
    swgt = AllStrataA[s]/totalA;                           \lang4105\f1      \lang1033\f2   \cf2 // weight for this strata\cf1\par
\cf2\lang4105\f1 //print("s= ",s, ", \lang1033\f2 AllStrataA[s]\lang4105\f1  = ",\lang1033\f2 AllStrataA[s]\lang4105\f1 ,", totalA = ",totalA,", swgt = ",swgt)\cf1\lang1033\f2\par
    svar = (sum(pow($nsdata[;1],2)) - pow(sum($nsdata[;1]),2)/ns)/(ns - 1); // variance for this strata\par
    ssd = \cf5 sqrt\cf1 (svar);                                    \lang4105\f1         \lang1033\f2  \cf2 // Std. deviation for this strata\cf1\par
    StErr = ssd/\cf5 sqrt\cf1 (ns);                                \lang4105\f1         \lang1033\f2  \cf2 // Std. Error for this strata\cf1\par
    smatrix[s;] = cat(0,tstrata[s],ns,smean,swgt,svar,ssd,Sterr); // put in matrix\par
  \};\par
  StMean = \cf5 sum\cf1 (smatrix[;3] * smatrix[;4]);              \lang4105\f1         \lang1033\f2   \cf2 //stratified mean \lang4105\f1 kg/std tow\cf1\lang1033\f2\par
  STVarMean = \cf5 sum\cf1 (\cf5 pow\cf1 (smatrix[;4],2) * smatrix[;5]/smatrix[;2]);  \cf2 // Variance of St. Mean\cf1\par
\lang4105\f1   factor = \lang1033\f2   \lang4105\f5 totalA*1000000./500./1000.                           \cf2 // Area in Km sq * 10^6 /500. msq/tow /1000. kg/t\cf1\lang1033\f2\par
  StTotal = \lang4105\f1 factor\lang1033\f2  * Stmean;                            \lang4105\f1         \lang1033\f2   \cf2 // Stratified Total\lang4105\f1   km sq/500 msq = 2000.\cf1\lang1033\f2\par
  STVarTotal = \cf5 pow\cf1 (\lang4105\f1 factor\lang1033\f2 ,2) * STVarMean;       \lang4105\f1                  \lang1033\f2  \cf2 // Variance of St. Total\cf1\par
\pard\cf0\f0   eff_df = pow(sum(pow(smatrix[;4],2)*pow(smatrix[;5],2)/smatrix[;2]),2)/(sum(pow(smatrix[;4],4)*pow(smatrix[;5],4)/(pow(smatrix[;2],2)*(smatrix[;2]-1.))))\cf1\par
  t_val = \cf4\lang4105\f5 t_alpha_95\cf1 (\cf4 round\cf1 (0,\lang1033\f0 eff_df)\lang4105\f5 )\par
\lang1033\f0   CI = t_val*\cf5\f2 sqrt\cf1 (STVarTotal)\lang4105\f1 ;\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf2\lang1033\f2 /\lang4105\f1 /\lang1033\f2   stsemean = sqrt(STVarMean)/sqrt(sum(smatrix[;2])) * sqrt(1-(sum(smatrix[;2])/totalA); \cf1\par
  \cf5 print\cf1 ("str  n    Mean      Weight   Variance      Std Dev   Std Err");\par
  print(smatrix);\par
  Print("Stratified Mean     = ",stmean);\par
  Print("Var of St. Mean     = ",STVarMean);\par
  Print("St.Err of St. Mean  = ",sqrt(STVarMean));\par
  Print("Stratified Total    = ",StTotal);\par
  Print("Var of St. Total    = ",STVarTotal);\par
  Print("St.Err of St.Total  = ",sqrt(STVarTotal));\par
\pard\f0   \cf5 Print\cf1 ("Effective df        = ",\cf4 round\cf1 (0,eff_df));\par
  \cf5 Print\cf1 ("Confidence Int. +-  = ",CI);\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f2   \cf3 return\cf1 (\cf5 cat\cf1 (0,stmean,stTotal,StvarMean,stvarTotal));\par
\};\par
\cf2 /\lang4105\f1 /-\lang1033\f2 ----------------------------------------------------------------------------------------------- \cf1\par
\cf2 /* ----------------------------------------------------------------------------------------------- */\cf1\par
\lang4105\f5\par
\cf4 Non_fishing_polygons_2010\cf1 (0);\par
strata = \cf5 cat\cf1 (2,t_tow,\cf5 shape\cf1 (\cf5 len\cf1 (t_tow),0));\par
strata[;2] = strata[;2] + (\cf5 inside\cf1 (SE_poly,pos)*1); \cf2 // Note: all polygons are seperate, no joint boundries\cf1\par
strata[;2] = strata[;2] + (\cf5 inside\cf1 (NE_poly,pos)*2)\par
strata[;2] = strata[;2] + (\cf5 inside\cf1 (Cen_poly,pos)*3)\par
strata[;2] = strata[;2] + (\cf5 inside\cf1 (WE_poly,pos)*4)\par
strata = strata[\cf5 bindex\cf1 ((strata[;2] > 0.0)&&(Tow_type == 1)&&((Tow_Quality == 1)||(Tow_Quality == 2))&&(t_SURVEY == "T12010-01"));];       \cf2 // reduce to good tows in strata(polygons)\cf1\par
strata = \cf5 cat\cf1 (2,strata,\cf4\lang1033\f0 Get_catch_2_orc\cf1 (80983,\lang4105\f5 strata[;1],1));   \cf2 // Add catches\cf1\par
S_est_2010 = \cf4\lang1033\f2 stratified_est\cf1 (\lang4105\f1 strata[;4 2]\lang1033\f2 )\lang4105\f1 ;\lang1033\f2  \lang4105\f5\par
\par
\cf2 // Compare to 2004 estimate\cf1\par
\f0 in_path = \cf0\f5 "F:\\Dale\\Clam Work\\Combined Surveys\\Data\\Text Data\\\cf1\f0 ";   \cf2 // Laptop folder path\cf1\par
\cf4\f5 Read_Combined_survey_data\cf1 ("CK2004-01");\par
strata = \cf5 cat\cf1 (2,Tow_index,\cf5 shape\cf1 (\cf5 len\cf1 (Tow_index),0));\par
strata[;2] = strata[;2] + (\cf5 inside\cf1 (SE_poly,pos)*1); \cf2 // Note: all polygons are seperate, no joint boundries\cf1\par
strata[;2] = strata[;2] + (\cf5 inside\cf1 (NE_poly,pos)*2)\par
strata[;2] = strata[;2] + (\cf5 inside\cf1 (Cen_poly,pos)*3)\par
strata[;2] = strata[;2] + (\cf5 inside\cf1 (WE_poly,pos)*4)\par
strata = strata[\cf5 bindex\cf1 ((strata[;2] > 0.0)&&(Tow_type == 1)&&((Tow_Quality == 1)||(Tow_Quality == 2))&&(t_SURVEY == "CK2004-01"));];       \cf2 // reduce to good tows in strata(polygons)\cf1\par
strata = \cf5 cat\cf1 (2,strata,\cf4\lang1033\f0 Get_catch_2_orc\cf1 (80983,\lang4105\f5 strata[;1],1));   \cf2 // Add catches\cf1\par
S_est_2004 = \cf4\lang1033\f2 stratified_est\cf1 (\lang4105\f1 strata[;4 2]\lang1033\f2 )\lang4105\f1 ;\lang1033\f2  \lang4105\f5\par
\par
\par
\par
\par
\cf2 // SAR map\cf1\par
\par
\cf4 Back_map\cf1 (4);\par
\lang1033 Set_Banquereau_contours();\par
\lang4105 survey_poly = Banquereau_90m_c\f0 ;\f5\par
\cf5 Line_Colour\cf1 ("RED");\par
\cf5 polygon_draw\cf1 (survey_poly\f0 )\f5 ;\par
\cf5 Line_Colour\cf1 ("BLACK");\par
\pard outline_poly=\cf5 shape\cf1 (5 2,\cf5 cat\cf1 (0,\cf5 getwind\cf1 (1), \cf5 getwind\cf1 (3), \cf5 getwind\cf1 (2), \cf5 getwind\cf1 (3), \cf5 getwind\cf1 (2), \cf5 getwind\cf1 (4), \cf5 getwind\cf1 (1), \cf5 getwind\cf1 (4)))\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5\lang1033\f0 Data_Viewport\cf1 (\cf5 mm\cf1 (60.),\cf5 mm\cf1 (\lang4105 140\lang1033 .),\cf5 mm\cf1 (120.),\cf5 mm\cf1 (1\lang4105 60\lang1033 .));\par
\cf5 Data_Window\cf1 (-6\lang4105 7\lang1033 ,-57,43.,45); \cf2 // Banquereau \cf1\par
\pard\cf0\lang4105\f5 Background_poly = shape(5 2,cat(0,getwind(1), getwind(3), getwind(2), getwind(3), getwind(2), getwind(4), getwind(1), getwind(4)))\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\cf5 Fill_Grey\cf1 (1);\lang1033\f0\par
\cf5 draw_filled\cf1 (1)\par
\cf5 polygon_draw\cf1 (background_poly);\par
\cf5 draw_filled\cf1 (0);\cf5\lang4105\f5 Fill_Grey\cf1 (0);\lang1033\f0\par
\cf5\lang4105\f5 Character_Height\cf1 (\cf5 pts\cf1 (12));\par
\cf5\lang1033\f0 overlay_rangs\cf1 (3,1,0,0,"BLACK","\lang4105 KHAKI4\lang1033 ","white"); \par
  Line_Type(1);\par
  \cf5 Overlay_File\cf1 ("C:\\\lang4105\f5 Program Files\\\lang1033\f0 ACON\\Overlays\\dc100");\par
  Line_Grey(0.75);\par
  Line_Type(3);\par
  \cf5 Overlay_File\cf1 ("C:\\\lang4105\f5 Program Files\\\lang1033\f0 ACON\\Overlays\\dc200");\par
  Line_Grey(0.);\par
  Line_Type(0);\par
\cf5\lang4105\f5 Line_Width\cf1 (\cf5 pts\cf1 (1.));\lang1033\f0\par
\cf5 polygon_draw\cf1 (background_poly);\lang4105\f5\par
\cf5 polygon_draw\cf1 (outline_poly);\par
\cf5 Line_Width\cf1 (\cf5 pts\cf1 (0.5));\par
\par
\par
\cf2 // Figure of selectivity curves\cf1\par
\cf2 //-------------------------------------------------------------------------------------------------------------------------------\cf1\par
   \cf3 Function\cf1  \cf4 Draw_Richards_Curve\cf1 (x,param) \{     \cf2 // Draw \f0 Richard's Selectivity Curve\cf1\f5\par
   \cf2 // xv = seq(min(x),max(x),(max(x) - min(x))/60.);\cf0\par
\cf1   xv = seq(1,180);\par
  yv = \cf5 pow\cf1 ((\cf5 exp\cf1 (param[1]+param[2]*xv)/(1+\cf5 exp\cf1 (param[1] + param[2] * xv))),1./param[3]);\par
  \cf5 data_Line\cf1 (xv,yv);\cf0\par
\cf1   L50 = (\cf5 log\cf1 (\cf5 pow\cf1 (0.5,param[3])/(1-\cf5 pow\cf1 (0.5,param[3])))-param[1])/param[2]; \cf2 // 50% selectivity\cf1\par
\};\par
\cf2\lang1033\f3 // ------------------------------------------------------------------------------------------------------------\cf1\par
\pard\cf5\lang4105\f5 data_projection\cf1 ("NIL")\par
\cf5 Data_Window\cf1 (0,200,0,1);\cf0\par
Data_Viewport(mm(50),mm(180),mm(100),mm(230));\cf1\par
\cf5 Axis\cf1 (20,.2,5.,0.10,1,0,1,0,0);\par
   \cf2 // -------------------Set up curve parameters -----------------------------------------------------------------------------------\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    \cf2 //-------------------------------------------------------------------------------------------------------------------------------\cf1\par
\pard    RichBanq2010 = -14.2175879 0.1894616 3.6212438;   \cf2 // Selectivity curve parameters from 2010 selectivity study\cf1\par
   RichGB2009 = -11.2440473 0.1572978 1.9208243;     \cf2 // Selectivity curve parameters from 2009 selectivity study\cf1\par
   RichBanq2004 = -8.6572194 0.1028071 0.7856736;    \cf2 // Selectivity curve parameters from 2004 selectivity study\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\f4\tab Richcomm = (\fs24 -2.70209482 0.05173582 0.23665877\fs18 ); \cf2 //   Selectivity curve for \f5 Commercial dredge\f4 r\cf1\par
\cf2\f5 /*\par
s_Curve(RichBanq2010)\par
   Yvec_2010 = yv;\par
   Richards_Curve_add(RichBanq2010,23.4);   // add 23.4 mm diff between 2010 survey and commercial 50% selectivity\par
   Yvec_comm = yv;\par
\pard */\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    \cf2 //-------------------------------------------------------------------------------------------------------------------------------\cf1\par
x = \cf5 seq\cf1 (1,200,1)\par
   \cf4 Draw_Richards_Curve\cf1 (x,RichBanq2010)\par
\pard    \cf5 Marker_Height\cf1 (\cf5 mm\cf1 (3.0));\par
  \cf5 data_points\cf1 (\cf5 shape\cf1 (1 2,(\cf5 cat\cf1 (0,L50, 0.5))))\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    \cf5 line_type\cf1 (1);\par
   \cf4 Draw_Richards_Curve\cf1 (x,RichBanq2004)\par
\pard\cf0   data_points(shape(1 2,(cat(0,L50, 0.5))))\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    \cf5 line_type\cf1 (2);\par
   \cf4 Draw_Richards_Curve\cf1 (x,Richcomm)\par
\pard\cf0   data_points(shape(1 2,(cat(0,L50, 0.5))))\cf1\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    \cf5 line_type\cf1 (0);\par
\pard\par
   \cf5 Line_Colour\cf1 ("GREEN");\par
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160    \cf4 Richards_Curve_add\cf1 (RichBanq2010,23.4);   \cf2 // add 23.4 mm diff between 2010 survey and commercial 50% selectivity\cf1\par
   \cf5 data_Line\cf1 (xv,yv);  \cf2 // ADJUSTMENT TO 2010 SURVEY DREDGE TO 50% SELECTIVITY OF COMMERCIAL\cf1\par
 \par
\par
\par
\par
\par
}
 